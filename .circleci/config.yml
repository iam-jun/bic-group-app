version: 2.1

orbs:
  android: circleci/android@2.0.3

jobs:
  ios-stg-update:
    macos:
      xcode: 14.0.0
    resource_class: medium #medium|large
    steps:
      - checkout
      - run:
          name: Import environment variables from Doppler
          command: |
             echo -e $STG_ENV > .env.staging
             echo APP_VERSION=${STG_APP_VERSION} >> .env.staging
             echo UPDATE_DESC=${STG_UPDATE_DESC} >> .env.staging
             echo -e $STG_FASTLANE_ENV > fastlane/.env
      - run:
          name: Install NPM
          command: npm install --legacy-peer-deps
      - run:
          name: Install AppCenter CLI
          command: npm install -g appcenter-cli
      - run:
          name: Install Bundle
          command: bundle install
      - run:
          name: CodePush update iOS Staging
          command: bundle exec fastlane ios update_staging

  ios-pro-update:
    macos:
      xcode: 14.0.0
    resource_class: medium #medium|large
    steps:
      - checkout
      - run:
          name: Import environment variables from Doppler
          command: |
              echo -e $PRO_ENV > .env.production
              echo APP_VERSION=${PRO_APP_VERSION} >> .env.production
              echo UPDATE_DESC=${PRO_UPDATE_DESC} >> .env.production
              echo -e $PRO_FASTLANE_ENV > fastlane/.env
      - run:
          name: Install NPM
          command: npm install --legacy-peer-deps
      - run:
          name: Install AppCenter CLI
          command: npm install -g appcenter-cli
      - run:
          name: Install Bundle
          command: bundle install
      - run:
          name: CodePush update iOS Production
          command: bundle exec fastlane ios update_production

  ios-stg:
    macos:
      xcode: 14.0.0
    resource_class: medium #medium|large
    steps:
      - checkout
      - run:
          name: Import environment variables from Doppler
          command: |
            echo -e $STG_ENV > .env.staging
            echo APP_VERSION=${STG_APP_VERSION} >> .env.staging
            echo UPDATE_DESC=${STG_UPDATE_DESC} >> .env.staging
            echo -e $STG_FASTLANE_ENV > fastlane/.env
            echo $API_KEY | base64 --decode >  fastlane/api_key_info.json
            echo $STG_GOOGLE_SERVICES_PLIST_IOS | base64 --decode > ios/Firebase/GoogleService-Info-Staging.plist
      - run:
          name: Install NPM
          command: npm install --legacy-peer-deps
      - run:
          name: Install AppCenter CLI
          command: npm install -g appcenter-cli
      - run:
          name: Install Bundle
          command: bundle install
      - run:
          name: Install Cocoapods
          command: cd ios && sudo gem install cocoapods
      - run:
          name: Install Pod
          command: cd ios && pod install
      - run:
          name: Fastlane Build, Deploy to TestFlight and Update CodePush
          command: bundle exec fastlane ios $STG_FASTLANE_LANE_IOS

  ios-pro:
    macos:
      xcode: 14.0.0
    resource_class: medium #medium|large
    steps:
      - checkout
      - run:
          name: Import environment variables from Doppler
          command: |
            echo -e $PRO_ENV > .env.production
            echo APP_VERSION=${PRO_APP_VERSION} >> .env.production
            echo UPDATE_DESC=${PRO_UPDATE_DESC} >> .env.production
            echo -e $PRO_FASTLANE_ENV > fastlane/.env
            echo $API_KEY | base64 --decode >  fastlane/api_key_info.json
            echo $PRO_GOOGLE_SERVICES_PLIST_IOS | base64 --decode > ios/Firebase/GoogleService-Info-Production.plist
      - run:
          name: Install NPM
          command: npm install --legacy-peer-deps
      - run:
          name: Install AppCenter CLI
          command: npm install -g appcenter-cli
      - run:
          name: Install Bundle
          command: bundle install
      - run:
          name: Install Cocoapods
          command: cd ios && sudo gem install cocoapods
      - run:
          name: Install Pod
          command: cd ios && pod install
      - run:
          name: Fastlane Build, Deploy to TestFlight and Update CodePush
          command: bundle exec fastlane ios $PRO_FASTLANE_LANE_IOS
      - store_artifacts:
          path: output

  android-stg-update:
    executor:
      name: android/android-machine
      tag: 2022.03.1
    steps:
      - checkout
      - run:
          name: Import environment variables from Doppler
          command: |
              echo -e $STG_ENV > .env.staging
              echo APP_VERSION=${STG_APP_VERSION} >> .env.staging
              echo UPDATE_DESC=${STG_UPDATE_DESC} >> .env.staging
              echo -e $STG_FASTLANE_ENV > fastlane/.env
      - run:
          name: Install NPM
          command: npm install
      - run:
          name: Install AppCenter CLI
          command: npm install -g appcenter-cli
      - run:
          name: Install Bundle
          command: bundle install
      - run:
          name: CodePush update Android Staging
          command: bundle exec fastlane android update_staging

  android-pro-update:
    executor:
      name: android/android-machine
      tag: 2022.03.1
    steps:
      - checkout
      - run:
          name: Import environment variables from Doppler
          command: |
              echo -e $PRO_ENV > .env.production
              echo APP_VERSION=${PRO_APP_VERSION} >> .env.production
              echo UPDATE_DESC=${PRO_UPDATE_DESC} >> .env.production
              echo -e $PRO_FASTLANE_ENV > fastlane/.env
      - run:
          name: Install NPM
          command: npm install
      - run:
          name: Install AppCenter CLI
          command: npm install -g appcenter-cli
      - run:
          name: Install Bundle
          command: bundle install
      - run:
          name: CodePush update Android Production
          command: bundle exec fastlane android update_production

  android-stg:
    executor:
      name: android/android-machine
      tag: 2022.03.1
    steps:
      - checkout
      - run:
          name: Import environment variables from Doppler
          command: |
            echo -e $STG_ENV > .env.staging
            echo APP_VERSION=${STG_APP_VERSION} >> .env.staging
            echo UPDATE_DESC=${STG_UPDATE_DESC} >> .env.staging
            echo -e $STG_FASTLANE_ENV > fastlane/.env
            mkdir -p android/app/src/staging
            echo $STG_GOOGLE_SERVICES_JSON_ANDROID | base64 --decode > android/app/src/staging/google-services.json
      - run:
          name: Pull Keystore from AWS S3 bucket
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            sudo unzip awscliv2.zip
            sudo ./aws/install
            aws --version
            export AWS_ACCESS_KEY_ID=$STG_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$STG_AWS_SECRET_ACCESS_KEY
            aws s3 cp s3://$STG_S3_BUCKET/group-app/staging.keystore android/app/
      - run:
          name: Install NPM
          command: npm install
      - run:
          name: Install AppCenter CLI
          command: npm install -g appcenter-cli
      - run:
          name: Install Bundle
          command: bundle install
      - run:
          name: Fastlane Build, Deploy to App Distribution and Update CodePush
          command: bundle exec fastlane android $STG_FASTLANE_LANE_ANDROID
      - store_artifacts:
          path: app/build/outputs/apk/release/app-release-unsigned.apk

  android-pro:
    executor:
      name: android/android-machine
      tag: 2022.03.1
    steps:
      - checkout
      - run:
          name: Import environment variables from Doppler
          command: |
            echo -e $PRO_ENV > .env.production
            echo APP_VERSION=${PRO_APP_VERSION} >> .env.production
            echo UPDATE_DESC=${PRO_UPDATE_DESC} >> .env.production
            echo -e $PRO_FASTLANE_ENV > fastlane/.env
            mkdir -p a android/app/src/production
            echo $PRO_GOOGLE_SERVICES_JSON_ANDROID | base64 --decode > android/app/src/production/google-services.json
      - run:
          name: Pull Keystore from AWS S3 bucket
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            sudo unzip awscliv2.zip
            sudo ./aws/install
            aws --version
            export AWS_ACCESS_KEY_ID=$PRO_AWS_ACCESS_KEY_ID
            export AWS_SECRET_ACCESS_KEY=$PRO_AWS_SECRET_ACCESS_KEY
            aws s3 cp s3://$PRO_S3_BUCKET/group-app/production.keystore android/app/
      - run:
          name: Install NPM
          command: npm install
      - run:
          name: Install AppCenter CLI
          command: npm install -g appcenter-cli
      - run:
          name: Install Bundle
          command: bundle install
      - run:
          name: Fastlane Build, Deploy to App Distribution and Update CodePush
          command: bundle exec fastlane android $PRO_FASTLANE_LANE_ANDROID
      - store_artifacts:
          path: app/build/outputs/apk/release/app-release-unsigned.apk

workflows:
  version: 2
  Staging_iOS-Android:
    jobs:
      - ios-stg-update-approval:
          filters:
            branches:
              only: /^staging.*$/
          type: approval
      - android-stg-update-approval:
          filters:
            branches:
              only: /^staging.*$/
          type: approval
      - ios-stg-update:
          filters:
            branches:
              only: /^staging.*$/
          requires:
            - ios-stg-update-approval
      - android-stg-update:
          filters:
            branches:
              only: /^staging.*$/
          requires:
            - android-stg-update-approval

      - ios-approval:
          filters:
            branches:
              only: /^staging.*$/
          type: approval
      - android-approval:
          filters:
            branches:
              only: /^staging.*$/
          type: approval
      - ios-stg:
          filters:
            branches:
              only: /^staging.*$/
          requires:
            - ios-approval
      - android-stg:
          filters:
            branches:
              only: /^staging.*$/
          requires:
            - android-approval

  Production_iOS-Android:
    jobs:
      - ios-pro-update-approval:
          filters:
            branches:
              only: /^master.*$|^release.*$/
          type: approval
      - android-pro-update-approval:
          filters:
            branches:
              only: /^master.*$|^release.*$/
          type: approval
      - ios-pro-update:
          filters:
            branches:
              only: /^master.*$|^release.*$/
          requires:
            - ios-pro-update-approval
      - android-pro-update:
          filters:
            branches:
              only: /^master.*$|^release.*$/
          requires:
            - android-pro-update-approval

      - ios-approval:
          filters:
            branches:
              only: /^master.*$|^release.*$/
          type: approval
      - android-approval:
          filters:
            branches:
              only: /^master.*$|^release.*$/
          type: approval
      - ios-pro:
          filters:
            branches:
              only: /^master.*$|^release.*$/
          requires:
            - ios-approval
      - android-pro:
          filters:
            branches:
              only: /^master.*$|^release.*$/
          requires:
            - android-approval
