// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateSeries component renders correctly if this is first step in create series 1`] = `
<RNSScreenStack
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNSScreen
    collapsable={false}
    forwardedRef={[Function]}
    gestureResponseDistance={
      Object {
        "bottom": -1,
        "end": -1,
        "start": -1,
        "top": -1,
      }
    }
    nativeBackButtonDismissalEnabled={false}
    onAppear={[Function]}
    onDisappear={[Function]}
    onDismissed={[Function]}
    onHeaderBackButtonClicked={[Function]}
    onTransitionProgress={[Function]}
    onWillAppear={[Function]}
    onWillDisappear={[Function]}
    replaceAnimation="pop"
    stackPresentation="push"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    swipeDirection="horizontal"
  >
    <RNSScreenStackHeaderConfig
      backgroundColor="rgb(255, 255, 255)"
      color="rgb(0, 122, 255)"
      hidden={false}
      onAttached={[Function]}
      onDetached={[Function]}
      title="MockedScreen"
      titleColor="rgb(28, 28, 30)"
      topInsetEnabled={true}
      translucent={false}
    />
    <View
      stackPresentation="push"
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "backgroundColor": "rgb(242, 242, 242)",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          }
        }
      >
        <View
          style={
            Object {
              "zIndex": 2,
            }
          }
          testID="header"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "flex-end",
                  "backgroundColor": "#FFFFFF",
                  "flexDirection": "row",
                  "minHeight": 44,
                  "paddingTop": 0,
                  "paddingVertical": 4,
                },
                Object {
                  "elevation": 2,
                  "shadowColor": "rgba(0, 0, 0, 1)",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.12,
                  "shadowRadius": 1.5,
                },
                undefined,
              ]
            }
            testID="header.content"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#FFFFFF",
                  "flex": 1,
                  "flexDirection": "row",
                  "overflow": "hidden",
                  "paddingLeft": 8,
                  "paddingRight": 8,
                }
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 20,
                    "left": 20,
                    "right": 20,
                    "top": 20,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="header.back.button"
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      Object {
                        "alignItems": "center",
                        "height": 44,
                        "justifyContent": "center",
                        "padding": 12,
                        "width": 44,
                      },
                      Object {
                        "backgroundColor": undefined,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        undefined,
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    <View
                      testID="header.back"
                    />
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "justifyContent": "center",
                      "paddingVertical": 8,
                    },
                    Object {},
                  ]
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Array [
                        Object {
                          "color": "#181C32",
                          "fontFamily": "BeVietnamPro-SemiBold",
                          "fontSize": 15,
                        },
                        Object {},
                        Object {
                          "marginRight": 8,
                        },
                      ]
                    }
                    testID="header.text"
                  >
                    Post to
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  Object {
                    "disabled": true,
                  }
                }
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "borderRadius": 6,
                    },
                    Object {
                      "marginRight": 4,
                    },
                  ]
                }
                testID="series_select_audience.btn_next"
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "borderRadius": 6,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "paddingVertical": 4,
                      },
                      undefined,
                      Object {
                        "backgroundColor": "#F4EFFB",
                        "height": 36,
                        "paddingHorizontal": 12,
                      },
                    ]
                  }
                  testID="button.content"
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#212745",
                          "fontFamily": "BeVietnamPro-Medium",
                          "fontSize": 15,
                        },
                        Object {
                          "color": "#BAC0DE",
                        },
                        Array [
                          Object {
                            "textAlign": "center",
                          },
                          undefined,
                        ],
                      ]
                    }
                    testID="button.text"
                  >
                    Next
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "height": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E3E6F2",
                  "borderRadius": 24,
                  "borderWidth": 1,
                  "justifyContent": "center",
                  "paddingLeft": 8,
                  "paddingRight": 12,
                },
                Object {
                  "margin": 16,
                },
                Object {
                  "height": 36,
                },
                false,
              ]
            }
            testID="search_input"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": true,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={false}
                hitSlop={
                  Object {
                    "bottom": 10,
                    "left": 10,
                    "right": 10,
                    "top": 10,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      Object {
                        "marginRight": 8,
                      },
                      Object {
                        "backgroundColor": undefined,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        undefined,
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    <View
                      testID="search_input.icon"
                    />
                  </View>
                </View>
              </View>
              <TextInput
                autoComplete="off"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                onSubmitEditing={[Function]}
                placeholder="Search Audience..."
                placeholderTextColor="#BAC0DE"
                returnKeyType="search"
                selectionColor="#767D93"
                style={
                  Object {
                    "color": "#181C32",
                    "flex": 1,
                    "fontFamily": "BeVietnamPro-Light",
                    "fontSize": 13,
                    "height": "100%",
                  }
                }
                testID="search_input.input"
                value=""
              />
            </View>
          </View>
          <View
            style={
              Object {
                "marginBottom": 16,
              }
            }
            testID="selecting_audience.container"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#212745",
                    "fontFamily": "BeVietnamPro-Medium",
                    "fontSize": 15,
                  },
                  Object {},
                  Object {
                    "paddingHorizontal": 16,
                  },
                ]
              }
            >
              Chosen audience: 0
            </Text>
            <RCTScrollView
              horizontal={true}
            >
              <View />
            </RCTScrollView>
          </View>
          <RCTScrollView
            ListEmptyComponent={[Function]}
            ListFooterComponent={[Function]}
            data={Array []}
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            style={
              Object {
                "paddingHorizontal": 16,
              }
            }
            viewabilityConfigCallbackPairs={Array []}
          >
            <View>
              <View
                onLayout={[Function]}
              >
                <View
                  style={
                    Object {
                      "marginBottom": 16,
                    }
                  }
                >
                  <ActivityIndicator
                    color="#E3E6F2"
                    size="large"
                  />
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </View>
  </RNSScreen>
</RNSScreenStack>
`;
