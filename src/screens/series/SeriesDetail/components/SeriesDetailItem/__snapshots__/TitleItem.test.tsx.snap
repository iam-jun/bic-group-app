// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SeriesDetailArticleItem component render correctly with role guess 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flexDirection": "row",
      "justifyContent": "space-between",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "marginRight": 8,
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "#181C32",
            "fontFamily": "BeVietnamPro-SemiBold",
            "fontSize": 28,
          },
          Object {
            "color": "#BAC0DE",
          },
          undefined,
        ]
      }
    >
      01
    </Text>
    <View
      style={
        Object {
          "borderLeftColor": "#BAC0DE",
          "borderLeftWidth": 1,
          "height": 44,
          "marginHorizontal": 8,
          "transform": Array [
            Object {
              "rotate": "15deg",
            },
          ],
        }
      }
    />
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <Text
        numberOfLines={1}
        style={
          Array [
            Object {
              "color": "#181C32",
              "fontFamily": "BeVietnamPro-SemiBold",
              "fontSize": 20,
            },
            Object {
              "color": "#181C32",
            },
            undefined,
          ]
        }
      >
        Article thá»© 4 edited 
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "borderRadius": 6,
        },
        undefined,
      ]
    }
    testID="content_header.menu"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderRadius": 6,
            "elevation": 2,
            "flexDirection": "row",
            "justifyContent": "center",
            "shadowColor": "rgba(0, 0, 0, 1)",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.12,
            "shadowRadius": 1.5,
          },
          undefined,
          Object {
            "backgroundColor": "#FFFFFF",
            "height": 28,
            "paddingHorizontal": 8,
          },
        ]
      }
      testID="button.content"
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              undefined,
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="button.icon"
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
