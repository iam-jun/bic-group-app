// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Quiz component render correctly 1`] = `
<RCTScrollView
  CellRendererComponent={[Function]}
  ItemSeparatorComponent={[Function]}
  ListEmptyComponent={[Function]}
  ListFooterComponent={[Function]}
  ListHeaderComponent={[Function]}
  animatedStyle={
    Object {
      "value": Object {},
    }
  }
  collapsable={false}
  data={
    Array [
      Object {
        "code": "api.ok",
        "data": Object {
          "actor": Object {
            "avatar": "https://media.beincom.io/image/variants/user/avatar/7a9ea089-12a6-40e9-96ca-083bcbc5408a",
            "email": "truongthi@evol.vn",
            "fullname": "Nguyễn Trường Thi",
            "id": "0fa01fde-7c15-4d55-b60a-8e990123bc2e",
            "isDeactivated": false,
            "isVerified": true,
            "showingBadges": Array [
              Object {
                "community": Object {
                  "id": "656cebfe-1b91-473f-97fd-96837bf9e2a5",
                  "name": "Community của Bảo gất là dễ thương nuônnnnnnnnnnnnnn",
                },
                "iconUrl": "https://media.beincom.io/image/variants/badge/a2a4b6cd-4581-42e6-b28c-dd9d04fec9a6",
                "id": "61a0b534-c390-4685-936e-621e32607953",
                "name": "Team Secret",
              },
            ],
            "username": "truongthi",
          },
          "audience": Object {
            "groups": Array [
              Object {
                "communityId": "15337361-1577-4b7b-a31d-990df06aa446",
                "icon": "https://media.beincom.io/image/variants/group/avatar/6f4e6113-fd61-4b5b-848b-468afe2c8550",
                "id": "18508ac3-2bfc-4172-b071-1d67f1b1e05b",
                "isCommunity": false,
                "name": "Bein Product Team",
                "privacy": "OPEN",
                "rootGroupId": "35b5fb8f-6f7a-4ac2-90bb-18199096c429",
              },
              Object {
                "communityId": "15337361-1577-4b7b-a31d-990df06aa446",
                "icon": null,
                "id": "aeab68c2-bcec-4edb-a78b-60c0ee90afd7",
                "isCommunity": false,
                "name": "Bein Founding Community",
                "privacy": "OPEN",
                "rootGroupId": "35b5fb8f-6f7a-4ac2-90bb-18199096c429",
              },
              Object {
                "communityId": "153c02e4-3b08-4c3e-bb74-dd2d94d0a5e7",
                "icon": "https://media.beincom.io/image/variants/group/avatar/88939640-cfdb-43ac-8689-9bc6e584bc9a",
                "id": "b01fb58e-9299-4a0e-a55f-9839293fb42a",
                "isCommunity": true,
                "name": "Community test group order Linh",
                "privacy": "PRIVATE",
                "rootGroupId": "b01fb58e-9299-4a0e-a55f-9839293fb42a",
              },
            ],
          },
          "commentsCount": 0,
          "communities": Array [
            Object {
              "communityId": "15337361-1577-4b7b-a31d-990df06aa446",
              "icon": "https://media.beincom.io/image/variants/group/avatar/26a806d3-3557-4f7a-b96a-132a9befccff",
              "id": "35b5fb8f-6f7a-4ac2-90bb-18199096c429",
              "isCommunity": true,
              "name": "EVOL Community",
              "privacy": "OPEN",
              "rootGroupId": "35b5fb8f-6f7a-4ac2-90bb-18199096c429",
            },
            Object {
              "communityId": "153c02e4-3b08-4c3e-bb74-dd2d94d0a5e7",
              "icon": "https://media.beincom.io/image/variants/group/avatar/88939640-cfdb-43ac-8689-9bc6e584bc9a",
              "id": "b01fb58e-9299-4a0e-a55f-9839293fb42a",
              "isCommunity": true,
              "name": "Community test group order Linh",
              "privacy": "PRIVATE",
              "rootGroupId": "b01fb58e-9299-4a0e-a55f-9839293fb42a",
            },
          ],
          "content": "# Người dùng vẫn sạc smartphone qua đêm
Khảo sát của Asus cho thấy người dùng thường xuyên sạc điện thoại qua đêm dù thói quen này được đánh giá gây hại cho thiết bị.
Asus cho biết một nửa người dùng smartphone của hãng chọn sạc qua đêm, dù thiết bị đã có tính năng sạc nhanh. Trong đó, 25% bật Sạc ổn định - tính năng làm chậm tốc độ sạc để giảm nhiệt và kéo dài tuổi thọ pin; 26% bật Sạc theo lịch trình - chế độ trì hoãn việc sạc đầy 100% pin.Trang công nghệ _Android Authority_ cũng thực hiện khảo sát tương tự và có tới 66% người tham gia có thói quen cắm sạc thiết bị cả đêm.",
          "createdAt": "2023-06-29T05:24:25.545Z",
          "id": "54f4a2eb-034d-4e4e-8810-44744bffc87d",
          "isReported": false,
          "isSaved": false,
          "linkPreview": null,
          "markedReadPost": false,
          "media": Object {
            "files": Array [],
            "images": Array [],
            "videos": Array [],
          },
          "mentions": Array [],
          "ownerReactions": Array [
            Object {
              "id": "427b3794-aa51-4bb6-8ddb-743861585f90",
              "reactionName": "mask",
            },
          ],
          "privacy": "OPEN",
          "quiz": Object {
            "createdAt": "2023-06-29T08:37:43.927Z",
            "description": "ahihihi",
            "id": "c14e8f68-2b33-4303-ab81-0f29bb3192ac",
            "status": "PUBLISHED",
            "title": "testse",
            "updatedAt": "2023-06-29T08:38:39.825Z",
          },
          "reactionsCount": Array [
            Object {
              "mask": 1,
            },
          ],
          "setting": Object {
            "canComment": true,
            "canReact": true,
            "importantExpiredAt": null,
            "isImportant": false,
          },
          "status": "PUBLISHED",
          "tags": Array [],
          "totalUsersSeen": 3,
          "type": "POST",
        },
        "meta": Object {
          "message": "OK",
        },
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onEndReached={[Function]}
  onEndReachedThreshold={0.2}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshControl={
    <RefreshControlMock
      onRefresh={[Function]}
      progressViewOffset={48}
      refreshing={true}
      tintColor="#A4A9B7"
    />
  }
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  testID="quiz.list"
  viewabilityConfigCallbackPairs={Array []}
>
  <RCTRefreshControl />
  <View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "paddingTop": 48,
          }
        }
      >
        <View
          style={
            Object {
              "height": 16,
              "paddingHorizontal": undefined,
              "paddingVertical": undefined,
              "width": undefined,
            }
          }
        />
      </View>
    </View>
    <View
      animatedStyle={
        Object {
          "value": Object {},
        }
      }
      collapsable={false}
      onLayout={[Function]}
    >
      <View>
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#FFFFFF",
              },
              undefined,
            ]
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "marginHorizontal": 16,
                "opacity": 1,
                "paddingTop": 8,
              }
            }
            testID="content_header"
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "marginRight": 12,
                  "marginTop": 4,
                  "opacity": 1,
                }
              }
              testID="button_wrapper"
            >
              <View
                style={
                  Array [
                    Object {
                      "borderRadius": 8,
                      "height": 48,
                      "width": 48,
                    },
                    undefined,
                  ]
                }
                testID="avatar"
              >
                <View
                  style={
                    Array [
                      Array [
                        Object {
                          "borderRadius": 8,
                          "height": 48,
                          "width": 48,
                        },
                        Object {
                          "borderRadius": 24,
                        },
                      ],
                      Object {
                        "backgroundColor": "#A4A9B7",
                      },
                    ]
                  }
                  testID="avatar_container"
                >
                  <View
                    style={
                      Array [
                        Object {
                          "overflow": "hidden",
                        },
                        Array [
                          Array [
                            Array [
                              Object {
                                "borderRadius": 8,
                                "height": 48,
                                "width": 48,
                              },
                              Object {
                                "borderRadius": 24,
                              },
                            ],
                            Object {
                              "borderColor": "#F2F5F8",
                              "borderWidth": 2,
                            },
                            Object {
                              "backgroundColor": "#FFFFFF",
                            },
                          ],
                          false,
                        ],
                      ]
                    }
                  >
                    <FastImageView
                      onFastImageError={[Function]}
                      resizeMode="cover"
                      source={
                        Object {
                          "testUri": "../../../assets/images/user_avatar_default.png",
                        }
                      }
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                      testID="avatar.image"
                    />
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginRight": 12,
                    "opacity": 1,
                  }
                }
                testID="button_wrapper"
              >
                <Text
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#212745",
                        "fontFamily": "BeVietnamPro-Medium",
                        "fontSize": 15,
                      },
                      Object {
                        "color": "#181C32",
                      },
                      Object {
                        "flexShrink": 1,
                      },
                    ]
                  }
                  testID="content_header.actor"
                />
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "marginVertical": 4,
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#212745",
                        "fontFamily": "BeVietnamPro-Light",
                        "fontSize": 13,
                      },
                      Object {
                        "color": "#353E6E",
                      },
                      Object {
                        "marginRight": 4,
                      },
                    ]
                  }
                >
                  to
                </Text>
                <Text
                  onPress={[Function]}
                  style={
                    Array [
                      Object {
                        "color": "#212745",
                        "fontFamily": "BeVietnamPro-Medium",
                        "fontSize": 13,
                      },
                      Object {
                        "color": "#181C32",
                      },
                      undefined,
                    ]
                  }
                  testID="content_header.audiences"
                >
                  
                </Text>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#212745",
                        "fontFamily": "BeVietnamPro-Light",
                        "fontSize": 11,
                      },
                      Object {
                        "color": "#353E6E",
                      },
                      undefined,
                    ]
                  }
                  testID="time_view"
                >
                  
                </Text>
              </View>
            </View>
          </View>
          <View>
            <View
              style={
                Object {
                  "marginHorizontal": 16,
                  "marginVertical": 8,
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                testID="post_view_content"
              >
                <View
                  style={false}
                >
                  <View />
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "paddingBottom": 16,
                "paddingHorizontal": 16,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignSelf": "stretch",
                    "backgroundColor": "#E3E6F2",
                    "height": 1,
                    "marginHorizontal": 0,
                    "width": undefined,
                  },
                  Object {},
                ]
              }
              testID="divider"
            />
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "paddingBottom": 16,
                "paddingLeft": 16,
              }
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "borderRadius": 8,
                  },
                  undefined,
                ]
              }
              testID="quiz_draft_view.button_delete"
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 8,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "paddingVertical": 4,
                    },
                    undefined,
                    Object {
                      "backgroundColor": "#FEECED",
                      "height": 36,
                      "paddingHorizontal": 12,
                    },
                  ]
                }
                testID="button.content"
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        undefined,
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        testID="button.icon"
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "height": undefined,
                  "paddingHorizontal": undefined,
                  "paddingVertical": undefined,
                  "width": 16,
                }
              }
            />
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "borderRadius": 8,
                  },
                  undefined,
                ]
              }
              testID="quiz_draft_view.button_edit"
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 8,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "paddingVertical": 4,
                    },
                    undefined,
                    Object {
                      "backgroundColor": "#EBF4FF",
                      "height": 36,
                      "paddingHorizontal": 12,
                    },
                  ]
                }
                testID="button.content"
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        undefined,
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        testID="button.icon"
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "height": 8,
                "paddingHorizontal": undefined,
                "paddingVertical": undefined,
                "width": undefined,
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "height": 16,
            "paddingHorizontal": undefined,
            "paddingVertical": undefined,
            "width": undefined,
          }
        }
      />
    </View>
  </View>
</RCTScrollView>
`;
