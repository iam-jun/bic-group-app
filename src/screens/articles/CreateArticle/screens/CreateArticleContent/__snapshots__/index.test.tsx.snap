// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateArticleContent screen should render correctly 1`] = `
<RNSScreenStack
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNSScreen
    collapsable={false}
    forwardedRef={[Function]}
    gestureResponseDistance={
      Object {
        "bottom": -1,
        "end": -1,
        "start": -1,
        "top": -1,
      }
    }
    nativeBackButtonDismissalEnabled={false}
    onAppear={[Function]}
    onDisappear={[Function]}
    onDismissed={[Function]}
    onHeaderBackButtonClicked={[Function]}
    onTransitionProgress={[Function]}
    onWillAppear={[Function]}
    onWillDisappear={[Function]}
    replaceAnimation="pop"
    stackPresentation="push"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    swipeDirection="horizontal"
  >
    <RNSScreenStackHeaderConfig
      backgroundColor="rgb(255, 255, 255)"
      color="rgb(0, 122, 255)"
      hidden={false}
      onAttached={[Function]}
      onDetached={[Function]}
      title="MockedScreen"
      titleColor="rgb(28, 28, 30)"
      topInsetEnabled={true}
      translucent={false}
    />
    <View
      stackPresentation="push"
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "backgroundColor": "rgb(242, 242, 242)",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Object {
              "zIndex": 2,
            }
          }
          testID="header"
        >
          <View
            animatedStyle={
              Object {
                "value": Object {},
              }
            }
            collapsable={false}
            style={
              Object {
                "alignItems": "flex-end",
                "backgroundColor": "#FFFFFF",
                "elevation": 2,
                "flexDirection": "row",
                "minHeight": 44,
                "paddingTop": 0,
                "paddingVertical": 4,
                "shadowColor": "rgba(0, 0, 0, 1)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.12,
                "shadowRadius": 1.5,
              }
            }
            testID="header.content"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#FFFFFF",
                  "flex": 1,
                  "flexDirection": "row",
                  "overflow": "hidden",
                  "paddingLeft": 8,
                  "paddingRight": 8,
                }
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 20,
                    "left": 20,
                    "right": 20,
                    "top": 20,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="header.back.button"
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      Object {
                        "alignItems": "center",
                        "height": 44,
                        "justifyContent": "center",
                        "padding": 12,
                        "width": 44,
                      },
                      Object {
                        "backgroundColor": undefined,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        undefined,
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    <View
                      testID="header.back"
                    />
                  </View>
                </View>
              </View>
              <View
                animatedStyle={
                  Object {
                    "value": Object {},
                  }
                }
                collapsable={false}
                style={
                  Object {
                    "flex": 1,
                    "justifyContent": "center",
                    "paddingVertical": 8,
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Array [
                        Object {
                          "color": "#181C32",
                          "fontFamily": "BeVietnamPro-SemiBold",
                          "fontSize": 15,
                        },
                        Object {},
                        Object {
                          "marginRight": 8,
                        },
                      ]
                    }
                    testID="header.text"
                  >
                    Content
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  Object {
                    "disabled": true,
                  }
                }
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "borderRadius": 8,
                    },
                    Object {
                      "marginRight": 8,
                    },
                  ]
                }
                testID="header.button"
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "paddingVertical": 4,
                      },
                      undefined,
                      Object {
                        "backgroundColor": "#F4EFFB",
                        "height": 36,
                        "paddingHorizontal": 12,
                      },
                    ]
                  }
                  testID="button.content"
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#212745",
                          "fontFamily": "BeVietnamPro-Medium",
                          "fontSize": 15,
                        },
                        Object {
                          "color": "#BAC0DE",
                        },
                        Array [
                          Object {
                            "textAlign": "center",
                          },
                          undefined,
                        ],
                      ]
                    }
                    testID="button.text"
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "height": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#FFFFFF",
                  "flex": 1,
                },
                undefined,
              ]
            }
            testID="article_webview"
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "overflow": "hidden",
                  },
                  undefined,
                ]
              }
            >
              <RNCWebView
                allowsFullscreenVideo={true}
                allowsInlineMediaPlayback={false}
                androidHardwareAccelerationDisabled={true}
                androidLayerType="hardware"
                automaticallyAdjustContentInsets={false}
                bounces={true}
                cacheEnabled={true}
                domStorageEnabled={true}
                hideKeyboardAccessoryView={true}
                injectedJavaScript="const meta = document.createElement('meta'); meta.setAttribute('content', 'width=device-width, initial-scale=1, maximum-scale=0.99, user-scalable=0'); meta.setAttribute('name', 'viewport'); document.getElementsByTagName('head')[0].appendChild(meta); "
                injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
                injectedJavaScriptForMainFrameOnly={true}
                javaScriptEnabled={true}
                mediaPlaybackRequiresUserAction={false}
                messagingEnabled={true}
                nestedScrollEnabled={false}
                onContentProcessDidTerminate={[Function]}
                onHttpError={[Function]}
                onLoadingError={[Function]}
                onLoadingFinish={[Function]}
                onLoadingProgress={[Function]}
                onLoadingStart={[Function]}
                onMessage={[Function]}
                onShouldStartLoadWithRequest={[Function]}
                overScrollMode="never"
                saveFormDataDisabled={true}
                scalesPageToFit={true}
                scrollEnabled={false}
                showsHorizontalScrollIndicator={false}
                showsVerticalScrollIndicator={false}
                source={
                  Object {
                    "uri": "https://undefined/article/webview/v1",
                  }
                }
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Object {
                      "backgroundColor": "#ffffff",
                    },
                    Object {
                      "flex": 1,
                      "height": "100%",
                      "opacity": 0.99,
                      "overflow": "hidden",
                      "width": "100%",
                    },
                  ]
                }
                testID="webview"
                textInteractionEnabled={true}
                useSharedProcessPool={true}
              />
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "white",
                    "flex": 1,
                    "height": "100%",
                    "justifyContent": "center",
                    "position": "absolute",
                    "width": "100%",
                  }
                }
              >
                <ActivityIndicator />
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "width": "100%",
              }
            }
          >
            <View
              collapsable={false}
              style={Object {}}
            />
            <View
              animatedStyle={
                Object {
                  "value": Object {
                    "height": 0,
                  },
                }
              }
              collapsable={false}
              style={
                Object {
                  "height": 0,
                }
              }
            />
            <View
              collapsable={false}
              style={
                Object {
                  "height": 0,
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </RNSScreen>
</RNSScreenStack>
`;

exports[`CreateArticleContent screen should trigger onInitializeEnd 1`] = `
<RNSScreenStack
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNSScreen
    collapsable={false}
    forwardedRef={[Function]}
    gestureResponseDistance={
      Object {
        "bottom": -1,
        "end": -1,
        "start": -1,
        "top": -1,
      }
    }
    nativeBackButtonDismissalEnabled={false}
    onAppear={[Function]}
    onDisappear={[Function]}
    onDismissed={[Function]}
    onHeaderBackButtonClicked={[Function]}
    onTransitionProgress={[Function]}
    onWillAppear={[Function]}
    onWillDisappear={[Function]}
    replaceAnimation="pop"
    stackPresentation="push"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    swipeDirection="horizontal"
  >
    <RNSScreenStackHeaderConfig
      backgroundColor="rgb(255, 255, 255)"
      color="rgb(0, 122, 255)"
      hidden={false}
      onAttached={[Function]}
      onDetached={[Function]}
      title="MockedScreen"
      titleColor="rgb(28, 28, 30)"
      topInsetEnabled={true}
      translucent={false}
    />
    <View
      stackPresentation="push"
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "backgroundColor": "rgb(242, 242, 242)",
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Object {
              "zIndex": 2,
            }
          }
          testID="header"
        >
          <View
            animatedStyle={
              Object {
                "value": Object {},
              }
            }
            collapsable={false}
            style={
              Object {
                "alignItems": "flex-end",
                "backgroundColor": "#FFFFFF",
                "elevation": 2,
                "flexDirection": "row",
                "minHeight": 44,
                "paddingTop": 0,
                "paddingVertical": 4,
                "shadowColor": "rgba(0, 0, 0, 1)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.12,
                "shadowRadius": 1.5,
              }
            }
            testID="header.content"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#FFFFFF",
                  "flex": 1,
                  "flexDirection": "row",
                  "overflow": "hidden",
                  "paddingLeft": 8,
                  "paddingRight": 8,
                }
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 20,
                    "left": 20,
                    "right": 20,
                    "top": 20,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="header.back.button"
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      Object {
                        "alignItems": "center",
                        "height": 44,
                        "justifyContent": "center",
                        "padding": 12,
                        "width": 44,
                      },
                      Object {
                        "backgroundColor": undefined,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        undefined,
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    <View
                      testID="header.back"
                    />
                  </View>
                </View>
              </View>
              <View
                animatedStyle={
                  Object {
                    "value": Object {},
                  }
                }
                collapsable={false}
                style={
                  Object {
                    "flex": 1,
                    "justifyContent": "center",
                    "paddingVertical": 8,
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Array [
                        Object {
                          "color": "#181C32",
                          "fontFamily": "BeVietnamPro-SemiBold",
                          "fontSize": 15,
                        },
                        Object {},
                        Object {
                          "marginRight": 8,
                        },
                      ]
                    }
                    testID="header.text"
                  >
                    Content
                  </Text>
                </View>
              </View>
              <View
                accessibilityState={
                  Object {
                    "disabled": true,
                  }
                }
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "borderRadius": 8,
                    },
                    Object {
                      "marginRight": 8,
                    },
                  ]
                }
                testID="header.button"
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "paddingVertical": 4,
                      },
                      undefined,
                      Object {
                        "backgroundColor": "#F4EFFB",
                        "height": 36,
                        "paddingHorizontal": 12,
                      },
                    ]
                  }
                  testID="button.content"
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#212745",
                          "fontFamily": "BeVietnamPro-Medium",
                          "fontSize": 15,
                        },
                        Object {
                          "color": "#BAC0DE",
                        },
                        Array [
                          Object {
                            "textAlign": "center",
                          },
                          undefined,
                        ],
                      ]
                    }
                    testID="button.text"
                  >
                    Save
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "height": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#FFFFFF",
                  "flex": 1,
                },
                undefined,
              ]
            }
            testID="article_webview"
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "overflow": "hidden",
                  },
                  undefined,
                ]
              }
            >
              <RNCWebView
                allowsFullscreenVideo={true}
                allowsInlineMediaPlayback={false}
                androidHardwareAccelerationDisabled={true}
                androidLayerType="hardware"
                automaticallyAdjustContentInsets={false}
                bounces={true}
                cacheEnabled={true}
                domStorageEnabled={true}
                hideKeyboardAccessoryView={true}
                injectedJavaScript="const meta = document.createElement('meta'); meta.setAttribute('content', 'width=device-width, initial-scale=1, maximum-scale=0.99, user-scalable=0'); meta.setAttribute('name', 'viewport'); document.getElementsByTagName('head')[0].appendChild(meta); "
                injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
                injectedJavaScriptForMainFrameOnly={true}
                javaScriptEnabled={true}
                mediaPlaybackRequiresUserAction={false}
                messagingEnabled={true}
                nestedScrollEnabled={false}
                onContentProcessDidTerminate={[Function]}
                onHttpError={[Function]}
                onLoadingError={[Function]}
                onLoadingFinish={[Function]}
                onLoadingProgress={[Function]}
                onLoadingStart={[Function]}
                onMessage={[Function]}
                onShouldStartLoadWithRequest={[Function]}
                overScrollMode="never"
                saveFormDataDisabled={true}
                scalesPageToFit={true}
                scrollEnabled={false}
                showsHorizontalScrollIndicator={false}
                showsVerticalScrollIndicator={false}
                source={
                  Object {
                    "uri": "https://undefined/article/webview/v1",
                  }
                }
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Object {
                      "backgroundColor": "#ffffff",
                    },
                    Object {
                      "flex": 1,
                      "height": "100%",
                      "opacity": 0.99,
                      "overflow": "hidden",
                      "width": "100%",
                    },
                  ]
                }
                testID="webview"
                textInteractionEnabled={true}
                useSharedProcessPool={true}
              />
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "white",
                    "flex": 1,
                    "height": "100%",
                    "justifyContent": "center",
                    "position": "absolute",
                    "width": "100%",
                  }
                }
              >
                <ActivityIndicator />
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "width": "100%",
              }
            }
          >
            <View
              collapsable={false}
              style={Object {}}
            />
            <View
              animatedStyle={
                Object {
                  "value": Object {},
                }
              }
              collapsable={false}
              entering={[Function]}
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "elevation": 4,
                    "flexDirection": "row",
                    "paddingHorizontal": 8,
                    "paddingVertical": 4,
                    "shadowColor": "rgba(0, 0, 0, 0.8)",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowRadius": 2,
                  }
                }
              >
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#F1F2F8",
                      "borderRadius": 4,
                      "flexDirection": "row",
                      "opacity": 1,
                      "padding": 6,
                    }
                  }
                  testID="button_wrapper"
                >
                  <View
                    accessibilityState={
                      Object {
                        "disabled": true,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={false}
                    hitSlop={
                      Object {
                        "bottom": 10,
                        "left": 10,
                        "right": 10,
                        "top": 10,
                      }
                    }
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                          undefined,
                          Object {
                            "backgroundColor": undefined,
                          },
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            undefined,
                            undefined,
                            undefined,
                          ]
                        }
                      >
                        <View />
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "alignSelf": "stretch",
                        "backgroundColor": "#E3E6F2",
                        "height": undefined,
                        "marginVertical": 0,
                        "width": 1,
                      },
                      Object {
                        "marginHorizontal": 8,
                      },
                    ]
                  }
                  testID="divider"
                />
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#F1F2F8",
                      "borderRadius": 4,
                      "flexDirection": "row",
                      "opacity": 1,
                      "padding": 6,
                    }
                  }
                  testID="button_wrapper"
                >
                  <View
                    accessibilityState={
                      Object {
                        "disabled": true,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={false}
                    hitSlop={
                      Object {
                        "bottom": 10,
                        "left": 10,
                        "right": 10,
                        "top": 10,
                      }
                    }
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                          undefined,
                          Object {
                            "backgroundColor": undefined,
                          },
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            undefined,
                            undefined,
                            undefined,
                          ]
                        }
                      >
                        <View />
                      </View>
                    </View>
                  </View>
                  <View
                    accessibilityState={
                      Object {
                        "disabled": true,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={false}
                    hitSlop={
                      Object {
                        "bottom": 10,
                        "left": 10,
                        "right": 10,
                        "top": 10,
                      }
                    }
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                          undefined,
                          Object {
                            "backgroundColor": undefined,
                          },
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            undefined,
                            undefined,
                            undefined,
                          ]
                        }
                      >
                        <View />
                      </View>
                    </View>
                  </View>
                  <View
                    accessibilityState={
                      Object {
                        "disabled": true,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={false}
                    hitSlop={
                      Object {
                        "bottom": 10,
                        "left": 10,
                        "right": 10,
                        "top": 10,
                      }
                    }
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                          undefined,
                          Object {
                            "backgroundColor": undefined,
                          },
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            undefined,
                            undefined,
                            undefined,
                          ]
                        }
                      >
                        <View />
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "alignSelf": "stretch",
                        "backgroundColor": "#E3E6F2",
                        "height": undefined,
                        "marginVertical": 0,
                        "width": 1,
                      },
                      Object {
                        "marginHorizontal": 8,
                      },
                    ]
                  }
                  testID="divider"
                />
                <View
                  accessibilityState={
                    Object {
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginHorizontal": 2,
                          "padding": 6,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View />
                    </View>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginHorizontal": 2,
                          "padding": 6,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View />
                    </View>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginHorizontal": 2,
                          "padding": 6,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View>
                        <View
                          style={
                            Array [
                              Object {
                                "overflow": "hidden",
                              },
                              Object {
                                "height": 14,
                                "width": 14,
                              },
                            ]
                          }
                        >
                          <FastImageView
                            onFastImageError={[Function]}
                            resizeMode="cover"
                            size={14}
                            source={null}
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "alignSelf": "stretch",
                        "backgroundColor": "#E3E6F2",
                        "height": undefined,
                        "marginVertical": 0,
                        "width": 1,
                      },
                      Object {
                        "marginHorizontal": 8,
                      },
                    ]
                  }
                  testID="divider"
                />
                <View
                  accessibilityState={
                    Object {
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginHorizontal": 2,
                          "padding": 6,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View />
                    </View>
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "backgroundColor": "#FFFFFF",
                  }
                }
                testID="sticker_view"
              >
                <View>
                  <View
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                      }
                    }
                  >
                    <View
                      animatedStyle={
                        Object {
                          "value": Object {
                            "height": -0,
                          },
                        }
                      }
                      collapsable={false}
                      style={
                        Object {
                          "backgroundColor": "#FFFFFF",
                          "borderTopLeftRadius": 20,
                          "borderTopRightRadius": 20,
                          "elevation": 2,
                          "height": -0,
                          "justifyContent": "flex-start",
                          "minHeight": 80,
                          "shadowColor": "rgba(0, 0, 0, 1)",
                          "shadowOffset": Object {
                            "height": 2,
                            "width": 0,
                          },
                          "shadowOpacity": 0.12,
                          "shadowRadius": 1.5,
                        }
                      }
                    >
                      <View
                        animatedStyle={
                          Object {
                            "value": Object {},
                          }
                        }
                        collapsable={false}
                        forwardedRef={[Function]}
                        onGestureHandlerEvent={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "justifyContent": "center",
                            "paddingVertical": 10,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "backgroundColor": "#EAEDF2",
                              "borderRadius": 8,
                              "height": 4,
                              "width": "15%",
                            }
                          }
                        />
                      </View>
                      <RCTSafeAreaView
                        emulateUnlessSupported={true}
                      >
                        <View
                          style={
                            Object {
                              "height": "100%",
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "marginHorizontal": 12,
                                "paddingVertical": 12,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "#FFFFFF",
                                    "borderColor": "#E3E6F2",
                                    "borderRadius": 24,
                                    "borderWidth": 1,
                                    "justifyContent": "center",
                                    "paddingLeft": 8,
                                    "paddingRight": 12,
                                  },
                                  undefined,
                                  Object {
                                    "height": 32,
                                  },
                                  false,
                                ]
                              }
                              testID="search_input"
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  }
                                }
                              >
                                <View
                                  accessibilityState={
                                    Object {
                                      "disabled": true,
                                    }
                                  }
                                  accessible={true}
                                  collapsable={false}
                                  focusable={false}
                                  hitSlop={
                                    Object {
                                      "bottom": 10,
                                      "left": 10,
                                      "right": 10,
                                      "top": 10,
                                    }
                                  }
                                  onClick={[Function]}
                                  onResponderGrant={[Function]}
                                  onResponderMove={[Function]}
                                  onResponderRelease={[Function]}
                                  onResponderTerminate={[Function]}
                                  onResponderTerminationRequest={[Function]}
                                  onStartShouldSetResponder={[Function]}
                                  style={
                                    Object {
                                      "opacity": 1,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      Array [
                                        Object {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        },
                                        Object {
                                          "marginRight": 8,
                                        },
                                        Object {
                                          "backgroundColor": undefined,
                                        },
                                      ]
                                    }
                                  >
                                    <View
                                      style={
                                        Array [
                                          undefined,
                                          undefined,
                                          undefined,
                                        ]
                                      }
                                    >
                                      <View
                                        testID="search_input.icon"
                                      />
                                    </View>
                                  </View>
                                </View>
                                <TextInput
                                  autoComplete="off"
                                  onBlur={[Function]}
                                  onChangeText={[Function]}
                                  onFocus={[Function]}
                                  onSubmitEditing={[Function]}
                                  placeholder="Search Emoji"
                                  placeholderTextColor="#BAC0DE"
                                  returnKeyType="search"
                                  selectionColor="#767D93"
                                  style={
                                    Object {
                                      "color": "#181C32",
                                      "flex": 1,
                                      "fontFamily": "BeVietnamPro-Light",
                                      "fontSize": 13,
                                      "height": "100%",
                                    }
                                  }
                                  testID="search_input.input"
                                  value=""
                                />
                              </View>
                            </View>
                          </View>
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "flex": 1,
                                }
                              }
                              testID="emoji_picker"
                            >
                              <RCTScrollView
                                data={Array []}
                                getItem={[Function]}
                                getItemCount={[Function]}
                                getItemLayout={[Function]}
                                initialNumToRender={50}
                                keyExtractor={[Function]}
                                keyboardDismissMode="interactive"
                                keyboardShouldPersistTaps="always"
                                nativeID="emojiPicker"
                                onContentSizeChange={[Function]}
                                onEndReachedThreshold={0}
                                onLayout={[Function]}
                                onMomentumScrollBegin={[Function]}
                                onMomentumScrollEnd={[Function]}
                                onScroll={[Function]}
                                onScrollBeginDrag={[Function]}
                                onScrollEndDrag={[Function]}
                                onScrollToIndexFailed={[Function]}
                                renderItem={[Function]}
                                scrollEventThrottle={50}
                                showsVerticalScrollIndicator={false}
                                stickyHeaderIndices={Array []}
                                style={
                                  Object {
                                    "width": 720,
                                  }
                                }
                                testID="emoji_picker.section_list"
                              >
                                <View />
                              </RCTScrollView>
                            </View>
                          </View>
                        </View>
                      </RCTSafeAreaView>
                    </View>
                  </View>
                </View>
                <View
                  animatedStyle={
                    Object {
                      "value": Object {
                        "height": 0,
                      },
                    }
                  }
                  collapsable={false}
                  style={
                    Object {
                      "height": 0,
                    }
                  }
                />
              </View>
            </View>
            <View
              animatedStyle={
                Object {
                  "value": Object {
                    "height": 0,
                  },
                }
              }
              collapsable={false}
              style={
                Object {
                  "height": 0,
                }
              }
            />
            <View
              collapsable={false}
              style={
                Object {
                  "height": 0,
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </RNSScreen>
</RNSScreenStack>
`;
