// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SettingItem conponent renders correctly 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID="edit_user_info.setting_item"
>
  <View>
    <View
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 64,
          "opacity": 1,
          "paddingHorizontal": 12,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "marginRight": 12,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="edit_user_info.setting_item.left_component"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                color={4286071773}
                data-name="Layer 1"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                tintColor={4286071773}
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M16 6a1 1 0 00-1-1H3a1 1 0 000 2h5v11a1 1 0 002 0V7h5a1 1 0 001-1zm5 5h-6a1 1 0 000 2h2v5a1 1 0 002 0v-5h2a1 1 0 000-2z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <Text
          numberOfLines={2}
          style={
            Array [
              Object {
                "color": "#2F3945",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 14,
              },
              Object {},
              undefined,
            ]
          }
        >
          Name
        </Text>
        <Text
          numberOfLines={2}
          style={
            Array [
              Object {
                "color": "#2F3945",
                "fontFamily": "OpenSans-Regular",
                "fontSize": 12,
              },
              Object {},
              undefined,
            ]
          }
        >
          Not set
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`SettingItem conponent renders correctly testID 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID="edit_user_info.setting_item"
>
  <View>
    <View
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 64,
          "opacity": 1,
          "paddingHorizontal": 12,
        }
      }
      testID="test"
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "marginRight": 12,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="edit_user_info.setting_item.left_component"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                color={4286071773}
                data-name="Layer 1"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                tintColor={4286071773}
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M16 6a1 1 0 00-1-1H3a1 1 0 000 2h5v11a1 1 0 002 0V7h5a1 1 0 001-1zm5 5h-6a1 1 0 000 2h2v5a1 1 0 002 0v-5h2a1 1 0 000-2z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <Text
          numberOfLines={2}
          style={
            Array [
              Object {
                "color": "#2F3945",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 14,
              },
              Object {},
              undefined,
            ]
          }
        >
          Name
        </Text>
        <Text
          numberOfLines={2}
          style={
            Array [
              Object {
                "color": "#2F3945",
                "fontFamily": "OpenSans-Regular",
                "fontSize": 12,
              },
              Object {},
              undefined,
            ]
          }
        >
          Not set
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`SettingItem conponent should render left, right component 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID="edit_user_info.setting_item"
>
  <View>
    <View
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 64,
          "opacity": 1,
          "paddingHorizontal": 12,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "marginRight": 12,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="edit_user_info.setting_item.left_component"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                color={4286071773}
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                tintColor={4286071773}
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M17 9.17a1 1 0 00-1.41 0L12 12.71 8.46 9.17a1 1 0 00-1.41 0 1 1 0 000 1.42l4.24 4.24a1 1 0 001.42 0L17 10.59a1 1 0 000-1.42z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <Text
          numberOfLines={2}
          style={
            Array [
              Object {
                "color": "#2F3945",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 14,
              },
              Object {},
              undefined,
            ]
          }
        >
          Name
        </Text>
        <Text
          numberOfLines={2}
          style={
            Array [
              Object {
                "color": "#2F3945",
                "fontFamily": "OpenSans-Regular",
                "fontSize": 12,
              },
              Object {},
              undefined,
            ]
          }
        >
          Not set
        </Text>
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="edit_user_info.setting_item.right_component"
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
          testID="button_wrapper.content"
        >
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={false}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  undefined,
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View>
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={20}
                    bbWidth={20}
                    color={4281284933}
                    focusable={false}
                    height={20}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {},
                        Object {
                          "flex": 0,
                          "height": 20,
                          "width": 20,
                        },
                      ]
                    }
                    tintColor={4281284933}
                    vbHeight={24}
                    vbWidth={24}
                    width={20}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M17 9.17a1 1 0 00-1.41 0L12 12.71 8.46 9.17a1 1 0 00-1.41 0 1 1 0 000 1.42l4.24 4.24a1 1 0 001.42 0L17 10.59a1 1 0 000-1.42z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                          ]
                        }
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
            </View>
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={false}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "marginLeft": 8,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View>
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={20}
                    bbWidth={20}
                    color={4281284933}
                    focusable={false}
                    height={20}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {},
                        Object {
                          "flex": 0,
                          "height": 20,
                          "width": 20,
                        },
                      ]
                    }
                    tintColor={4281284933}
                    vbHeight={24}
                    vbWidth={24}
                    width={20}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M17 9.17a1 1 0 00-1.41 0L12 12.71 8.46 9.17a1 1 0 00-1.41 0 1 1 0 000 1.42l4.24 4.24a1 1 0 001.42 0L17 10.59a1 1 0 000-1.42z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                          ]
                        }
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
