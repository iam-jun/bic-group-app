// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CoverImage screen renders correctly 1`] = `
<View
  testID="user_profile.cover_image"
>
  <View
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        Array [
          Object {
            "width": "100%",
          },
          Object {
            "height": 80,
          },
        ],
      ]
    }
  >
    <FastImageView
      onFastImageError={[Function]}
      resizeMode="cover"
      source={
        Object {
          "testUri": "../../../assets/images/cover_default.png",
        }
      }
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "borderRadius": 6,
        },
        Array [
          Object {
            "position": "absolute",
            "right": 16,
            "top": 16,
          },
        ],
      ]
    }
    testID="user_profile.cover_image.edit_button"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingVertical": 4,
          },
          undefined,
          Object {
            "backgroundColor": "#EBF4FF",
            "height": 28,
            "paddingHorizontal": 8,
          },
        ]
      }
      testID="button.content"
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              undefined,
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="button.icon"
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
