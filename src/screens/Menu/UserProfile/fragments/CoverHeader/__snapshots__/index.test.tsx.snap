// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CoverHeader screen renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "height": 210,
    }
  }
  testID="user_profile.cover_header"
>
  <View
    testID="user_profile.cover_image"
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "position": "relative",
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#f9f9f9",
              "height": 140,
              "justifyContent": "center",
              "width": "100%",
            }
          }
          testID="Image__placeholder"
        />
      </View>
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "height": 140,
              "width": "100%",
            },
          ]
        }
      >
        <FastImageView
          onFastImageError={[Function]}
          onFastImageLoadEnd={[Function]}
          resizeMode="cover"
          source={
            Object {
              "testUri": "../../../assets/images/cover_default.png",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "marginTop": -44,
      }
    }
    testID="user_profile.avatar_image"
  >
    <View>
      <View
        style={
          Array [
            Object {
              "borderRadius": 4,
              "height": 80,
              "width": 80,
            },
            undefined,
          ]
        }
        testID="avatar"
      >
        <View
          style={
            Array [
              Array [
                Object {
                  "borderRadius": 4,
                  "height": 80,
                  "width": 80,
                },
                Object {
                  "borderRadius": 40,
                },
              ],
              Object {},
            ]
          }
          testID="avatar_container"
        >
          <View
            onLayout={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "position": "relative",
              }
            }
          >
            <View
              collapsable={false}
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "opacity": 1,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#f9f9f9",
                    "borderColor": "#F2F5F8",
                    "borderRadius": 40,
                    "borderWidth": 2,
                    "height": 80,
                    "justifyContent": "center",
                    "width": 80,
                  }
                }
                testID="Image__placeholder"
              />
            </View>
            <View
              style={
                Array [
                  Object {
                    "overflow": "hidden",
                  },
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#F2F5F8",
                    "borderRadius": 40,
                    "borderWidth": 2,
                    "height": 80,
                    "width": 80,
                  },
                ]
              }
            >
              <FastImageView
                onFastImageError={[Function]}
                onFastImageLoadEnd={[Function]}
                resizeMode="cover"
                source={
                  Object {
                    "testUri": "../../../assets/images/user_avatar_default.png",
                  }
                }
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
                testID="avatar.image"
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
