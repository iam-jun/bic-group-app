// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostSelectAudience screen render correctly with 1 group selected 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#FFFFFF",
      },
      Object {
        "flex": 1,
      },
      Object {},
    ]
  }
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "zIndex": 2,
        }
      }
      testID="header"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "flex-end",
              "backgroundColor": "#FFFFFF",
              "flexDirection": "row",
              "minHeight": 44,
              "overflow": "hidden",
              "paddingTop": 0,
            },
            Object {
              "elevation": 2,
              "shadowColor": "rgba(0, 0, 0, 1)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.12,
              "shadowRadius": 1.5,
            },
            undefined,
          ]
        }
        testID="header.content"
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#FFFFFF",
              "flex": 1,
              "flexDirection": "row",
              "overflow": "hidden",
              "paddingLeft": 8,
              "paddingRight": 8,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="header.back.button"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "height": 44,
                    "justifyContent": "center",
                    "padding": 12,
                    "width": 44,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  testID="header.back"
                />
              </View>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "justifyContent": "center",
                  "paddingVertical": 8,
                },
                Object {},
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": true,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={false}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#181C32",
                      "fontFamily": "BeVietnamPro-SemiBold",
                      "fontSize": 15,
                    },
                    Object {},
                    Object {
                      "marginRight": 8,
                    },
                  ]
                }
                testID="header.text"
              >
                Select Audiences
              </Text>
            </View>
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 6,
                },
                Object {
                  "marginRight": 4,
                },
              ]
            }
            testID="select_audience.btn_done"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 6,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingVertical": 4,
                  },
                  undefined,
                  Object {
                    "backgroundColor": "#F4EFFB",
                    "height": 36,
                    "paddingHorizontal": 12,
                  },
                ]
              }
              testID="button.content"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#212745",
                      "fontFamily": "BeVietnamPro-Medium",
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#BAC0DE",
                    },
                    Array [
                      Object {
                        "textAlign": "center",
                      },
                      undefined,
                    ],
                  ]
                }
                testID="button.text"
              >
                Done
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "height": 0,
              "position": "absolute",
              "top": 0,
              "width": "100%",
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#E3E6F2",
          "borderRadius": 20,
          "height": 40,
          "justifyContent": "center",
          "margin": 12,
          "paddingHorizontal": 16,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Object {
                  "marginRight": 8,
                },
                Object {
                  "backgroundColor": undefined,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View />
            </View>
          </View>
        </View>
        <TextInput
          autoComplete="off"
          autoFocus={true}
          onChangeText={[Function]}
          onFocus={[Function]}
          onSubmitEditing={[Function]}
          placeholder="Search for groups or people"
          placeholderTextColor="#767D93"
          returnKeyType="search"
          selectionColor="#767D93"
          style={
            Object {
              "color": "#181C32",
              "flex": 1,
              "fontFamily": "BeVietnamPro-Light",
              "fontSize": 15,
              "height": "100%",
            }
          }
          testID="post_select_audience.search"
          value=""
        />
      </View>
    </View>
    <RCTScrollView
      ListEmptyComponent={[Function]}
      ListFooterComponent={[Function]}
      ListHeaderComponent={[Function]}
      data={
        Array [
          Object {
            "data": Array [
              Object {
                "children": Array [
                  Object {
                    "backgroundImgUrl": null,
                    "chatId": "rpq3unai7i8ztprmoz97rdjr7w",
                    "children": Array [],
                    "createdAt": "2022-01-10T10:04:48.685Z",
                    "deletedAt": null,
                    "description": "The greatest community ever",
                    "group_type": "COMPANY",
                    "icon": "",
                    "id": 1,
                    "isChecked": false,
                    "level": 0,
                    "name": "EVOL Community",
                    "ownerId": "1",
                    "parentId": null,
                    "parents": null,
                    "privacy": "PUBLIC",
                    "slug": "evol-community-1641809088",
                    "testID": "post_select_audience.groups.item",
                    "unique": "5ef2593a-a47c-4419-a7ba-693e862418cb",
                    "updatedAt": "2022-01-10T10:04:48.928Z",
                    "userCount": "25",
                  },
                ],
                "description": "The greatest community ever",
                "icon": "",
                "id": 1,
                "name": "EVOL Community",
                "parentId": null,
                "parents": null,
                "unique": "6f17969b-0776-47eb-8561-6992e4acb006",
                "userCount": "25",
              },
            ],
            "title": "Groups",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={
        Array [
          1,
        ]
      }
      style={
        Object {
          "paddingHorizontal": 16,
        }
      }
    >
      <View>
        <View
          onLayout={[Function]}
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#181C32",
                  "fontFamily": "BeVietnamPro-SemiBold",
                  "fontSize": 13,
                },
                Object {},
                Object {
                  "marginVertical": 8,
                },
              ]
            }
          >
            Search Results
          </Text>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "backgroundColor": "#FFFFFF",
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#181C32",
                    "fontFamily": "BeVietnamPro-SemiBold",
                    "fontSize": 13,
                  },
                  Object {},
                  Object {
                    "marginVertical": 8,
                  },
                ]
              }
            >
              Groups
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={Object {}}
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                  testID="button_wrapper.content"
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#E3E6F2",
                        "borderRadius": 8,
                        "height": 16,
                        "justifyContent": "center",
                        "marginRight": 4,
                        "width": 16,
                      }
                    }
                  >
                    <View
                      accessibilityState={
                        Object {
                          "disabled": true,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={false}
                      hitSlop={
                        Object {
                          "bottom": 10,
                          "left": 10,
                          "right": 10,
                          "top": 10,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                            },
                            undefined,
                            Object {
                              "backgroundColor": undefined,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              undefined,
                              undefined,
                              undefined,
                            ]
                          }
                        >
                          <View />
                        </View>
                      </View>
                    </View>
                  </View>
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#212745",
                          "fontFamily": "BeVietnamPro-Light",
                          "fontSize": 15,
                        },
                        Object {},
                        Object {
                          "paddingRight": 20,
                        },
                      ]
                    }
                  >
                    EVOL Community
                     
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "#212745",
                            "fontFamily": "BeVietnamPro-Light",
                            "fontSize": 15,
                          },
                          Object {
                            "color": "#602CA0",
                          },
                          undefined,
                        ]
                      }
                    >
                      
                    </Text>
                  </Text>
                </View>
              </View>
            </View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="group_item.container"
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
                testID="post_select_audience.groups.item"
              >
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "flexDirection": "row",
                        "paddingLeft": 8,
                        "paddingVertical": 4,
                      },
                      undefined,
                    ]
                  }
                >
                  <View>
                    <View>
                      <View
                        style={
                          Array [
                            Object {
                              "borderRadius": 4,
                              "height": 40,
                              "width": 40,
                            },
                            undefined,
                          ]
                        }
                        testID="avatar"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "borderRadius": 4,
                                "height": 40,
                                "width": 40,
                              },
                              Object {
                                "backgroundColor": "#A4A9B7",
                              },
                            ]
                          }
                          testID="avatar_container"
                        >
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "position": "relative",
                              }
                            }
                          >
                            <View
                              collapsable={false}
                              style={
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 1,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#f9f9f9",
                                    "borderColor": "#F2F5F8",
                                    "borderRadius": 4,
                                    "borderWidth": 2,
                                    "height": 40,
                                    "justifyContent": "center",
                                    "width": 40,
                                  }
                                }
                                testID="Image__placeholder"
                              />
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "overflow": "hidden",
                                  },
                                  Object {
                                    "borderColor": "#F2F5F8",
                                    "borderRadius": 4,
                                    "borderWidth": 2,
                                    "height": 40,
                                    "width": 40,
                                  },
                                ]
                              }
                            >
                              <FastImageView
                                onFastImageError={[Function]}
                                onFastImageLoadEnd={[Function]}
                                resizeMode="cover"
                                source={null}
                                style={
                                  Object {
                                    "bottom": 0,
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                                testID="avatar.image"
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      accessibilityState={
                        Object {
                          "disabled": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "bottom": -3,
                          "flexDirection": "row",
                          "opacity": 1,
                          "position": "absolute",
                          "right": -6,
                        }
                      }
                      testID="group_item.check_box"
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "bottom": 2,
                            "left": 2,
                            "position": "absolute",
                            "right": 2,
                            "top": 2,
                          }
                        }
                      />
                      <View
                        accessibilityState={
                          Object {
                            "disabled": true,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={false}
                        hitSlop={
                          Object {
                            "bottom": 10,
                            "left": 10,
                            "right": 10,
                            "top": 10,
                          }
                        }
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                              undefined,
                              Object {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                undefined,
                                undefined,
                                undefined,
                              ]
                            }
                          >
                            <View />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "justifyContent": "center",
                        "paddingHorizontal": 12,
                      }
                    }
                  >
                    <Text
                      numberOfLines={2}
                      style={
                        Array [
                          Object {
                            "color": "#181C32",
                            "fontFamily": "BeVietnamPro-SemiBold",
                            "fontSize": 15,
                          },
                          Object {},
                          Object {
                            "maxWidth": 200,
                            "paddingTop": 2,
                          },
                        ]
                      }
                    >
                      EVOL Community
                    </Text>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          Object {
                            "disabled": true,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={false}
                        hitSlop={
                          Object {
                            "bottom": 10,
                            "left": 10,
                            "right": 10,
                            "top": 10,
                          }
                        }
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                              undefined,
                              Object {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                undefined,
                                undefined,
                                undefined,
                              ]
                            }
                          >
                            <View />
                          </View>
                        </View>
                      </View>
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#212745",
                              "fontFamily": "BeVietnamPro-Light",
                              "fontSize": 13,
                            },
                            Object {
                              "color": "#767D93",
                            },
                            Object {
                              "marginHorizontal": 4,
                            },
                          ]
                        }
                      >
                        25
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        />
        <View
          onLayout={[Function]}
        >
          <View />
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`PostSelectAudience screen render correctly with group item 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#FFFFFF",
      },
      Object {
        "flex": 1,
      },
      Object {},
    ]
  }
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "zIndex": 2,
        }
      }
      testID="header"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "flex-end",
              "backgroundColor": "#FFFFFF",
              "flexDirection": "row",
              "minHeight": 44,
              "overflow": "hidden",
              "paddingTop": 0,
            },
            Object {
              "elevation": 2,
              "shadowColor": "rgba(0, 0, 0, 1)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.12,
              "shadowRadius": 1.5,
            },
            undefined,
          ]
        }
        testID="header.content"
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#FFFFFF",
              "flex": 1,
              "flexDirection": "row",
              "overflow": "hidden",
              "paddingLeft": 8,
              "paddingRight": 8,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="header.back.button"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "height": 44,
                    "justifyContent": "center",
                    "padding": 12,
                    "width": 44,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  testID="header.back"
                />
              </View>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "justifyContent": "center",
                  "paddingVertical": 8,
                },
                Object {},
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": true,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={false}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#181C32",
                      "fontFamily": "BeVietnamPro-SemiBold",
                      "fontSize": 15,
                    },
                    Object {},
                    Object {
                      "marginRight": 8,
                    },
                  ]
                }
                testID="header.text"
              >
                Select Audiences
              </Text>
            </View>
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 6,
                },
                Object {
                  "marginRight": 4,
                },
              ]
            }
            testID="select_audience.btn_done"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 6,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingVertical": 4,
                  },
                  undefined,
                  Object {
                    "backgroundColor": "#F4EFFB",
                    "height": 36,
                    "paddingHorizontal": 12,
                  },
                ]
              }
              testID="button.content"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#212745",
                      "fontFamily": "BeVietnamPro-Medium",
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#BAC0DE",
                    },
                    Array [
                      Object {
                        "textAlign": "center",
                      },
                      undefined,
                    ],
                  ]
                }
                testID="button.text"
              >
                Done
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "height": 0,
              "position": "absolute",
              "top": 0,
              "width": "100%",
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#E3E6F2",
          "borderRadius": 20,
          "height": 40,
          "justifyContent": "center",
          "margin": 12,
          "paddingHorizontal": 16,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Object {
                  "marginRight": 8,
                },
                Object {
                  "backgroundColor": undefined,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View />
            </View>
          </View>
        </View>
        <TextInput
          autoComplete="off"
          autoFocus={true}
          onChangeText={[Function]}
          onFocus={[Function]}
          onSubmitEditing={[Function]}
          placeholder="Search for groups or people"
          placeholderTextColor="#767D93"
          returnKeyType="search"
          selectionColor="#767D93"
          style={
            Object {
              "color": "#181C32",
              "flex": 1,
              "fontFamily": "BeVietnamPro-Light",
              "fontSize": 15,
              "height": "100%",
            }
          }
          testID="post_select_audience.search"
          value=""
        />
      </View>
    </View>
    <RCTScrollView
      ListEmptyComponent={[Function]}
      ListFooterComponent={[Function]}
      ListHeaderComponent={[Function]}
      data={
        Array [
          Object {
            "data": Array [
              Object {
                "children": Array [
                  Object {
                    "backgroundImgUrl": null,
                    "chatId": "rpq3unai7i8ztprmoz97rdjr7w",
                    "children": Array [],
                    "createdAt": "2022-01-10T10:04:48.685Z",
                    "deletedAt": null,
                    "description": "The greatest community ever",
                    "group_type": "COMPANY",
                    "icon": "",
                    "id": 1,
                    "isChecked": false,
                    "level": 0,
                    "name": "EVOL Community",
                    "ownerId": "1",
                    "parentId": null,
                    "parents": null,
                    "privacy": "PUBLIC",
                    "slug": "evol-community-1641809088",
                    "testID": "post_select_audience.groups.item",
                    "unique": "5ef2593a-a47c-4419-a7ba-693e862418cb",
                    "updatedAt": "2022-01-10T10:04:48.928Z",
                    "userCount": "25",
                  },
                ],
                "description": "The greatest community ever",
                "icon": "",
                "id": 1,
                "name": "EVOL Community",
                "parentId": null,
                "parents": null,
                "unique": "6f17969b-0776-47eb-8561-6992e4acb006",
                "userCount": "25",
              },
            ],
            "title": "Groups",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={
        Array [
          1,
        ]
      }
      style={
        Object {
          "paddingHorizontal": 16,
        }
      }
    >
      <View>
        <View
          onLayout={[Function]}
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#181C32",
                  "fontFamily": "BeVietnamPro-SemiBold",
                  "fontSize": 13,
                },
                Object {},
                Object {
                  "marginVertical": 8,
                },
              ]
            }
          >
            Search Results
          </Text>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "backgroundColor": "#FFFFFF",
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#181C32",
                    "fontFamily": "BeVietnamPro-SemiBold",
                    "fontSize": 13,
                  },
                  Object {},
                  Object {
                    "marginVertical": 8,
                  },
                ]
              }
            >
              Groups
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={Object {}}
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                  testID="button_wrapper.content"
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#E3E6F2",
                        "borderRadius": 8,
                        "height": 16,
                        "justifyContent": "center",
                        "marginRight": 4,
                        "width": 16,
                      }
                    }
                  >
                    <View
                      accessibilityState={
                        Object {
                          "disabled": true,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={false}
                      hitSlop={
                        Object {
                          "bottom": 10,
                          "left": 10,
                          "right": 10,
                          "top": 10,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                            },
                            undefined,
                            Object {
                              "backgroundColor": undefined,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              undefined,
                              undefined,
                              undefined,
                            ]
                          }
                        >
                          <View />
                        </View>
                      </View>
                    </View>
                  </View>
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#212745",
                          "fontFamily": "BeVietnamPro-Light",
                          "fontSize": 15,
                        },
                        Object {},
                        Object {
                          "paddingRight": 20,
                        },
                      ]
                    }
                  >
                    EVOL Community
                     
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "#212745",
                            "fontFamily": "BeVietnamPro-Light",
                            "fontSize": 15,
                          },
                          Object {
                            "color": "#602CA0",
                          },
                          undefined,
                        ]
                      }
                    >
                      
                    </Text>
                  </Text>
                </View>
              </View>
            </View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="group_item.container"
            >
              <View
                style={
                  Object {
                    "flexDirection": "row",
                  }
                }
                testID="post_select_audience.groups.item"
              >
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "flexDirection": "row",
                        "paddingLeft": 8,
                        "paddingVertical": 4,
                      },
                      undefined,
                    ]
                  }
                >
                  <View>
                    <View>
                      <View
                        style={
                          Array [
                            Object {
                              "borderRadius": 4,
                              "height": 40,
                              "width": 40,
                            },
                            undefined,
                          ]
                        }
                        testID="avatar"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "borderRadius": 4,
                                "height": 40,
                                "width": 40,
                              },
                              Object {
                                "backgroundColor": "#A4A9B7",
                              },
                            ]
                          }
                          testID="avatar_container"
                        >
                          <View
                            onLayout={[Function]}
                            style={
                              Object {
                                "backgroundColor": "transparent",
                                "position": "relative",
                              }
                            }
                          >
                            <View
                              collapsable={false}
                              style={
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "opacity": 1,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "alignItems": "center",
                                    "backgroundColor": "#f9f9f9",
                                    "borderColor": "#F2F5F8",
                                    "borderRadius": 4,
                                    "borderWidth": 2,
                                    "height": 40,
                                    "justifyContent": "center",
                                    "width": 40,
                                  }
                                }
                                testID="Image__placeholder"
                              />
                            </View>
                            <View
                              style={
                                Array [
                                  Object {
                                    "overflow": "hidden",
                                  },
                                  Object {
                                    "borderColor": "#F2F5F8",
                                    "borderRadius": 4,
                                    "borderWidth": 2,
                                    "height": 40,
                                    "width": 40,
                                  },
                                ]
                              }
                            >
                              <FastImageView
                                onFastImageError={[Function]}
                                onFastImageLoadEnd={[Function]}
                                resizeMode="cover"
                                source={null}
                                style={
                                  Object {
                                    "bottom": 0,
                                    "left": 0,
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  }
                                }
                                testID="avatar.image"
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      accessibilityState={
                        Object {
                          "disabled": false,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "bottom": -3,
                          "flexDirection": "row",
                          "opacity": 1,
                          "position": "absolute",
                          "right": -6,
                        }
                      }
                      testID="group_item.check_box"
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "bottom": 2,
                            "left": 2,
                            "position": "absolute",
                            "right": 2,
                            "top": 2,
                          }
                        }
                      />
                      <View
                        accessibilityState={
                          Object {
                            "disabled": true,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={false}
                        hitSlop={
                          Object {
                            "bottom": 10,
                            "left": 10,
                            "right": 10,
                            "top": 10,
                          }
                        }
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                              undefined,
                              Object {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                undefined,
                                undefined,
                                undefined,
                              ]
                            }
                          >
                            <View />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "justifyContent": "center",
                        "paddingHorizontal": 12,
                      }
                    }
                  >
                    <Text
                      numberOfLines={2}
                      style={
                        Array [
                          Object {
                            "color": "#181C32",
                            "fontFamily": "BeVietnamPro-SemiBold",
                            "fontSize": 15,
                          },
                          Object {},
                          Object {
                            "maxWidth": 200,
                            "paddingTop": 2,
                          },
                        ]
                      }
                    >
                      EVOL Community
                    </Text>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          Object {
                            "disabled": true,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={false}
                        hitSlop={
                          Object {
                            "bottom": 10,
                            "left": 10,
                            "right": 10,
                            "top": 10,
                          }
                        }
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                              undefined,
                              Object {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                undefined,
                                undefined,
                                undefined,
                              ]
                            }
                          >
                            <View />
                          </View>
                        </View>
                      </View>
                      <Text
                        style={
                          Array [
                            Object {
                              "color": "#212745",
                              "fontFamily": "BeVietnamPro-Light",
                              "fontSize": 13,
                            },
                            Object {
                              "color": "#767D93",
                            },
                            Object {
                              "marginHorizontal": 4,
                            },
                          ]
                        }
                      >
                        25
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        />
        <View
          onLayout={[Function]}
        >
          <View />
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`PostSelectAudience screen renders correctly with params isFirstStep 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#FFFFFF",
      },
      Object {
        "flex": 1,
      },
      Object {},
    ]
  }
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "zIndex": 2,
        }
      }
      testID="header"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "flex-end",
              "backgroundColor": "#FFFFFF",
              "flexDirection": "row",
              "minHeight": 44,
              "overflow": "hidden",
              "paddingTop": 0,
            },
            Object {
              "elevation": 2,
              "shadowColor": "rgba(0, 0, 0, 1)",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.12,
              "shadowRadius": 1.5,
            },
            undefined,
          ]
        }
        testID="header.content"
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#FFFFFF",
              "flex": 1,
              "flexDirection": "row",
              "overflow": "hidden",
              "paddingLeft": 8,
              "paddingRight": 8,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="header.back.button"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "height": 44,
                    "justifyContent": "center",
                    "padding": 12,
                    "width": 44,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  testID="header.back"
                />
              </View>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "justifyContent": "center",
                  "paddingVertical": 8,
                },
                Object {},
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": true,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={false}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#181C32",
                      "fontFamily": "BeVietnamPro-SemiBold",
                      "fontSize": 15,
                    },
                    Object {},
                    Object {
                      "marginRight": 8,
                    },
                  ]
                }
                testID="header.text"
              >
                Select Audiences
              </Text>
            </View>
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "borderRadius": 6,
                },
                Object {
                  "marginRight": 4,
                },
              ]
            }
            testID="select_audience.btn_done"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 6,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingVertical": 4,
                  },
                  undefined,
                  Object {
                    "backgroundColor": "#F4EFFB",
                    "height": 36,
                    "paddingHorizontal": 12,
                  },
                ]
              }
              testID="button.content"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#212745",
                      "fontFamily": "BeVietnamPro-Medium",
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#BAC0DE",
                    },
                    Array [
                      Object {
                        "textAlign": "center",
                      },
                      undefined,
                    ],
                  ]
                }
                testID="button.text"
              >
                Next
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "height": 0,
              "position": "absolute",
              "top": 0,
              "width": "100%",
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#E3E6F2",
          "borderRadius": 20,
          "height": 40,
          "justifyContent": "center",
          "margin": 12,
          "paddingHorizontal": 16,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Object {
                  "marginRight": 8,
                },
                Object {
                  "backgroundColor": undefined,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View />
            </View>
          </View>
        </View>
        <TextInput
          autoComplete="off"
          autoFocus={true}
          onChangeText={[Function]}
          onFocus={[Function]}
          onSubmitEditing={[Function]}
          placeholder="Search for groups or people"
          placeholderTextColor="#767D93"
          returnKeyType="search"
          selectionColor="#767D93"
          style={
            Object {
              "color": "#181C32",
              "flex": 1,
              "fontFamily": "BeVietnamPro-Light",
              "fontSize": 15,
              "height": "100%",
            }
          }
          testID="post_select_audience.search"
          value=""
        />
      </View>
    </View>
    <RCTScrollView
      ListEmptyComponent={[Function]}
      ListFooterComponent={[Function]}
      ListHeaderComponent={[Function]}
      data={Array []}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Object {
          "paddingHorizontal": 16,
        }
      }
    >
      <View>
        <View
          onLayout={[Function]}
        />
        <View
          onLayout={[Function]}
        >
          <View>
            <ActivityIndicator
              color="#E3E6F2"
              size="large"
            />
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
