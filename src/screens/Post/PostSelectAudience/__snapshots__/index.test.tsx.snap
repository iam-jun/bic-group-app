// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostSelectAudience screen render correctly with 1 group selected 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
    }
  }
>
  <View
    testID="header"
  >
    <View
      animatedStyle={
        Object {
          "value": Object {
            "height": 60,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "alignItems": "flex-end",
          "backgroundColor": "#FFFFFF",
          "borderBottomWidth": 0.5,
          "borderColor": "#EAEDF2",
          "elevation": 2,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingTop": 0,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 1,
        }
      }
      testID="header.content"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "flex": 1,
            "flexDirection": "row",
            "height": 60,
            "overflow": "hidden",
            "paddingLeft": 8,
            "paddingRight": 8,
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 20,
              "left": 20,
              "right": 20,
              "top": 20,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="header.back.button"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Object {
                  "alignItems": "center",
                  "height": 48,
                  "justifyContent": "center",
                  "padding": 12,
                  "width": 48,
                },
                Object {
                  "backgroundColor": undefined,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View
                className="icon-wrapper"
                testID="header.back"
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={24}
                  bbWidth={24}
                  fill="#2F3945"
                  focusable={false}
                  height={24}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {},
                      Object {
                        "flex": 0,
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={24}
                >
                  <RNSVGGroup
                    fill={4281284933}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "flex": 1,
              "height": "100%",
              "justifyContent": "center",
              "marginLeft": 16,
              "paddingTop": 1.5,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Object {
                  "color": "#2F3945",
                  "fontFamily": "OpenSans-SemiBold",
                  "fontSize": 16,
                  "height": 24,
                  "lineHeight": 24,
                }
              }
              testID="header.text"
            >
              Select Audiences
            </Text>
          </View>
        </View>
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#D5DCE5",
              "borderColor": "#7843DD",
              "borderRadius": 6,
              "borderWidth": 0,
              "height": 40,
              "marginRight": 4,
              "padding": 8,
            }
          }
          testID="select_audience.btn_done"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
            testID="button_wrapper.content"
          >
            <Text
              style={
                Object {
                  "color": "#B2BDCD",
                  "fontFamily": "OpenSans-SemiBold",
                  "fontSize": 16,
                  "textAlign": "center",
                }
              }
              testID="header.button.text"
            >
              Done
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "height": 0,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#EAEDF2",
        "borderRadius": 20,
        "height": 40,
        "justifyContent": "center",
        "margin": 12,
        "paddingHorizontal": 16,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "marginRight": 8,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={20}
                bbWidth={20}
                fill="#627286"
                focusable={false}
                height={20}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={20}
              >
                <RNSVGGroup
                  fill={4284641926}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M21.71,20.29,18,16.61A9,9,0,1,0,16.61,18l3.68,3.68a1,1,0,0,0,1.42,0A1,1,0,0,0,21.71,20.29ZM11,18a7,7,0,1,1,7-7A7,7,0,0,1,11,18Z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <TextInput
        autoComplete="off"
        autoFocus={true}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Search for groups or people"
        placeholderTextColor="#627286"
        returnKeyType="search"
        selectionColor="#627286"
        style={
          Object {
            "color": "#2F3945",
            "flex": 1,
            "fontFamily": "OpenSans-Regular",
            "fontSize": 16,
            "height": "100%",
          }
        }
        testID="post_select_audience.search"
        value=""
      />
    </View>
  </View>
  <RCTScrollView
    ListEmptyComponent={[Function]}
    ListFooterComponent={[Function]}
    ListHeaderComponent={[Function]}
    data={
      Array [
        Object {
          "data": Array [
            Object {
              "children": Array [
                Object {
                  "background_img_url": null,
                  "chat_id": "rpq3unai7i8ztprmoz97rdjr7w",
                  "children": Array [],
                  "created_at": "2022-01-10T10:04:48.685Z",
                  "deleted_at": null,
                  "description": "The greatest community ever",
                  "group_type": "COMPANY",
                  "icon": "",
                  "id": 1,
                  "isChecked": false,
                  "level": 0,
                  "name": "EVOL Community",
                  "owner_id": 1,
                  "parent_id": null,
                  "parents": null,
                  "privacy": "PUBLIC",
                  "slug": "evol-community-1641809088",
                  "testID": "post_select_audience.groups.item",
                  "unique": "5ef2593a-a47c-4419-a7ba-693e862418cb",
                  "updated_at": "2022-01-10T10:04:48.928Z",
                  "user_count": "25",
                },
              ],
              "description": "The greatest community ever",
              "icon": "",
              "id": 1,
              "name": "EVOL Community",
              "parent_id": null,
              "parents": null,
              "unique": "6f17969b-0776-47eb-8561-6992e4acb006",
              "user_count": "25",
            },
          ],
          "title": "Groups",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={
      Array [
        1,
      ]
    }
    style={
      Object {
        "paddingHorizontal": 16,
      }
    }
  >
    <View>
      <View
        onLayout={[Function]}
      >
        <Text
          style={
            Object {
              "color": "#2F3945",
              "fontFamily": "OpenSans-SemiBold",
              "fontSize": 14,
              "marginVertical": 8,
            }
          }
        >
          Search Results
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#2F3945",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 14,
                "marginVertical": 8,
              }
            }
          >
            Groups
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={Object {}}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "marginTop": 4,
              }
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  }
                }
                testID="button_wrapper.content"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#EAEDF2",
                      "borderRadius": 8,
                      "height": 16,
                      "justifyContent": "center",
                      "marginRight": 4,
                      "width": 16,
                    }
                  }
                >
                  <View
                    accessibilityState={
                      Object {
                        "disabled": true,
                      }
                    }
                    accessible={true}
                    focusable={false}
                    hitSlop={
                      Object {
                        "bottom": 10,
                        "left": 10,
                        "right": 10,
                        "top": 10,
                      }
                    }
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                          undefined,
                          Object {
                            "backgroundColor": undefined,
                          },
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            undefined,
                            undefined,
                            undefined,
                          ]
                        }
                      >
                        <View
                          className="icon-wrapper"
                        >
                          <RNSVGSvgView
                            align="xMidYMid"
                            bbHeight={12}
                            bbWidth={12}
                            fill="#2F3945"
                            focusable={false}
                            height={12}
                            meetOrSlice={0}
                            minX={0}
                            minY={0}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                Object {},
                                Object {
                                  "flex": 0,
                                  "height": 12,
                                  "width": 12,
                                },
                              ]
                            }
                            vbHeight={24}
                            vbWidth={24}
                            width={12}
                          >
                            <RNSVGGroup
                              fill={4281284933}
                              propList={
                                Array [
                                  "fill",
                                ]
                              }
                            >
                              <RNSVGPath
                                d="M15.54,11.29,9.88,5.64a1,1,0,0,0-1.42,0,1,1,0,0,0,0,1.41l4.95,5L8.46,17a1,1,0,0,0,0,1.41,1,1,0,0,0,.71.3,1,1,0,0,0,.71-.3l5.66-5.65A1,1,0,0,0,15.54,11.29Z"
                              />
                            </RNSVGGroup>
                          </RNSVGSvgView>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <Text
                  style={
                    Object {
                      "color": "#2F3945",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 16,
                      "paddingRight": 20,
                    }
                  }
                >
                  EVOL Community
                   
                  <Text
                    style={
                      Object {
                        "color": "#421187",
                        "fontFamily": "OpenSans-Regular",
                        "fontSize": 16,
                      }
                    }
                  >
                    
                  </Text>
                </Text>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="group_item.container"
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
              testID="post_select_audience.groups.item"
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "row",
                    "paddingVertical": 4,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "height": 40,
                      "width": 40,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "borderRadius": 6,
                        "height": 40,
                        "width": 40,
                      }
                    }
                    testID="avatar"
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#B2BDCD",
                          "borderRadius": 6,
                          "height": 40,
                          "width": 40,
                        }
                      }
                      testID="avatar_container"
                    >
                      <View
                        onLayout={[Function]}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "position": "relative",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#f9f9f9",
                                "borderRadius": 6,
                                "height": 40,
                                "justifyContent": "center",
                                "width": 40,
                              }
                            }
                            testID="Image__placeholder"
                          />
                        </View>
                        <View
                          style={
                            Array [
                              Object {
                                "overflow": "hidden",
                              },
                              Object {
                                "borderRadius": 6,
                                "height": 40,
                                "width": 40,
                              },
                            ]
                          }
                        >
                          <FastImageView
                            onFastImageError={[Function]}
                            onFastImageLoadEnd={[Function]}
                            resizeMode="cover"
                            source={null}
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                            testID="avatar.image"
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "bottom": -3,
                        "opacity": 1,
                        "position": "absolute",
                        "right": -6,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#EAEDF2",
                          "borderColor": "#B2BDCD",
                          "borderRadius": 6,
                          "borderWidth": 1,
                          "height": 20,
                          "justifyContent": "center",
                          "width": 20,
                        }
                      }
                      testID="group_item.check_box"
                    >
                      <View
                        accessibilityState={
                          Object {
                            "disabled": true,
                          }
                        }
                        accessible={true}
                        focusable={false}
                        hitSlop={
                          Object {
                            "bottom": 10,
                            "left": 10,
                            "right": 10,
                            "top": 10,
                          }
                        }
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                              undefined,
                              Object {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                undefined,
                                undefined,
                                undefined,
                              ]
                            }
                          >
                            <View
                              className="icon-wrapper"
                            >
                              <View
                                onLayout={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "position": "relative",
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "opacity": 1,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#f9f9f9",
                                        "height": 18,
                                        "justifyContent": "center",
                                        "width": 18,
                                      }
                                    }
                                    testID="Image__placeholder"
                                  />
                                </View>
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "overflow": "hidden",
                                      },
                                      Object {
                                        "height": 18,
                                        "width": 18,
                                      },
                                    ]
                                  }
                                >
                                  <FastImageView
                                    onFastImageError={[Function]}
                                    onFastImageLoadEnd={[Function]}
                                    resizeMode="cover"
                                    size={18}
                                    source={
                                      Object {
                                        "testUri": "../../../assets/icons/icon_checkbox.svg",
                                      }
                                    }
                                    style={
                                      Object {
                                        "bottom": 0,
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  />
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "flex": 1,
                      "paddingHorizontal": 12,
                    }
                  }
                >
                  <Text
                    numberOfLines={2}
                    style={
                      Object {
                        "color": "#2F3945",
                        "fontFamily": "OpenSans-SemiBold",
                        "fontSize": 14,
                        "maxWidth": 200,
                        "paddingTop": 2,
                      }
                    }
                  >
                    EVOL Community
                  </Text>
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      }
                    }
                  >
                    <View
                      accessibilityState={
                        Object {
                          "disabled": true,
                        }
                      }
                      accessible={true}
                      focusable={false}
                      hitSlop={
                        Object {
                          "bottom": 10,
                          "left": 10,
                          "right": 10,
                          "top": 10,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                            },
                            undefined,
                            Object {
                              "backgroundColor": undefined,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              undefined,
                              undefined,
                              undefined,
                            ]
                          }
                        >
                          <View
                            className="icon-wrapper"
                          >
                            <RNSVGSvgView
                              align="xMidYMid"
                              bbHeight={16}
                              bbWidth={16}
                              fill="#627286"
                              focusable={false}
                              height={16}
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  Object {},
                                  Object {
                                    "flex": 0,
                                    "height": 16,
                                    "width": 16,
                                  },
                                ]
                              }
                              vbHeight={24}
                              vbWidth={24}
                              width={16}
                            >
                              <RNSVGGroup
                                fill={4284641926}
                                propList={
                                  Array [
                                    "fill",
                                  ]
                                }
                              >
                                <RNSVGPath
                                  d="M12.3,12.22A4.92,4.92,0,0,0,14,8.5a5,5,0,0,0-10,0,4.92,4.92,0,0,0,1.7,3.72A8,8,0,0,0,1,19.5a1,1,0,0,0,2,0,6,6,0,0,1,12,0,1,1,0,0,0,2,0A8,8,0,0,0,12.3,12.22ZM9,11.5a3,3,0,1,1,3-3A3,3,0,0,1,9,11.5Zm9.74.32A5,5,0,0,0,15,3.5a1,1,0,0,0,0,2,3,3,0,0,1,3,3,3,3,0,0,1-1.5,2.59,1,1,0,0,0-.5.84,1,1,0,0,0,.45.86l.39.26.13.07a7,7,0,0,1,4,6.38,1,1,0,0,0,2,0A9,9,0,0,0,18.74,11.82Z"
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                          </View>
                        </View>
                      </View>
                    </View>
                    <Text
                      style={
                        Object {
                          "color": "#627286",
                          "fontFamily": "OpenSans-Regular",
                          "fontSize": 14,
                          "marginHorizontal": 4,
                        }
                      }
                    >
                      25
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
      >
        <View />
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`PostSelectAudience screen render correctly with group item 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
    }
  }
>
  <View
    testID="header"
  >
    <View
      animatedStyle={
        Object {
          "value": Object {
            "height": 60,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "alignItems": "flex-end",
          "backgroundColor": "#FFFFFF",
          "borderBottomWidth": 0.5,
          "borderColor": "#EAEDF2",
          "elevation": 2,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingTop": 0,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 1,
        }
      }
      testID="header.content"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "flex": 1,
            "flexDirection": "row",
            "height": 60,
            "overflow": "hidden",
            "paddingLeft": 8,
            "paddingRight": 8,
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 20,
              "left": 20,
              "right": 20,
              "top": 20,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="header.back.button"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Object {
                  "alignItems": "center",
                  "height": 48,
                  "justifyContent": "center",
                  "padding": 12,
                  "width": 48,
                },
                Object {
                  "backgroundColor": undefined,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View
                className="icon-wrapper"
                testID="header.back"
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={24}
                  bbWidth={24}
                  fill="#2F3945"
                  focusable={false}
                  height={24}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {},
                      Object {
                        "flex": 0,
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={24}
                >
                  <RNSVGGroup
                    fill={4281284933}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "flex": 1,
              "height": "100%",
              "justifyContent": "center",
              "marginLeft": 16,
              "paddingTop": 1.5,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Object {
                  "color": "#2F3945",
                  "fontFamily": "OpenSans-SemiBold",
                  "fontSize": 16,
                  "height": 24,
                  "lineHeight": 24,
                }
              }
              testID="header.text"
            >
              Select Audiences
            </Text>
          </View>
        </View>
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#D5DCE5",
              "borderColor": "#7843DD",
              "borderRadius": 6,
              "borderWidth": 0,
              "height": 40,
              "marginRight": 4,
              "padding": 8,
            }
          }
          testID="select_audience.btn_done"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
            testID="button_wrapper.content"
          >
            <Text
              style={
                Object {
                  "color": "#B2BDCD",
                  "fontFamily": "OpenSans-SemiBold",
                  "fontSize": 16,
                  "textAlign": "center",
                }
              }
              testID="header.button.text"
            >
              Done
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "height": 0,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#EAEDF2",
        "borderRadius": 20,
        "height": 40,
        "justifyContent": "center",
        "margin": 12,
        "paddingHorizontal": 16,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "marginRight": 8,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={20}
                bbWidth={20}
                fill="#627286"
                focusable={false}
                height={20}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={20}
              >
                <RNSVGGroup
                  fill={4284641926}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M21.71,20.29,18,16.61A9,9,0,1,0,16.61,18l3.68,3.68a1,1,0,0,0,1.42,0A1,1,0,0,0,21.71,20.29ZM11,18a7,7,0,1,1,7-7A7,7,0,0,1,11,18Z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <TextInput
        autoComplete="off"
        autoFocus={true}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Search for groups or people"
        placeholderTextColor="#627286"
        returnKeyType="search"
        selectionColor="#627286"
        style={
          Object {
            "color": "#2F3945",
            "flex": 1,
            "fontFamily": "OpenSans-Regular",
            "fontSize": 16,
            "height": "100%",
          }
        }
        testID="post_select_audience.search"
        value=""
      />
    </View>
  </View>
  <RCTScrollView
    ListEmptyComponent={[Function]}
    ListFooterComponent={[Function]}
    ListHeaderComponent={[Function]}
    data={
      Array [
        Object {
          "data": Array [
            Object {
              "children": Array [
                Object {
                  "background_img_url": null,
                  "chat_id": "rpq3unai7i8ztprmoz97rdjr7w",
                  "children": Array [],
                  "created_at": "2022-01-10T10:04:48.685Z",
                  "deleted_at": null,
                  "description": "The greatest community ever",
                  "group_type": "COMPANY",
                  "icon": "",
                  "id": 1,
                  "isChecked": false,
                  "level": 0,
                  "name": "EVOL Community",
                  "owner_id": 1,
                  "parent_id": null,
                  "parents": null,
                  "privacy": "PUBLIC",
                  "slug": "evol-community-1641809088",
                  "testID": "post_select_audience.groups.item",
                  "unique": "5ef2593a-a47c-4419-a7ba-693e862418cb",
                  "updated_at": "2022-01-10T10:04:48.928Z",
                  "user_count": "25",
                },
              ],
              "description": "The greatest community ever",
              "icon": "",
              "id": 1,
              "name": "EVOL Community",
              "parent_id": null,
              "parents": null,
              "unique": "6f17969b-0776-47eb-8561-6992e4acb006",
              "user_count": "25",
            },
          ],
          "title": "Groups",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={
      Array [
        1,
      ]
    }
    style={
      Object {
        "paddingHorizontal": 16,
      }
    }
  >
    <View>
      <View
        onLayout={[Function]}
      >
        <Text
          style={
            Object {
              "color": "#2F3945",
              "fontFamily": "OpenSans-SemiBold",
              "fontSize": 14,
              "marginVertical": 8,
            }
          }
        >
          Search Results
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#2F3945",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 14,
                "marginVertical": 8,
              }
            }
          >
            Groups
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={Object {}}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "marginTop": 4,
              }
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  }
                }
                testID="button_wrapper.content"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#EAEDF2",
                      "borderRadius": 8,
                      "height": 16,
                      "justifyContent": "center",
                      "marginRight": 4,
                      "width": 16,
                    }
                  }
                >
                  <View
                    accessibilityState={
                      Object {
                        "disabled": true,
                      }
                    }
                    accessible={true}
                    focusable={false}
                    hitSlop={
                      Object {
                        "bottom": 10,
                        "left": 10,
                        "right": 10,
                        "top": 10,
                      }
                    }
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                          undefined,
                          Object {
                            "backgroundColor": undefined,
                          },
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            undefined,
                            undefined,
                            undefined,
                          ]
                        }
                      >
                        <View
                          className="icon-wrapper"
                        >
                          <RNSVGSvgView
                            align="xMidYMid"
                            bbHeight={12}
                            bbWidth={12}
                            fill="#2F3945"
                            focusable={false}
                            height={12}
                            meetOrSlice={0}
                            minX={0}
                            minY={0}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                Object {},
                                Object {
                                  "flex": 0,
                                  "height": 12,
                                  "width": 12,
                                },
                              ]
                            }
                            vbHeight={24}
                            vbWidth={24}
                            width={12}
                          >
                            <RNSVGGroup
                              fill={4281284933}
                              propList={
                                Array [
                                  "fill",
                                ]
                              }
                            >
                              <RNSVGPath
                                d="M15.54,11.29,9.88,5.64a1,1,0,0,0-1.42,0,1,1,0,0,0,0,1.41l4.95,5L8.46,17a1,1,0,0,0,0,1.41,1,1,0,0,0,.71.3,1,1,0,0,0,.71-.3l5.66-5.65A1,1,0,0,0,15.54,11.29Z"
                              />
                            </RNSVGGroup>
                          </RNSVGSvgView>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <Text
                  style={
                    Object {
                      "color": "#2F3945",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 16,
                      "paddingRight": 20,
                    }
                  }
                >
                  EVOL Community
                   
                  <Text
                    style={
                      Object {
                        "color": "#421187",
                        "fontFamily": "OpenSans-Regular",
                        "fontSize": 16,
                      }
                    }
                  >
                    
                  </Text>
                </Text>
              </View>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="group_item.container"
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
              testID="post_select_audience.groups.item"
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "row",
                    "paddingVertical": 4,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "height": 40,
                      "width": 40,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "borderRadius": 6,
                        "height": 40,
                        "width": 40,
                      }
                    }
                    testID="avatar"
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#B2BDCD",
                          "borderRadius": 6,
                          "height": 40,
                          "width": 40,
                        }
                      }
                      testID="avatar_container"
                    >
                      <View
                        onLayout={[Function]}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "position": "relative",
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "opacity": 1,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#f9f9f9",
                                "borderRadius": 6,
                                "height": 40,
                                "justifyContent": "center",
                                "width": 40,
                              }
                            }
                            testID="Image__placeholder"
                          />
                        </View>
                        <View
                          style={
                            Array [
                              Object {
                                "overflow": "hidden",
                              },
                              Object {
                                "borderRadius": 6,
                                "height": 40,
                                "width": 40,
                              },
                            ]
                          }
                        >
                          <FastImageView
                            onFastImageError={[Function]}
                            onFastImageLoadEnd={[Function]}
                            resizeMode="cover"
                            source={null}
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                            testID="avatar.image"
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "bottom": -3,
                        "opacity": 1,
                        "position": "absolute",
                        "right": -6,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#EAEDF2",
                          "borderColor": "#B2BDCD",
                          "borderRadius": 6,
                          "borderWidth": 1,
                          "height": 20,
                          "justifyContent": "center",
                          "width": 20,
                        }
                      }
                      testID="group_item.check_box"
                    >
                      <View
                        accessibilityState={
                          Object {
                            "disabled": true,
                          }
                        }
                        accessible={true}
                        focusable={false}
                        hitSlop={
                          Object {
                            "bottom": 10,
                            "left": 10,
                            "right": 10,
                            "top": 10,
                          }
                        }
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                              undefined,
                              Object {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                undefined,
                                undefined,
                                undefined,
                              ]
                            }
                          >
                            <View
                              className="icon-wrapper"
                            >
                              <View
                                onLayout={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "position": "relative",
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "opacity": 1,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#f9f9f9",
                                        "height": 18,
                                        "justifyContent": "center",
                                        "width": 18,
                                      }
                                    }
                                    testID="Image__placeholder"
                                  />
                                </View>
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "overflow": "hidden",
                                      },
                                      Object {
                                        "height": 18,
                                        "width": 18,
                                      },
                                    ]
                                  }
                                >
                                  <FastImageView
                                    onFastImageError={[Function]}
                                    onFastImageLoadEnd={[Function]}
                                    resizeMode="cover"
                                    size={18}
                                    source={
                                      Object {
                                        "testUri": "../../../assets/icons/icon_checkbox.svg",
                                      }
                                    }
                                    style={
                                      Object {
                                        "bottom": 0,
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  />
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "flex": 1,
                      "paddingHorizontal": 12,
                    }
                  }
                >
                  <Text
                    numberOfLines={2}
                    style={
                      Object {
                        "color": "#2F3945",
                        "fontFamily": "OpenSans-SemiBold",
                        "fontSize": 14,
                        "maxWidth": 200,
                        "paddingTop": 2,
                      }
                    }
                  >
                    EVOL Community
                  </Text>
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      }
                    }
                  >
                    <View
                      accessibilityState={
                        Object {
                          "disabled": true,
                        }
                      }
                      accessible={true}
                      focusable={false}
                      hitSlop={
                        Object {
                          "bottom": 10,
                          "left": 10,
                          "right": 10,
                          "top": 10,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                            },
                            undefined,
                            Object {
                              "backgroundColor": undefined,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              undefined,
                              undefined,
                              undefined,
                            ]
                          }
                        >
                          <View
                            className="icon-wrapper"
                          >
                            <RNSVGSvgView
                              align="xMidYMid"
                              bbHeight={16}
                              bbWidth={16}
                              fill="#627286"
                              focusable={false}
                              height={16}
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  Object {},
                                  Object {
                                    "flex": 0,
                                    "height": 16,
                                    "width": 16,
                                  },
                                ]
                              }
                              vbHeight={24}
                              vbWidth={24}
                              width={16}
                            >
                              <RNSVGGroup
                                fill={4284641926}
                                propList={
                                  Array [
                                    "fill",
                                  ]
                                }
                              >
                                <RNSVGPath
                                  d="M12.3,12.22A4.92,4.92,0,0,0,14,8.5a5,5,0,0,0-10,0,4.92,4.92,0,0,0,1.7,3.72A8,8,0,0,0,1,19.5a1,1,0,0,0,2,0,6,6,0,0,1,12,0,1,1,0,0,0,2,0A8,8,0,0,0,12.3,12.22ZM9,11.5a3,3,0,1,1,3-3A3,3,0,0,1,9,11.5Zm9.74.32A5,5,0,0,0,15,3.5a1,1,0,0,0,0,2,3,3,0,0,1,3,3,3,3,0,0,1-1.5,2.59,1,1,0,0,0-.5.84,1,1,0,0,0,.45.86l.39.26.13.07a7,7,0,0,1,4,6.38,1,1,0,0,0,2,0A9,9,0,0,0,18.74,11.82Z"
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                          </View>
                        </View>
                      </View>
                    </View>
                    <Text
                      style={
                        Object {
                          "color": "#627286",
                          "fontFamily": "OpenSans-Regular",
                          "fontSize": 14,
                          "marginHorizontal": 4,
                        }
                      }
                    >
                      25
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
      >
        <View />
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`PostSelectAudience screen renders correctly with params isFirstStep 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
    }
  }
>
  <View
    testID="header"
  >
    <View
      animatedStyle={
        Object {
          "value": Object {
            "height": 60,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "alignItems": "flex-end",
          "backgroundColor": "#FFFFFF",
          "borderBottomWidth": 0.5,
          "borderColor": "#EAEDF2",
          "elevation": 2,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingTop": 0,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 1,
        }
      }
      testID="header.content"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "flex": 1,
            "flexDirection": "row",
            "height": 60,
            "overflow": "hidden",
            "paddingLeft": 8,
            "paddingRight": 8,
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 20,
              "left": 20,
              "right": 20,
              "top": 20,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="header.back.button"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Object {
                  "alignItems": "center",
                  "height": 48,
                  "justifyContent": "center",
                  "padding": 12,
                  "width": 48,
                },
                Object {
                  "backgroundColor": undefined,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View
                className="icon-wrapper"
                testID="header.back"
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={24}
                  bbWidth={24}
                  fill="#2F3945"
                  focusable={false}
                  height={24}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {},
                      Object {
                        "flex": 0,
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={24}
                >
                  <RNSVGGroup
                    fill={4281284933}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "flex": 1,
              "height": "100%",
              "justifyContent": "center",
              "marginLeft": 16,
              "paddingTop": 1.5,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            focusable={false}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Object {
                  "color": "#2F3945",
                  "fontFamily": "OpenSans-SemiBold",
                  "fontSize": 16,
                  "height": 24,
                  "lineHeight": 24,
                }
              }
              testID="header.text"
            >
              Select Audiences
            </Text>
          </View>
        </View>
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#D5DCE5",
              "borderColor": "#7843DD",
              "borderRadius": 6,
              "borderWidth": 0,
              "height": 40,
              "marginRight": 4,
              "padding": 8,
            }
          }
          testID="select_audience.btn_done"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
            testID="button_wrapper.content"
          >
            <Text
              style={
                Object {
                  "color": "#B2BDCD",
                  "fontFamily": "OpenSans-SemiBold",
                  "fontSize": 16,
                  "textAlign": "center",
                }
              }
              testID="header.button.text"
            >
              Next
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "height": 0,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#EAEDF2",
        "borderRadius": 20,
        "height": 40,
        "justifyContent": "center",
        "margin": 12,
        "paddingHorizontal": 16,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "marginRight": 8,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={20}
                bbWidth={20}
                fill="#627286"
                focusable={false}
                height={20}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={20}
              >
                <RNSVGGroup
                  fill={4284641926}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M21.71,20.29,18,16.61A9,9,0,1,0,16.61,18l3.68,3.68a1,1,0,0,0,1.42,0A1,1,0,0,0,21.71,20.29ZM11,18a7,7,0,1,1,7-7A7,7,0,0,1,11,18Z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <TextInput
        autoComplete="off"
        autoFocus={true}
        onChangeText={[Function]}
        onFocus={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Search for groups or people"
        placeholderTextColor="#627286"
        returnKeyType="search"
        selectionColor="#627286"
        style={
          Object {
            "color": "#2F3945",
            "flex": 1,
            "fontFamily": "OpenSans-Regular",
            "fontSize": 16,
            "height": "100%",
          }
        }
        testID="post_select_audience.search"
        value=""
      />
    </View>
  </View>
  <RCTScrollView
    ListEmptyComponent={[Function]}
    ListFooterComponent={[Function]}
    ListHeaderComponent={[Function]}
    data={Array []}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "paddingHorizontal": 16,
      }
    }
  >
    <View>
      <View
        onLayout={[Function]}
      />
      <View
        onLayout={[Function]}
      >
        <View>
          <ActivityIndicator
            color="#EAEDF2"
            size="large"
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
