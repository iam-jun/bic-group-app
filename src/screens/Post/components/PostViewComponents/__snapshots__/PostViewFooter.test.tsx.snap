// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostViewFooter component should render correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "borderColor": "#EAEDF2",
      "borderTopWidth": 1,
      "flexDirection": "row",
      "height": 44,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "height": "auto",
      }
    }
  >
    <View
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
        testID="button_wrapper.content"
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Object {
                  "marginHorizontal": 8,
                },
                Object {
                  "backgroundColor": undefined,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View
                testID="button_wrapper.icon"
              >
                <View
                  onLayout={[Function]}
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "position": "relative",
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "opacity": 1,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#f9f9f9",
                          "height": 14,
                          "justifyContent": "center",
                          "width": 14,
                        }
                      }
                      testID="Image__placeholder"
                    />
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "overflow": "hidden",
                        },
                        Object {
                          "height": 14,
                          "width": 14,
                        },
                      ]
                    }
                  >
                    <FastImageView
                      onFastImageError={[Function]}
                      onFastImageLoadEnd={[Function]}
                      resizeMode="cover"
                      size={14}
                      source={null}
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#2F3945",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 14,
              },
              Object {
                "color": "#627286",
              },
              Object {
                "textAlign": "center",
              },
            ]
          }
        >
          React
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "alignSelf": "stretch",
          "backgroundColor": "#EAEDF2",
          "height": undefined,
          "marginVertical": 0,
          "width": 1,
        },
        Object {
          "alignSelf": "center",
          "height": "66%",
        },
      ]
    }
    testID="divider"
  />
  <View
    style={
      Object {
        "flex": 1,
        "height": "auto",
      }
    }
  >
    <View
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
        testID="button_wrapper.content"
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Object {
                  "marginHorizontal": 8,
                },
                Object {
                  "backgroundColor": undefined,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View
                testID="button_wrapper.icon"
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={14}
                  bbWidth={14}
                  color={4284641926}
                  focusable={false}
                  height={14}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {},
                      Object {
                        "flex": 0,
                        "height": 14,
                        "width": 14,
                      },
                    ]
                  }
                  tintColor={4284641926}
                  vbHeight={24}
                  vbWidth={24}
                  width={14}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M12 9a1 1 0 101 1 1 1 0 00-1-1zm7-7H5a3 3 0 00-3 3v10a3 3 0 003 3h11.59l3.7 3.71A1 1 0 0021 22a.84.84 0 00.38-.08A1 1 0 0022 21V5a3 3 0 00-3-3zm1 16.59l-2.29-2.3A1 1 0 0017 16H5a1 1 0 01-1-1V5a1 1 0 011-1h14a1 1 0 011 1zM8 9a1 1 0 101 1 1 1 0 00-1-1zm8 0a1 1 0 101 1 1 1 0 00-1-1z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#2F3945",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 14,
              },
              Object {
                "color": "#627286",
              },
              Object {
                "textAlign": "center",
              },
            ]
          }
        />
      </View>
    </View>
  </View>
</View>
`;
