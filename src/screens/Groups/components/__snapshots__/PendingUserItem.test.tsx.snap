// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PendingUserItem component should render data correctly 1`] = `
<View
  style={
    Object {
      "marginVertical": 4,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Object {
          "borderRadius": 6,
          "height": 48,
          "width": 48,
        }
      }
      testID="avatar"
    >
      <View
        style={
          Object {
            "borderRadius": 6,
            "height": 48,
            "width": 48,
          }
        }
        testID="avatar_container"
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "position": "relative",
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#f9f9f9",
                  "borderRadius": 6,
                  "height": 48,
                  "justifyContent": "center",
                  "width": 48,
                }
              }
              testID="Image__placeholder"
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Object {
                  "borderRadius": 6,
                  "height": 48,
                  "width": 48,
                },
              ]
            }
          >
            <FastImageView
              onFastImageError={[Function]}
              onFastImageLoadEnd={[Function]}
              resizeMode="cover"
              source={
                Object {
                  "uri": "https://bein-entity-attribute-stg.s3.ap-southeast-1.amazonaws.com/user/avatar/images/original/949ad541-c16f-4974-a83c-db04f3a393c9.jpg",
                }
              }
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
              testID="avatar.image"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "justifyContent": "center",
          "marginLeft": 12,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#2F3945",
              "fontFamily": "OpenSans-SemiBold",
              "fontSize": 16,
            },
            Object {},
            undefined,
          ]
        }
      >
        User Name Test
      </Text>
      <Text
        style={
          Array [
            Object {
              "color": "#2F3945",
              "fontFamily": "OpenSans-Regular",
              "fontSize": 16,
            },
            Object {
              "color": "#627286",
            },
            undefined,
          ]
        }
      >
        Requested at Jun 06 at 03:12 PM
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "marginTop": 16,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginBottom": 8,
          "marginRight": 12,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              undefined,
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View>
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                color={4288772850}
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                tintColor={4288772850}
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M18 4.48a8.45 8.45 0 00-12 12l5.27 5.28a1 1 0 001.42 0L18 16.43a8.45 8.45 0 000-11.95zM16.57 15L12 19.59 7.43 15a6.46 6.46 0 119.14 0zM9 7.41a4.32 4.32 0 000 6.1 4.31 4.31 0 007.36-3 4.24 4.24 0 00-1.26-3.05A4.3 4.3 0 009 7.41zm4.69 4.68a2.33 2.33 0 11.67-1.63 2.33 2.33 0 01-.72 1.63z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <Text
        style={
          Array [
            Object {
              "color": "#2F3945",
              "fontFamily": "OpenSans-Regular",
              "fontSize": 16,
            },
            Object {},
            Object {
              "marginLeft": 16,
            },
          ]
        }
      >
        Hồ Chí Minh, Việt Nam
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "marginBottom": 8,
          "marginRight": 12,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              undefined,
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View>
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                color={4288772850}
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                tintColor={4288772850}
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M19 4H5a3 3 0 00-3 3v10a3 3 0 003 3h14a3 3 0 003-3V7a3 3 0 00-3-3zm-.41 2l-5.88 5.88a1 1 0 01-1.42 0L5.41 6zM20 17a1 1 0 01-1 1H5a1 1 0 01-1-1V7.41l5.88 5.88a3 3 0 004.24 0L20 7.41z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <Text
        style={
          Array [
            Object {
              "color": "#2F3945",
              "fontFamily": "OpenSans-Regular",
              "fontSize": 16,
            },
            Object {},
            Object {
              "marginLeft": 16,
            },
          ]
        }
      >
        usernametest@mail.com
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "marginVertical": 8,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#F8F5FF",
          "borderRadius": 6,
          "flex": 1,
          "marginRight": 8,
          "padding": 8,
        }
      }
      testID="pending_user_item.btn_decline"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
        testID="button_wrapper.content"
      >
        <Text
          style={
            Array [
              Object {
                "color": "#2F3945",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 16,
              },
              Object {
                "color": "#5D2C9A",
              },
              Object {
                "textAlign": "center",
              },
            ]
          }
        >
          Decline
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#A17AF2",
          "borderRadius": 6,
          "flex": 1,
          "padding": 8,
        }
      }
      testID="pending_user_item.btn_approve"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
        testID="button_wrapper.content"
      >
        <Text
          style={
            Array [
              Object {
                "color": "#2F3945",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 16,
              },
              Object {
                "color": "#FFFFFF",
              },
              Object {
                "textAlign": "center",
              },
            ]
          }
        >
          Approve
        </Text>
      </View>
    </View>
  </View>
</View>
`;
