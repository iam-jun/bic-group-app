// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InfoHeader component renders correctly 1`] = `
<View
  testID="info_header"
>
  <View
    testID="info_header.cover"
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "position": "relative",
        }
      }
    >
      <View
        collapsable={false}
        nativeID="animatedComponent"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#f9f9f9",
              "height": 330,
              "justifyContent": "center",
              "width": 750,
            }
          }
          testID="Image__placeholder"
        />
      </View>
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "height": 330,
              "width": 750,
            },
          ]
        }
      >
        <FastImageView
          onFastImageError={[Function]}
          onFastImageLoadEnd={[Function]}
          resizeMode="cover"
          source={
            Object {
              "testUri": "../../../assets/images/cover_default.png",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#FFFFFF",
        "flexDirection": "row",
        "paddingHorizontal": 16,
        "paddingVertical": 8,
      }
    }
  >
    <View
      style={
        Object {
          "borderRadius": 6,
          "height": 48,
          "marginRight": 12,
          "width": 48,
        }
      }
      testID="avatar"
    >
      <View
        style={
          Object {
            "borderRadius": 6,
            "height": 48,
            "width": 48,
          }
        }
        testID="avatar_container"
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "position": "relative",
            }
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#f9f9f9",
                  "borderRadius": 6,
                  "height": 48,
                  "justifyContent": "center",
                  "width": 48,
                }
              }
              testID="Image__placeholder"
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Object {
                  "borderRadius": 6,
                  "height": 48,
                  "width": 48,
                },
              ]
            }
          >
            <FastImageView
              onFastImageError={[Function]}
              onFastImageLoadEnd={[Function]}
              resizeMode="cover"
              source={
                Object {
                  "testUri": "../../../assets/images/user_avatar_default.png",
                }
              }
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
              testID="avatar.image"
            />
          </View>
        </View>
      </View>
    </View>
    <View>
      <Text
        style={
          Array [
            Object {
              "color": "#2F3945",
              "fontFamily": "OpenSans-SemiBold",
              "fontSize": 16,
            },
            Object {},
            undefined,
          ]
        }
        testID="info_header.name"
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                undefined,
                Object {
                  "backgroundColor": undefined,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View
                className="icon-wrapper"
              >
                <View
                  onLayout={[Function]}
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "position": "relative",
                    }
                  }
                >
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "opacity": 1,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#f9f9f9",
                          "height": 16,
                          "justifyContent": "center",
                          "width": 16,
                        }
                      }
                      testID="Image__placeholder"
                    />
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "overflow": "hidden",
                        },
                        Object {
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                  >
                    <FastImageView
                      onFastImageError={[Function]}
                      onFastImageLoadEnd={[Function]}
                      resizeMode="cover"
                      size={16}
                      source={null}
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#2F3945",
                "fontFamily": "OpenSans-Regular",
                "fontSize": 14,
              },
              Object {
                "color": "#627286",
              },
              undefined,
            ]
          }
          testID="info_header.privacy"
        >
           undefined
        </Text>
        <Text
          style={
            Array [
              Object {
                "color": "#2F3945",
                "fontFamily": "OpenSans-Regular",
                "fontSize": 14,
              },
              Object {
                "color": "#627286",
              },
              undefined,
            ]
          }
        >
           â€¢ 
        </Text>
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                undefined,
                Object {
                  "backgroundColor": undefined,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View
                className="icon-wrapper"
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  fill="#2F3945"
                  focusable={false}
                  height={16}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {},
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={16}
                >
                  <RNSVGGroup
                    fill={4281284933}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M12.3,12.22A4.92,4.92,0,0,0,14,8.5a5,5,0,0,0-10,0,4.92,4.92,0,0,0,1.7,3.72A8,8,0,0,0,1,19.5a1,1,0,0,0,2,0,6,6,0,0,1,12,0,1,1,0,0,0,2,0A8,8,0,0,0,12.3,12.22ZM9,11.5a3,3,0,1,1,3-3A3,3,0,0,1,9,11.5Zm9.74.32A5,5,0,0,0,15,3.5a1,1,0,0,0,0,2,3,3,0,0,1,3,3,3,3,0,0,1-1.5,2.59,1,1,0,0,0-.5.84,1,1,0,0,0,.45.86l.39.26.13.07a7,7,0,0,1,4,6.38,1,1,0,0,0,2,0A9,9,0,0,0,18.74,11.82Z"
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#2F3945",
                "fontFamily": "OpenSans-Regular",
                "fontSize": 14,
              },
              Object {
                "color": "#627286",
              },
              undefined,
            ]
          }
          testID="info_header.member_count"
        >
           undefined undefined
        </Text>
      </View>
    </View>
  </View>
</View>
`;
