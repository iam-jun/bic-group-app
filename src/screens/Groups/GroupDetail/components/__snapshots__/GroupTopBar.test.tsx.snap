// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GroupTopBar component renders Admin icon correctly when user is an admin 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    pointerEvents="box-none"
    style={
      Object {
        "zIndex": 1,
      }
    }
  >
    <View
      accessibilityElementsHidden={false}
      importantForAccessibility="auto"
      onLayout={[Function]}
      pointerEvents="box-none"
      style={null}
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(216, 216, 216)",
              "flex": 1,
              "shadowColor": "rgb(216, 216, 216)",
              "shadowOffset": Object {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.85,
              "shadowRadius": 0,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "maxHeight": undefined,
            "minHeight": undefined,
            "opacity": undefined,
            "transform": undefined,
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            Object {
              "height": 0,
            }
          }
        />
        <View
          pointerEvents="box-none"
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "marginHorizontal": 16,
                "opacity": 1,
              }
            }
          >
            <Text
              accessibilityRole="header"
              aria-level="1"
              collapsable={false}
              nativeID="animatedComponent"
              numberOfLines={1}
              onLayout={[Function]}
              style={
                Object {
                  "color": "rgb(28, 28, 30)",
                  "fontSize": 17,
                  "fontWeight": "600",
                }
              }
            >
              MockedScreen
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RNSScreenContainer
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      activityState={2}
      forwardedRef={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "opacity": 1,
          }
        }
      />
      <View
        accessibilityElementsHidden={false}
        closing={false}
        gestureVelocityImpact={0.3}
        importantForAccessibility="auto"
        onClose={[Function]}
        onGestureBegin={[Function]}
        onGestureCanceled={[Function]}
        onGestureEnd={[Function]}
        onOpen={[Function]}
        onTransition={[Function]}
        pointerEvents="box-none"
        style={
          Array [
            Object {
              "overflow": undefined,
            },
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
          ]
        }
        transitionSpec={
          Object {
            "close": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 10,
                "restSpeedThreshold": 10,
                "stiffness": 1000,
              },
            },
            "open": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 10,
                "restSpeedThreshold": 10,
                "stiffness": 1000,
              },
            },
          }
        }
      >
        <View
          collapsable={false}
          nativeID="animatedComponent"
          needsOffscreenAlphaCompositing={false}
          pointerEvents="box-none"
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            collapsable={false}
            forwardedRef={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              Object {
                "flex": 1,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                  Object {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "backgroundColor": "rgb(242, 242, 242)",
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": -1,
                  },
                  "shadowOpacity": 0.3,
                  "shadowRadius": 5,
                  "top": 0,
                  "width": 3,
                }
              }
            />
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "overflow": "hidden",
                  },
                  Array [
                    Object {
                      "backgroundColor": "rgb(242, 242, 242)",
                    },
                    undefined,
                  ],
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "column-reverse",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "marginHorizontal": 16,
                        "marginVertical": 8,
                      }
                    }
                    testID="group_top_bar"
                  >
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          Object {
                            "disabled": false,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        hitSlop={
                          Object {
                            "bottom": 20,
                            "left": 20,
                            "right": 20,
                            "top": 20,
                          }
                        }
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="group_top_bar.back"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                              undefined,
                              Object {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                undefined,
                                undefined,
                                undefined,
                              ]
                            }
                          >
                            <View
                              className="icon-wrapper"
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={28}
                                bbWidth={28}
                                fill="#2F3945"
                                focusable={false}
                                height={28}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    Object {},
                                    Object {
                                      "flex": 0,
                                      "height": 28,
                                      "width": 28,
                                    },
                                  ]
                                }
                                vbHeight={24}
                                vbWidth={24}
                                width={28}
                              >
                                <RNSVGGroup
                                  fill={4281284933}
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                >
                                  <RNSVGPath
                                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="group_top_bar.search"
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "justifyContent": "center",
                            }
                          }
                          testID="button_wrapper.content"
                        >
                          <View
                            accessibilityState={
                              Object {
                                "disabled": true,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={false}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            nativeID="animatedComponent"
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "marginRight": 24,
                                  },
                                  Object {
                                    "backgroundColor": undefined,
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  Array [
                                    undefined,
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  className="icon-wrapper"
                                >
                                  <View
                                    onLayout={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "transparent",
                                        "position": "relative",
                                      }
                                    }
                                  >
                                    <View
                                      collapsable={false}
                                      nativeID="animatedComponent"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "opacity": 1,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "backgroundColor": "#f9f9f9",
                                            "height": 22,
                                            "justifyContent": "center",
                                            "width": 22,
                                          }
                                        }
                                        testID="Image__placeholder"
                                      />
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "overflow": "hidden",
                                          },
                                          Object {
                                            "height": 22,
                                            "width": 22,
                                          },
                                        ]
                                      }
                                    >
                                      <FastImageView
                                        onFastImageError={[Function]}
                                        onFastImageLoadEnd={[Function]}
                                        resizeMode="cover"
                                        size={22}
                                        source={null}
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      />
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="group_top_bar.chat"
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "justifyContent": "center",
                            }
                          }
                          testID="button_wrapper.content"
                        >
                          <View
                            accessibilityState={
                              Object {
                                "disabled": true,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={false}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            nativeID="animatedComponent"
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "marginRight": 24,
                                  },
                                  Object {
                                    "backgroundColor": undefined,
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  Array [
                                    undefined,
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  className="icon-wrapper"
                                >
                                  <View
                                    onLayout={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "transparent",
                                        "position": "relative",
                                      }
                                    }
                                  >
                                    <View
                                      collapsable={false}
                                      nativeID="animatedComponent"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "opacity": 1,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "backgroundColor": "#f9f9f9",
                                            "height": 24,
                                            "justifyContent": "center",
                                            "width": 24,
                                          }
                                        }
                                        testID="Image__placeholder"
                                      />
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "overflow": "hidden",
                                          },
                                          Object {
                                            "height": 24,
                                            "width": 24,
                                          },
                                        ]
                                      }
                                    >
                                      <FastImageView
                                        onFastImageError={[Function]}
                                        onFastImageLoadEnd={[Function]}
                                        resizeMode="cover"
                                        size={24}
                                        source={null}
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      />
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="group_top_bar.admin_button"
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "justifyContent": "center",
                            }
                          }
                          testID="button_wrapper.content"
                        >
                          <View
                            accessibilityState={
                              Object {
                                "disabled": true,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={false}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            nativeID="animatedComponent"
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                  undefined,
                                  Object {
                                    "backgroundColor": undefined,
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  Array [
                                    undefined,
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  className="icon-wrapper"
                                >
                                  <View
                                    onLayout={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "transparent",
                                        "position": "relative",
                                      }
                                    }
                                  >
                                    <View
                                      collapsable={false}
                                      nativeID="animatedComponent"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "opacity": 1,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "backgroundColor": "#f9f9f9",
                                            "height": 24,
                                            "justifyContent": "center",
                                            "width": 24,
                                          }
                                        }
                                        testID="Image__placeholder"
                                      />
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "overflow": "hidden",
                                          },
                                          Object {
                                            "height": 24,
                                            "width": 24,
                                          },
                                        ]
                                      }
                                    >
                                      <FastImageView
                                        onFastImageError={[Function]}
                                        onFastImageLoadEnd={[Function]}
                                        resizeMode="cover"
                                        size={24}
                                        source={null}
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      />
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenContainer>
</View>
`;

exports[`GroupTopBar component renders Chat icon correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    pointerEvents="box-none"
    style={
      Object {
        "zIndex": 1,
      }
    }
  >
    <View
      accessibilityElementsHidden={false}
      importantForAccessibility="auto"
      onLayout={[Function]}
      pointerEvents="box-none"
      style={null}
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(216, 216, 216)",
              "flex": 1,
              "shadowColor": "rgb(216, 216, 216)",
              "shadowOffset": Object {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.85,
              "shadowRadius": 0,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "maxHeight": undefined,
            "minHeight": undefined,
            "opacity": undefined,
            "transform": undefined,
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            Object {
              "height": 0,
            }
          }
        />
        <View
          pointerEvents="box-none"
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "marginHorizontal": 16,
                "opacity": 1,
              }
            }
          >
            <Text
              accessibilityRole="header"
              aria-level="1"
              collapsable={false}
              nativeID="animatedComponent"
              numberOfLines={1}
              onLayout={[Function]}
              style={
                Object {
                  "color": "rgb(28, 28, 30)",
                  "fontSize": 17,
                  "fontWeight": "600",
                }
              }
            >
              MockedScreen
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RNSScreenContainer
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      activityState={2}
      forwardedRef={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "opacity": 1,
          }
        }
      />
      <View
        accessibilityElementsHidden={false}
        closing={false}
        gestureVelocityImpact={0.3}
        importantForAccessibility="auto"
        onClose={[Function]}
        onGestureBegin={[Function]}
        onGestureCanceled={[Function]}
        onGestureEnd={[Function]}
        onOpen={[Function]}
        onTransition={[Function]}
        pointerEvents="box-none"
        style={
          Array [
            Object {
              "overflow": undefined,
            },
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
          ]
        }
        transitionSpec={
          Object {
            "close": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 10,
                "restSpeedThreshold": 10,
                "stiffness": 1000,
              },
            },
            "open": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 10,
                "restSpeedThreshold": 10,
                "stiffness": 1000,
              },
            },
          }
        }
      >
        <View
          collapsable={false}
          nativeID="animatedComponent"
          needsOffscreenAlphaCompositing={false}
          pointerEvents="box-none"
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            collapsable={false}
            forwardedRef={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              Object {
                "flex": 1,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                  Object {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "backgroundColor": "rgb(242, 242, 242)",
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": -1,
                  },
                  "shadowOpacity": 0.3,
                  "shadowRadius": 5,
                  "top": 0,
                  "width": 3,
                }
              }
            />
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "overflow": "hidden",
                  },
                  Array [
                    Object {
                      "backgroundColor": "rgb(242, 242, 242)",
                    },
                    undefined,
                  ],
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "column-reverse",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "marginHorizontal": 16,
                        "marginVertical": 8,
                      }
                    }
                    testID="group_top_bar"
                  >
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          Object {
                            "disabled": false,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        hitSlop={
                          Object {
                            "bottom": 20,
                            "left": 20,
                            "right": 20,
                            "top": 20,
                          }
                        }
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="group_top_bar.back"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                              undefined,
                              Object {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                undefined,
                                undefined,
                                undefined,
                              ]
                            }
                          >
                            <View
                              className="icon-wrapper"
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={28}
                                bbWidth={28}
                                fill="#2F3945"
                                focusable={false}
                                height={28}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    Object {},
                                    Object {
                                      "flex": 0,
                                      "height": 28,
                                      "width": 28,
                                    },
                                  ]
                                }
                                vbHeight={24}
                                vbWidth={24}
                                width={28}
                              >
                                <RNSVGGroup
                                  fill={4281284933}
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                >
                                  <RNSVGPath
                                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="group_top_bar.search"
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "justifyContent": "center",
                            }
                          }
                          testID="button_wrapper.content"
                        >
                          <View
                            accessibilityState={
                              Object {
                                "disabled": true,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={false}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            nativeID="animatedComponent"
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "marginRight": 24,
                                  },
                                  Object {
                                    "backgroundColor": undefined,
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  Array [
                                    undefined,
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  className="icon-wrapper"
                                >
                                  <View
                                    onLayout={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "transparent",
                                        "position": "relative",
                                      }
                                    }
                                  >
                                    <View
                                      collapsable={false}
                                      nativeID="animatedComponent"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "opacity": 1,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "backgroundColor": "#f9f9f9",
                                            "height": 22,
                                            "justifyContent": "center",
                                            "width": 22,
                                          }
                                        }
                                        testID="Image__placeholder"
                                      />
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "overflow": "hidden",
                                          },
                                          Object {
                                            "height": 22,
                                            "width": 22,
                                          },
                                        ]
                                      }
                                    >
                                      <FastImageView
                                        onFastImageError={[Function]}
                                        onFastImageLoadEnd={[Function]}
                                        resizeMode="cover"
                                        size={22}
                                        source={null}
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      />
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="group_top_bar.chat"
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "justifyContent": "center",
                            }
                          }
                          testID="button_wrapper.content"
                        >
                          <View
                            accessibilityState={
                              Object {
                                "disabled": true,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={false}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            nativeID="animatedComponent"
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "marginRight": 24,
                                  },
                                  Object {
                                    "backgroundColor": undefined,
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  Array [
                                    undefined,
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  className="icon-wrapper"
                                >
                                  <View
                                    onLayout={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "transparent",
                                        "position": "relative",
                                      }
                                    }
                                  >
                                    <View
                                      collapsable={false}
                                      nativeID="animatedComponent"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "opacity": 1,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "backgroundColor": "#f9f9f9",
                                            "height": 24,
                                            "justifyContent": "center",
                                            "width": 24,
                                          }
                                        }
                                        testID="Image__placeholder"
                                      />
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "overflow": "hidden",
                                          },
                                          Object {
                                            "height": 24,
                                            "width": 24,
                                          },
                                        ]
                                      }
                                    >
                                      <FastImageView
                                        onFastImageError={[Function]}
                                        onFastImageLoadEnd={[Function]}
                                        resizeMode="cover"
                                        size={24}
                                        source={null}
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      />
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="group_top_bar.option_menu"
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "justifyContent": "center",
                            }
                          }
                          testID="button_wrapper.content"
                        >
                          <View
                            accessibilityState={
                              Object {
                                "disabled": true,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={false}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            nativeID="animatedComponent"
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                  undefined,
                                  Object {
                                    "backgroundColor": undefined,
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  Array [
                                    undefined,
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  className="icon-wrapper"
                                >
                                  <RNSVGSvgView
                                    align="xMidYMid"
                                    bbHeight={20}
                                    bbWidth={20}
                                    fill="#2F3945"
                                    focusable={false}
                                    height={20}
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {},
                                        Object {
                                          "flex": 0,
                                          "height": 20,
                                          "width": 20,
                                        },
                                      ]
                                    }
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={20}
                                  >
                                    <RNSVGGroup
                                      fill={4281284933}
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    >
                                      <RNSVGPath
                                        d="M12,10a2,2,0,1,0,2,2A2,2,0,0,0,12,10ZM5,10a2,2,0,1,0,2,2A2,2,0,0,0,5,10Zm14,0a2,2,0,1,0,2,2A2,2,0,0,0,19,10Z"
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenContainer>
</View>
`;

exports[`GroupTopBar component renders Search icon correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    pointerEvents="box-none"
    style={
      Object {
        "zIndex": 1,
      }
    }
  >
    <View
      accessibilityElementsHidden={false}
      importantForAccessibility="auto"
      onLayout={[Function]}
      pointerEvents="box-none"
      style={null}
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(216, 216, 216)",
              "flex": 1,
              "shadowColor": "rgb(216, 216, 216)",
              "shadowOffset": Object {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.85,
              "shadowRadius": 0,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "maxHeight": undefined,
            "minHeight": undefined,
            "opacity": undefined,
            "transform": undefined,
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            Object {
              "height": 0,
            }
          }
        />
        <View
          pointerEvents="box-none"
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "marginHorizontal": 16,
                "opacity": 1,
              }
            }
          >
            <Text
              accessibilityRole="header"
              aria-level="1"
              collapsable={false}
              nativeID="animatedComponent"
              numberOfLines={1}
              onLayout={[Function]}
              style={
                Object {
                  "color": "rgb(28, 28, 30)",
                  "fontSize": 17,
                  "fontWeight": "600",
                }
              }
            >
              MockedScreen
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RNSScreenContainer
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      activityState={2}
      forwardedRef={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "opacity": 1,
          }
        }
      />
      <View
        accessibilityElementsHidden={false}
        closing={false}
        gestureVelocityImpact={0.3}
        importantForAccessibility="auto"
        onClose={[Function]}
        onGestureBegin={[Function]}
        onGestureCanceled={[Function]}
        onGestureEnd={[Function]}
        onOpen={[Function]}
        onTransition={[Function]}
        pointerEvents="box-none"
        style={
          Array [
            Object {
              "overflow": undefined,
            },
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
          ]
        }
        transitionSpec={
          Object {
            "close": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 10,
                "restSpeedThreshold": 10,
                "stiffness": 1000,
              },
            },
            "open": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 10,
                "restSpeedThreshold": 10,
                "stiffness": 1000,
              },
            },
          }
        }
      >
        <View
          collapsable={false}
          nativeID="animatedComponent"
          needsOffscreenAlphaCompositing={false}
          pointerEvents="box-none"
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            collapsable={false}
            forwardedRef={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              Object {
                "flex": 1,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                  Object {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "backgroundColor": "rgb(242, 242, 242)",
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": -1,
                  },
                  "shadowOpacity": 0.3,
                  "shadowRadius": 5,
                  "top": 0,
                  "width": 3,
                }
              }
            />
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "overflow": "hidden",
                  },
                  Array [
                    Object {
                      "backgroundColor": "rgb(242, 242, 242)",
                    },
                    undefined,
                  ],
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "column-reverse",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "marginHorizontal": 16,
                        "marginVertical": 8,
                      }
                    }
                    testID="group_top_bar"
                  >
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          Object {
                            "disabled": false,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        hitSlop={
                          Object {
                            "bottom": 20,
                            "left": 20,
                            "right": 20,
                            "top": 20,
                          }
                        }
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="group_top_bar.back"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                              undefined,
                              Object {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                undefined,
                                undefined,
                                undefined,
                              ]
                            }
                          >
                            <View
                              className="icon-wrapper"
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={28}
                                bbWidth={28}
                                fill="#2F3945"
                                focusable={false}
                                height={28}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    Object {},
                                    Object {
                                      "flex": 0,
                                      "height": 28,
                                      "width": 28,
                                    },
                                  ]
                                }
                                vbHeight={24}
                                vbWidth={24}
                                width={28}
                              >
                                <RNSVGGroup
                                  fill={4281284933}
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                >
                                  <RNSVGPath
                                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="group_top_bar.search"
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "justifyContent": "center",
                            }
                          }
                          testID="button_wrapper.content"
                        >
                          <View
                            accessibilityState={
                              Object {
                                "disabled": true,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={false}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            nativeID="animatedComponent"
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "marginRight": 24,
                                  },
                                  Object {
                                    "backgroundColor": undefined,
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  Array [
                                    undefined,
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  className="icon-wrapper"
                                >
                                  <View
                                    onLayout={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "transparent",
                                        "position": "relative",
                                      }
                                    }
                                  >
                                    <View
                                      collapsable={false}
                                      nativeID="animatedComponent"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "opacity": 1,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "backgroundColor": "#f9f9f9",
                                            "height": 22,
                                            "justifyContent": "center",
                                            "width": 22,
                                          }
                                        }
                                        testID="Image__placeholder"
                                      />
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "overflow": "hidden",
                                          },
                                          Object {
                                            "height": 22,
                                            "width": 22,
                                          },
                                        ]
                                      }
                                    >
                                      <FastImageView
                                        onFastImageError={[Function]}
                                        onFastImageLoadEnd={[Function]}
                                        resizeMode="cover"
                                        size={22}
                                        source={null}
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      />
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="group_top_bar.chat"
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "justifyContent": "center",
                            }
                          }
                          testID="button_wrapper.content"
                        >
                          <View
                            accessibilityState={
                              Object {
                                "disabled": true,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={false}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            nativeID="animatedComponent"
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "marginRight": 24,
                                  },
                                  Object {
                                    "backgroundColor": undefined,
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  Array [
                                    undefined,
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  className="icon-wrapper"
                                >
                                  <View
                                    onLayout={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "transparent",
                                        "position": "relative",
                                      }
                                    }
                                  >
                                    <View
                                      collapsable={false}
                                      nativeID="animatedComponent"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "opacity": 1,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "backgroundColor": "#f9f9f9",
                                            "height": 24,
                                            "justifyContent": "center",
                                            "width": 24,
                                          }
                                        }
                                        testID="Image__placeholder"
                                      />
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "overflow": "hidden",
                                          },
                                          Object {
                                            "height": 24,
                                            "width": 24,
                                          },
                                        ]
                                      }
                                    >
                                      <FastImageView
                                        onFastImageError={[Function]}
                                        onFastImageLoadEnd={[Function]}
                                        resizeMode="cover"
                                        size={24}
                                        source={null}
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      />
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="group_top_bar.option_menu"
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "justifyContent": "center",
                            }
                          }
                          testID="button_wrapper.content"
                        >
                          <View
                            accessibilityState={
                              Object {
                                "disabled": true,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={false}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            nativeID="animatedComponent"
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                  undefined,
                                  Object {
                                    "backgroundColor": undefined,
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  Array [
                                    undefined,
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  className="icon-wrapper"
                                >
                                  <RNSVGSvgView
                                    align="xMidYMid"
                                    bbHeight={20}
                                    bbWidth={20}
                                    fill="#2F3945"
                                    focusable={false}
                                    height={20}
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {},
                                        Object {
                                          "flex": 0,
                                          "height": 20,
                                          "width": 20,
                                        },
                                      ]
                                    }
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={20}
                                  >
                                    <RNSVGGroup
                                      fill={4281284933}
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    >
                                      <RNSVGPath
                                        d="M12,10a2,2,0,1,0,2,2A2,2,0,0,0,12,10ZM5,10a2,2,0,1,0,2,2A2,2,0,0,0,5,10Zm14,0a2,2,0,1,0,2,2A2,2,0,0,0,19,10Z"
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenContainer>
</View>
`;

exports[`GroupTopBar component should render group option menu correctly when user is not an admin 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    pointerEvents="box-none"
    style={
      Object {
        "zIndex": 1,
      }
    }
  >
    <View
      accessibilityElementsHidden={false}
      importantForAccessibility="auto"
      onLayout={[Function]}
      pointerEvents="box-none"
      style={null}
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(216, 216, 216)",
              "flex": 1,
              "shadowColor": "rgb(216, 216, 216)",
              "shadowOffset": Object {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.85,
              "shadowRadius": 0,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "maxHeight": undefined,
            "minHeight": undefined,
            "opacity": undefined,
            "transform": undefined,
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            Object {
              "height": 0,
            }
          }
        />
        <View
          pointerEvents="box-none"
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "marginHorizontal": 16,
                "opacity": 1,
              }
            }
          >
            <Text
              accessibilityRole="header"
              aria-level="1"
              collapsable={false}
              nativeID="animatedComponent"
              numberOfLines={1}
              onLayout={[Function]}
              style={
                Object {
                  "color": "rgb(28, 28, 30)",
                  "fontSize": 17,
                  "fontWeight": "600",
                }
              }
            >
              MockedScreen
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RNSScreenContainer
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      activityState={2}
      forwardedRef={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "opacity": 1,
          }
        }
      />
      <View
        accessibilityElementsHidden={false}
        closing={false}
        gestureVelocityImpact={0.3}
        importantForAccessibility="auto"
        onClose={[Function]}
        onGestureBegin={[Function]}
        onGestureCanceled={[Function]}
        onGestureEnd={[Function]}
        onOpen={[Function]}
        onTransition={[Function]}
        pointerEvents="box-none"
        style={
          Array [
            Object {
              "overflow": undefined,
            },
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
          ]
        }
        transitionSpec={
          Object {
            "close": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 10,
                "restSpeedThreshold": 10,
                "stiffness": 1000,
              },
            },
            "open": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 10,
                "restSpeedThreshold": 10,
                "stiffness": 1000,
              },
            },
          }
        }
      >
        <View
          collapsable={false}
          nativeID="animatedComponent"
          needsOffscreenAlphaCompositing={false}
          pointerEvents="box-none"
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            collapsable={false}
            forwardedRef={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              Object {
                "flex": 1,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                  Object {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "backgroundColor": "rgb(242, 242, 242)",
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": -1,
                  },
                  "shadowOpacity": 0.3,
                  "shadowRadius": 5,
                  "top": 0,
                  "width": 3,
                }
              }
            />
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "overflow": "hidden",
                  },
                  Array [
                    Object {
                      "backgroundColor": "rgb(242, 242, 242)",
                    },
                    undefined,
                  ],
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "column-reverse",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "marginHorizontal": 16,
                        "marginVertical": 8,
                      }
                    }
                    testID="group_top_bar"
                  >
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          Object {
                            "disabled": false,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        hitSlop={
                          Object {
                            "bottom": 20,
                            "left": 20,
                            "right": 20,
                            "top": 20,
                          }
                        }
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="group_top_bar.back"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                              undefined,
                              Object {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                undefined,
                                undefined,
                                undefined,
                              ]
                            }
                          >
                            <View
                              className="icon-wrapper"
                            >
                              <RNSVGSvgView
                                align="xMidYMid"
                                bbHeight={28}
                                bbWidth={28}
                                fill="#2F3945"
                                focusable={false}
                                height={28}
                                meetOrSlice={0}
                                minX={0}
                                minY={0}
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "borderWidth": 0,
                                    },
                                    Object {},
                                    Object {
                                      "flex": 0,
                                      "height": 28,
                                      "width": 28,
                                    },
                                  ]
                                }
                                vbHeight={24}
                                vbWidth={24}
                                width={28}
                              >
                                <RNSVGGroup
                                  fill={4281284933}
                                  propList={
                                    Array [
                                      "fill",
                                    ]
                                  }
                                >
                                  <RNSVGPath
                                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                                  />
                                </RNSVGGroup>
                              </RNSVGSvgView>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="group_top_bar.search"
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "justifyContent": "center",
                            }
                          }
                          testID="button_wrapper.content"
                        >
                          <View
                            accessibilityState={
                              Object {
                                "disabled": true,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={false}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            nativeID="animatedComponent"
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "marginRight": 24,
                                  },
                                  Object {
                                    "backgroundColor": undefined,
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  Array [
                                    undefined,
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  className="icon-wrapper"
                                >
                                  <View
                                    onLayout={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "transparent",
                                        "position": "relative",
                                      }
                                    }
                                  >
                                    <View
                                      collapsable={false}
                                      nativeID="animatedComponent"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "opacity": 1,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "backgroundColor": "#f9f9f9",
                                            "height": 22,
                                            "justifyContent": "center",
                                            "width": 22,
                                          }
                                        }
                                        testID="Image__placeholder"
                                      />
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "overflow": "hidden",
                                          },
                                          Object {
                                            "height": 22,
                                            "width": 22,
                                          },
                                        ]
                                      }
                                    >
                                      <FastImageView
                                        onFastImageError={[Function]}
                                        onFastImageLoadEnd={[Function]}
                                        resizeMode="cover"
                                        size={22}
                                        source={null}
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      />
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="group_top_bar.chat"
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "justifyContent": "center",
                            }
                          }
                          testID="button_wrapper.content"
                        >
                          <View
                            accessibilityState={
                              Object {
                                "disabled": true,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={false}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            nativeID="animatedComponent"
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                  Object {
                                    "marginRight": 24,
                                  },
                                  Object {
                                    "backgroundColor": undefined,
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  Array [
                                    undefined,
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  className="icon-wrapper"
                                >
                                  <View
                                    onLayout={[Function]}
                                    style={
                                      Object {
                                        "backgroundColor": "transparent",
                                        "position": "relative",
                                      }
                                    }
                                  >
                                    <View
                                      collapsable={false}
                                      nativeID="animatedComponent"
                                      style={
                                        Object {
                                          "bottom": 0,
                                          "left": 0,
                                          "opacity": 1,
                                          "position": "absolute",
                                          "right": 0,
                                          "top": 0,
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          Object {
                                            "alignItems": "center",
                                            "backgroundColor": "#f9f9f9",
                                            "height": 24,
                                            "justifyContent": "center",
                                            "width": 24,
                                          }
                                        }
                                        testID="Image__placeholder"
                                      />
                                    </View>
                                    <View
                                      style={
                                        Array [
                                          Object {
                                            "overflow": "hidden",
                                          },
                                          Object {
                                            "height": 24,
                                            "width": 24,
                                          },
                                        ]
                                      }
                                    >
                                      <FastImageView
                                        onFastImageError={[Function]}
                                        onFastImageLoadEnd={[Function]}
                                        resizeMode="cover"
                                        size={24}
                                        source={null}
                                        style={
                                          Object {
                                            "bottom": 0,
                                            "left": 0,
                                            "position": "absolute",
                                            "right": 0,
                                            "top": 0,
                                          }
                                        }
                                      />
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                        testID="group_top_bar.option_menu"
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "justifyContent": "center",
                            }
                          }
                          testID="button_wrapper.content"
                        >
                          <View
                            accessibilityState={
                              Object {
                                "disabled": true,
                              }
                            }
                            accessible={true}
                            collapsable={false}
                            focusable={false}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            nativeID="animatedComponent"
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                  },
                                  undefined,
                                  Object {
                                    "backgroundColor": undefined,
                                  },
                                ]
                              }
                            >
                              <View
                                style={
                                  Array [
                                    undefined,
                                    undefined,
                                    undefined,
                                  ]
                                }
                              >
                                <View
                                  className="icon-wrapper"
                                >
                                  <RNSVGSvgView
                                    align="xMidYMid"
                                    bbHeight={20}
                                    bbWidth={20}
                                    fill="#2F3945"
                                    focusable={false}
                                    height={20}
                                    meetOrSlice={0}
                                    minX={0}
                                    minY={0}
                                    style={
                                      Array [
                                        Object {
                                          "backgroundColor": "transparent",
                                          "borderWidth": 0,
                                        },
                                        Object {},
                                        Object {
                                          "flex": 0,
                                          "height": 20,
                                          "width": 20,
                                        },
                                      ]
                                    }
                                    vbHeight={24}
                                    vbWidth={24}
                                    width={20}
                                  >
                                    <RNSVGGroup
                                      fill={4281284933}
                                      propList={
                                        Array [
                                          "fill",
                                        ]
                                      }
                                    >
                                      <RNSVGPath
                                        d="M12,10a2,2,0,1,0,2,2A2,2,0,0,0,12,10ZM5,10a2,2,0,1,0,2,2A2,2,0,0,0,5,10Zm14,0a2,2,0,1,0,2,2A2,2,0,0,0,19,10Z"
                                      />
                                    </RNSVGGroup>
                                  </RNSVGSvgView>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenContainer>
</View>
`;
