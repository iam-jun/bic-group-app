// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GroupContent component renders on mobile correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
  testID="list_view"
>
  <RCTScrollView
    ItemSeparatorComponent={[Function]}
    ListFooterComponent={
      <ViewSpacing
        height={12}
      />
    }
    ListHeaderComponent={[Function]}
    ListHeaderComponentStyle={
      Object {
        "marginBottom": 12,
        "marginTop": 0,
      }
    }
    data={Array []}
    getItem={[Function]}
    getItemCount={[Function]}
    initialNumToRender={10}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.5}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
        tintColor="#B2BDCD"
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    showsVerticalScrollIndicator={true}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
      }
    }
    testID="list_view.flat_list"
    viewabilityConfigCallbackPairs={Array []}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "marginBottom": 12,
            "marginTop": 0,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#FFFFFF",
              }
            }
          >
            <View
              onLayout={[Function]}
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 210,
                        "justifyContent": "center",
                        "width": "100%",
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 210,
                        "width": "100%",
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    source={
                      Object {
                        "testUri": "../../../assets/images/cover_default.png",
                      }
                    }
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "paddingHorizontal": 16,
                  "paddingVertical": 12,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderRadius": 6,
                      "height": 48,
                      "marginRight": 16,
                      "width": 48,
                    }
                  }
                  testID="avatar"
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#B2BDCD",
                        "borderRadius": 6,
                        "height": 48,
                        "width": 48,
                      }
                    }
                    testID="avatar_container"
                  >
                    <View
                      onLayout={[Function]}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "position": "relative",
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        nativeID="animatedComponent"
                        style={
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "opacity": 1,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#f9f9f9",
                              "borderRadius": 6,
                              "height": 48,
                              "justifyContent": "center",
                              "width": 48,
                            }
                          }
                          testID="Image__placeholder"
                        />
                      </View>
                      <View
                        style={
                          Array [
                            Object {
                              "overflow": "hidden",
                            },
                            Object {
                              "borderRadius": 6,
                              "height": 48,
                              "width": 48,
                            },
                          ]
                        }
                      >
                        <FastImageView
                          onFastImageError={[Function]}
                          onFastImageLoadEnd={[Function]}
                          resizeMode="cover"
                          source={null}
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                          testID="avatar.image"
                        />
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={Object {}}
                  >
                    <Text
                      style={
                        Object {
                          "color": "#2F3945",
                          "fontFamily": "OpenSans-SemiBold",
                          "fontSize": 20,
                        }
                      }
                    />
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          Object {
                            "disabled": true,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={false}
                        hitSlop={
                          Object {
                            "bottom": 10,
                            "left": 10,
                            "right": 10,
                            "top": 10,
                          }
                        }
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                              },
                              Object {
                                "height": 16,
                                "marginRight": 4,
                              },
                              Object {
                                "backgroundColor": undefined,
                              },
                            ]
                          }
                        >
                          <View
                            style={
                              Array [
                                undefined,
                                undefined,
                                undefined,
                              ]
                            }
                          >
                            <View
                              className="icon-wrapper"
                            >
                              <View
                                onLayout={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "position": "relative",
                                  }
                                }
                              >
                                <View
                                  collapsable={false}
                                  nativeID="animatedComponent"
                                  style={
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "opacity": 1,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#f9f9f9",
                                        "height": 16,
                                        "justifyContent": "center",
                                        "width": 16,
                                      }
                                    }
                                    testID="Image__placeholder"
                                  />
                                </View>
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "overflow": "hidden",
                                      },
                                      Object {
                                        "height": 16,
                                        "width": 16,
                                      },
                                    ]
                                  }
                                >
                                  <FastImageView
                                    onFastImageError={[Function]}
                                    onFastImageLoadEnd={[Function]}
                                    resizeMode="cover"
                                    size={16}
                                    source={null}
                                    style={
                                      Object {
                                        "bottom": 0,
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  />
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                      <Text
                        style={
                          Object {
                            "color": "#2F3945",
                            "fontFamily": "OpenSans-Regular",
                            "fontSize": 12,
                          }
                        }
                      />
                      <Text
                        style={
                          Object {
                            "color": "#2F3945",
                            "fontFamily": "OpenSans-Regular",
                            "fontSize": 12,
                          }
                        }
                      >
                         • 
                      </Text>
                      <Text
                        style={
                          Object {
                            "color": "#2F3945",
                            "fontFamily": "OpenSans-SemiBold",
                            "fontSize": 14,
                          }
                        }
                      />
                      <Text
                        style={
                          Object {
                            "color": "#2F3945",
                            "fontFamily": "OpenSans-Regular",
                            "fontSize": 12,
                          }
                        }
                      >
                         members
                      </Text>
                    </View>
                  </View>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "flex-start",
                      "backgroundColor": "#421187",
                      "borderRadius": 6,
                      "marginLeft": 16,
                      "padding": 8,
                    }
                  }
                  testID="group_info_header.join"
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      }
                    }
                    testID="button_wrapper.content"
                  >
                    <Text
                      style={
                        Object {
                          "color": "#FFFFFF",
                          "fontFamily": "OpenSans-SemiBold",
                          "fontSize": 16,
                          "textAlign": "center",
                        }
                      }
                    >
                      Join
                    </Text>
                    <View
                      accessibilityState={
                        Object {
                          "disabled": true,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={false}
                      hitSlop={
                        Object {
                          "bottom": 10,
                          "left": 10,
                          "right": 10,
                          "top": 10,
                        }
                      }
                      nativeID="animatedComponent"
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                            },
                            Object {
                              "marginHorizontal": 8,
                            },
                            Object {
                              "backgroundColor": undefined,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              undefined,
                              undefined,
                              undefined,
                            ]
                          }
                        >
                          <View
                            className="icon-wrapper"
                            testID="button_wrapper.icon"
                          >
                            <RNSVGSvgView
                              align="xMidYMid"
                              bbHeight={20}
                              bbWidth={20}
                              fill="#FFFFFF"
                              focusable={false}
                              height={20}
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  Object {},
                                  Object {
                                    "flex": 0,
                                    "height": 20,
                                    "width": 20,
                                  },
                                ]
                              }
                              vbHeight={24}
                              vbWidth={24}
                              width={20}
                            >
                              <RNSVGGroup
                                fill={4294967295}
                                propList={
                                  Array [
                                    "fill",
                                  ]
                                }
                              >
                                <RNSVGPath
                                  d="M19,11H13V5a1,1,0,0,0-2,0v6H5a1,1,0,0,0,0,2h6v6a1,1,0,0,0,2,0V13h6a1,1,0,0,0,0-2Z"
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <RCTScrollView
            alwaysBounceHorizontal={false}
            contentContainerStyle={
              Object {
                "backgroundColor": "#FFFFFF",
                "flexDirection": "row",
                "paddingBottom": 12,
                "paddingHorizontal": 12,
                "paddingTop": 8,
              }
            }
            horizontal={true}
            showsHorizontalScrollIndicator={false}
            style={
              Object {
                "backgroundColor": "#FFFFFF",
              }
            }
          >
            <View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#EAEDF2",
                    "borderRadius": 6,
                    "padding": 8,
                  }
                }
                testID="group_content.channel"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    }
                  }
                  testID="button_wrapper.content"
                >
                  <Text
                    style={
                      Object {
                        "color": "#2F3945",
                        "fontFamily": "OpenSans-SemiBold",
                        "fontSize": 16,
                        "textAlign": "center",
                      }
                    }
                  >
                    Channel
                  </Text>
                </View>
              </View>
              <View
                style={
                  Object {
                    "height": undefined,
                    "paddingHorizontal": undefined,
                    "paddingVertical": undefined,
                    "width": 12,
                  }
                }
              />
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#EAEDF2",
                    "borderRadius": 6,
                    "padding": 8,
                  }
                }
                testID="group_content.about"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    }
                  }
                  testID="button_wrapper.content"
                >
                  <Text
                    style={
                      Object {
                        "color": "#2F3945",
                        "fontFamily": "OpenSans-SemiBold",
                        "fontSize": 16,
                        "textAlign": "center",
                      }
                    }
                  >
                    About
                  </Text>
                </View>
              </View>
              <View
                style={
                  Object {
                    "height": undefined,
                    "paddingHorizontal": undefined,
                    "paddingVertical": undefined,
                    "width": 12,
                  }
                }
              />
              <View
                style={
                  Object {
                    "height": undefined,
                    "paddingHorizontal": undefined,
                    "paddingVertical": undefined,
                    "width": 12,
                  }
                }
              />
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#EAEDF2",
                    "borderRadius": 6,
                    "padding": 8,
                  }
                }
                testID="group_content.files"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    }
                  }
                  testID="button_wrapper.content"
                >
                  <Text
                    style={
                      Object {
                        "color": "#2F3945",
                        "fontFamily": "OpenSans-SemiBold",
                        "fontSize": 16,
                        "textAlign": "center",
                      }
                    }
                  >
                    Files
                  </Text>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Object {
              "height": 12,
              "paddingHorizontal": undefined,
              "paddingVertical": undefined,
              "width": undefined,
            }
          }
        />
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`GroupContent component renders on web correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
  testID="list_view"
>
  <RCTScrollView
    ItemSeparatorComponent={[Function]}
    ListFooterComponent={
      <ViewSpacing
        height={12}
      />
    }
    ListHeaderComponent={[Function]}
    ListHeaderComponentStyle={
      Object {
        "marginBottom": 12,
        "marginTop": 8,
      }
    }
    data={Array []}
    getItem={[Function]}
    getItemCount={[Function]}
    initialNumToRender={10}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.5}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
        tintColor="#B2BDCD"
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    showsVerticalScrollIndicator={false}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
      }
    }
    testID="list_view.flat_list"
    viewabilityConfigCallbackPairs={Array []}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "marginBottom": 12,
            "marginTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#FFFFFF",
              }
            }
          >
            <View
              onLayout={[Function]}
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 210,
                        "justifyContent": "center",
                        "width": "100%",
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 210,
                        "width": "100%",
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    source={
                      Object {
                        "testUri": "../../../assets/images/cover_default.png",
                      }
                    }
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "paddingHorizontal": 16,
                  "paddingVertical": 12,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderRadius": 6,
                      "height": 48,
                      "marginRight": 16,
                      "width": 48,
                    }
                  }
                  testID="avatar"
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#B2BDCD",
                        "borderRadius": 6,
                        "height": 48,
                        "width": 48,
                      }
                    }
                    testID="avatar_container"
                  >
                    <View
                      onLayout={[Function]}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "borderRadius": 28,
                          "height": 56,
                          "position": "relative",
                          "width": 56,
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        nativeID="animatedComponent"
                        style={
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "opacity": 1,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#f9f9f9",
                              "borderRadius": 6,
                              "height": 48,
                              "justifyContent": "center",
                              "width": 48,
                            }
                          }
                          testID="Image__placeholder"
                        />
                      </View>
                      <View
                        style={
                          Array [
                            Object {
                              "overflow": "hidden",
                            },
                            Object {
                              "borderRadius": 6,
                              "height": 48,
                              "width": 48,
                            },
                          ]
                        }
                      >
                        <FastImageView
                          onFastImageError={[Function]}
                          onFastImageLoadEnd={[Function]}
                          resizeMode="cover"
                          source={null}
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                          testID="avatar.image"
                        />
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={Object {}}
                  >
                    <Text
                      style={
                        Object {
                          "color": "#2F3945",
                          "fontFamily": "OpenSans-SemiBold",
                          "fontSize": 20,
                        }
                      }
                    />
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          Object {
                            "disabled": true,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={false}
                        hitSlop={
                          Object {
                            "bottom": 10,
                            "left": 10,
                            "right": 10,
                            "top": 10,
                          }
                        }
                        nativeID="animatedComponent"
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": undefined,
                              "color": "#2F3945",
                              "flexDirection": "row",
                              "fontFamily": "OpenSans-Regular",
                              "fontSize": 16,
                              "height": 16,
                              "marginRight": 4,
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                undefined,
                                undefined,
                                undefined,
                              ]
                            }
                          >
                            <View
                              className="icon-wrapper"
                            >
                              <View
                                onLayout={[Function]}
                                style={
                                  Object {
                                    "backgroundColor": "transparent",
                                    "position": "relative",
                                  }
                                }
                              >
                                <View
                                  collapsable={false}
                                  nativeID="animatedComponent"
                                  style={
                                    Object {
                                      "bottom": 0,
                                      "left": 0,
                                      "opacity": 1,
                                      "position": "absolute",
                                      "right": 0,
                                      "top": 0,
                                    }
                                  }
                                >
                                  <View
                                    style={
                                      Object {
                                        "alignItems": "center",
                                        "backgroundColor": "#f9f9f9",
                                        "height": 16,
                                        "justifyContent": "center",
                                        "width": 16,
                                      }
                                    }
                                    testID="Image__placeholder"
                                  />
                                </View>
                                <View
                                  style={
                                    Array [
                                      Object {
                                        "overflow": "hidden",
                                      },
                                      Object {
                                        "height": 16,
                                        "width": 16,
                                      },
                                    ]
                                  }
                                >
                                  <FastImageView
                                    onFastImageError={[Function]}
                                    onFastImageLoadEnd={[Function]}
                                    resizeMode="cover"
                                    size={16}
                                    source={null}
                                    style={
                                      Object {
                                        "bottom": 0,
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                  />
                                </View>
                              </View>
                            </View>
                          </View>
                        </Text>
                      </View>
                      <Text
                        style={
                          Object {
                            "color": "#2F3945",
                            "fontFamily": "OpenSans-Regular",
                            "fontSize": 12,
                          }
                        }
                      />
                      <Text
                        style={
                          Object {
                            "color": "#2F3945",
                            "fontFamily": "OpenSans-Regular",
                            "fontSize": 12,
                          }
                        }
                      >
                         • 
                      </Text>
                      <Text
                        style={
                          Object {
                            "color": "#2F3945",
                            "fontFamily": "OpenSans-SemiBold",
                            "fontSize": 14,
                          }
                        }
                      />
                      <Text
                        style={
                          Object {
                            "color": "#2F3945",
                            "fontFamily": "OpenSans-Regular",
                            "fontSize": 12,
                          }
                        }
                      >
                         members
                      </Text>
                    </View>
                  </View>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "flex-start",
                      "backgroundColor": "#421187",
                      "borderRadius": 6,
                      "marginLeft": 16,
                      "padding": 8,
                    }
                  }
                  testID="group_info_header.join"
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      }
                    }
                    testID="button_wrapper.content"
                  >
                    <Text
                      style={
                        Object {
                          "color": "#FFFFFF",
                          "fontFamily": "OpenSans-SemiBold",
                          "fontSize": 16,
                          "textAlign": "center",
                        }
                      }
                    >
                      Join
                    </Text>
                    <View
                      accessibilityState={
                        Object {
                          "disabled": true,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={false}
                      hitSlop={
                        Object {
                          "bottom": 10,
                          "left": 10,
                          "right": 10,
                          "top": 10,
                        }
                      }
                      nativeID="animatedComponent"
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": undefined,
                            "color": "#2F3945",
                            "flexDirection": "row",
                            "fontFamily": "OpenSans-Regular",
                            "fontSize": 16,
                            "marginHorizontal": 8,
                          }
                        }
                      >
                        <View
                          style={
                            Array [
                              undefined,
                              undefined,
                              undefined,
                            ]
                          }
                        >
                          <View
                            className="icon-wrapper"
                            testID="button_wrapper.icon"
                          >
                            <RNSVGSvgView
                              align="xMidYMid"
                              bbHeight={20}
                              bbWidth={20}
                              fill="#FFFFFF"
                              focusable={false}
                              height={20}
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  Object {},
                                  Object {
                                    "flex": 0,
                                    "height": 20,
                                    "width": 20,
                                  },
                                ]
                              }
                              vbHeight={24}
                              vbWidth={24}
                              width={20}
                            >
                              <RNSVGGroup
                                fill={4294967295}
                                propList={
                                  Array [
                                    "fill",
                                  ]
                                }
                              >
                                <RNSVGPath
                                  d="M19,11H13V5a1,1,0,0,0-2,0v6H5a1,1,0,0,0,0,2h6v6a1,1,0,0,0,2,0V13h6a1,1,0,0,0,0-2Z"
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                          </View>
                        </View>
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <RCTScrollView
            alwaysBounceHorizontal={false}
            contentContainerStyle={
              Object {
                "backgroundColor": "#FFFFFF",
                "flexDirection": "row",
                "paddingBottom": 12,
                "paddingHorizontal": 12,
                "paddingTop": 8,
              }
            }
            horizontal={true}
            showsHorizontalScrollIndicator={false}
            style={
              Object {
                "backgroundColor": "#FFFFFF",
              }
            }
          >
            <View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#EAEDF2",
                    "borderRadius": 6,
                    "padding": 8,
                  }
                }
                testID="group_content.channel"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    }
                  }
                  testID="button_wrapper.content"
                >
                  <Text
                    style={
                      Object {
                        "color": "#2F3945",
                        "fontFamily": "OpenSans-SemiBold",
                        "fontSize": 16,
                        "textAlign": "center",
                      }
                    }
                  >
                    Channel
                  </Text>
                </View>
              </View>
              <View
                style={
                  Object {
                    "height": undefined,
                    "paddingHorizontal": undefined,
                    "paddingVertical": undefined,
                    "width": 12,
                  }
                }
              />
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#EAEDF2",
                    "borderRadius": 6,
                    "padding": 8,
                  }
                }
                testID="group_content.about"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    }
                  }
                  testID="button_wrapper.content"
                >
                  <Text
                    style={
                      Object {
                        "color": "#2F3945",
                        "fontFamily": "OpenSans-SemiBold",
                        "fontSize": 16,
                        "textAlign": "center",
                      }
                    }
                  >
                    About
                  </Text>
                </View>
              </View>
              <View
                style={
                  Object {
                    "height": undefined,
                    "paddingHorizontal": undefined,
                    "paddingVertical": undefined,
                    "width": 12,
                  }
                }
              />
              <View
                style={
                  Object {
                    "height": undefined,
                    "paddingHorizontal": undefined,
                    "paddingVertical": undefined,
                    "width": 12,
                  }
                }
              />
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#EAEDF2",
                    "borderRadius": 6,
                    "padding": 8,
                  }
                }
                testID="group_content.files"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    }
                  }
                  testID="button_wrapper.content"
                >
                  <Text
                    style={
                      Object {
                        "color": "#2F3945",
                        "fontFamily": "OpenSans-SemiBold",
                        "fontSize": 16,
                        "textAlign": "center",
                      }
                    }
                  >
                    Files
                  </Text>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Object {
              "height": 12,
              "paddingHorizontal": undefined,
              "paddingVertical": undefined,
              "width": undefined,
            }
          }
        />
      </View>
    </View>
  </RCTScrollView>
</View>
`;
