// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SchemeItem component should render data correctly 1`] = `
<View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "marginBottom": 8,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
          },
          Object {
            "alignItems": "flex-start",
            "flexDirection": "row",
          },
        ]
      }
    >
      <Text
        numberOfLines={3}
        style={
          Array [
            Object {
              "color": undefined,
              "fontFamily": "BeVietnamPro-Medium",
              "fontSize": 13,
            },
            Object {},
            Object {
              "flex": 1,
            },
          ]
        }
        testID="scheme_item.name"
      >
        Scheme 2
      </Text>
      <View
        style={
          Array [
            Object {
              "backgroundColor": undefined,
              "borderRadius": 4,
              "marginHorizontal": 4,
              "padding": 4,
            },
            Object {
              "marginLeft": 12,
              "marginRight": 8,
            },
          ]
        }
        testID="text_badge"
      >
        <Text
          style={
            Array [
              Object {
                "color": undefined,
                "fontFamily": "BeVietnamPro-Medium",
                "fontSize": 13,
              },
              Object {},
              Array [
                Object {
                  "color": undefined,
                },
                undefined,
              ],
            ]
          }
        >
          Activated
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "flexDirection": "row",
        }
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": undefined,
            "borderRadius": 4,
            "opacity": 1,
            "padding": 8,
          }
        }
        testID="scheme_item.btn_edit"
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
          testID="button_wrapper.content"
        >
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={false}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  undefined,
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View />
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": undefined,
            "borderRadius": 4,
            "marginLeft": 8,
            "opacity": 1,
            "padding": 8,
          }
        }
        testID="scheme_item.btn_delete"
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
          testID="button_wrapper.content"
        >
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={false}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  undefined,
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <Text
    style={
      Array [
        Object {
          "color": undefined,
          "fontFamily": "BeVietnamPro-Light",
          "fontSize": 13,
        },
        Object {},
        Object {
          "marginBottom": 8,
        },
      ]
    }
  >
    Description 2
  </Text>
  <View
    style={
      Object {
        "flexDirection": "row",
        "flexWrap": "wrap",
        "marginBottom": 4,
      }
    }
    testID="scheme_item.group_list"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "baseline",
          "backgroundColor": undefined,
          "borderRadius": 50,
          "marginBottom": 8,
          "marginRight": 4,
          "paddingHorizontal": 4,
          "paddingVertical": 2,
        }
      }
      testID="scheme_item.group_tag"
    >
      <Text
        style={
          Array [
            Object {
              "color": undefined,
              "fontFamily": "BeVietnamPro-Light",
              "fontSize": 13,
            },
            Object {},
            undefined,
          ]
        }
      >
        Green grass
      </Text>
    </View>
  </View>
</View>
`;
