// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button Approve Decline all requests should render UI correctly 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#FFFFFF",
      },
      undefined,
    ]
  }
  testID="button_approve_decline_all_requests"
>
  <View
    style={
      Array [
        Object {
          "alignSelf": "stretch",
          "backgroundColor": "#E3E6F2",
          "height": 1,
          "marginHorizontal": 0,
          "width": undefined,
        },
        Object {},
      ]
    }
    testID="divider"
  />
  <View
    style={
      Object {
        "flexDirection": "row",
        "paddingBottom": 24,
        "paddingHorizontal": 16,
        "paddingTop": 12,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "borderRadius": 8,
          },
          Object {
            "flex": 1,
            "marginRight": 8,
          },
        ]
      }
      testID="button_approve_decline_all_requests.decline"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 8,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingVertical": 4,
            },
            undefined,
            Object {
              "backgroundColor": "#BAC0DE",
              "height": 36,
              "paddingHorizontal": 12,
            },
          ]
        }
        testID="button.content"
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                undefined,
                Object {
                  "backgroundColor": undefined,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View
                testID="button.icon"
              />
            </View>
          </View>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#212745",
                "fontFamily": "BeVietnamPro-Medium",
                "fontSize": 15,
              },
              Object {
                "color": "#212745",
              },
              Array [
                Object {
                  "textAlign": "center",
                },
                Object {
                  "marginLeft": 8,
                },
              ],
            ]
          }
          testID="button.text"
        >
          Decline All
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "borderRadius": 8,
          },
          Object {
            "flex": 1,
          },
        ]
      }
      testID="button_approve_decline_all_requests.approve"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 8,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingVertical": 4,
            },
            undefined,
            Object {
              "backgroundColor": "#7335C0",
              "height": 36,
              "paddingHorizontal": 12,
            },
          ]
        }
        testID="button.content"
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                undefined,
                Object {
                  "backgroundColor": undefined,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View
                testID="button.icon"
              />
            </View>
          </View>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#212745",
                "fontFamily": "BeVietnamPro-Medium",
                "fontSize": 15,
              },
              Object {
                "color": "#FFFFFF",
              },
              Array [
                Object {
                  "textAlign": "center",
                },
                Object {
                  "marginLeft": 8,
                },
              ],
            ]
          }
          testID="button.text"
        >
          Approve All
        </Text>
      </View>
    </View>
  </View>
</View>
`;
