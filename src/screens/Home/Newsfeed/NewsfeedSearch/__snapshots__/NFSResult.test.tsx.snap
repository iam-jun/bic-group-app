// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NFSResult component should render empty search result 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#F8F9FF",
      "flex": 1,
    }
  }
>
  <View>
    <RCTScrollView
      horizontal={true}
      style={
        Object {
          "backgroundColor": "#FFFFFF",
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderBottomWidth": 1,
              "borderColor": "#F8F9FF",
              "flexDirection": "row",
              "paddingBottom": 12,
              "paddingHorizontal": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#F1F1F9",
                "borderRadius": 4,
                "padding": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
              testID="button_wrapper.content"
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": true,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={false}
                hitSlop={
                  Object {
                    "bottom": 10,
                    "left": 10,
                    "right": 10,
                    "top": 10,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      Object {
                        "marginLeft": 4,
                        "marginRight": 8,
                      },
                      Object {
                        "backgroundColor": undefined,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        undefined,
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    <View
                      testID="button_wrapper.icon"
                    />
                  </View>
                </View>
              </View>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#181C32",
                      "fontFamily": "BeVietnamPro-Medium",
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#7335C0",
                    },
                    Object {
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Filter
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#F1F1F9",
                "borderRadius": 4,
                "marginLeft": 4,
                "padding": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
              testID="button_wrapper.content"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#181C32",
                      "fontFamily": "BeVietnamPro-Medium",
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#7335C0",
                    },
                    Object {
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Created by
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#F1F1F9",
                "borderRadius": 4,
                "marginLeft": 4,
                "padding": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
              testID="button_wrapper.content"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#181C32",
                      "fontFamily": "BeVietnamPro-Medium",
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#7335C0",
                    },
                    Object {
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Date
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <RCTScrollView
    ListEmptyComponent={
      <View
        style={
          Object {
            "alignItems": "center",
            "marginTop": 24,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={
            Object {
              "testUri": "../../../assets/images/img_empty_search_post.png",
            }
          }
          style={
            Object {
              "height": 320,
              "maxHeight": 160,
              "maxWidth": 240,
              "width": 480,
            }
          }
        />
        <TextComponent
          style={
            Object {
              "color": "#767D93",
              "textAlign": "center",
            }
          }
          useI18n={true}
        >
          post:newsfeed:text_empty_search_post
        </TextComponent>
      </View>
    }
    ListFooterComponent={
      <View
        style={
          Object {
            "marginBottom": 12,
          }
        }
      />
    }
    data={Array []}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        colors={
          Array [
            "#7335C0",
          ]
        }
        onRefresh={[Function]}
        refreshing={false}
        tintColor="#7335C0"
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
      }
    }
    viewabilityConfigCallbackPairs={Array []}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "alignItems": "center",
            "marginTop": 24,
          }
        }
      >
        <View
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
              "position": "relative",
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#f9f9f9",
                  "height": 320,
                  "justifyContent": "center",
                  "maxHeight": 160,
                  "maxWidth": 240,
                  "width": 480,
                }
              }
              testID="Image__placeholder"
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Object {
                  "height": 320,
                  "maxHeight": 160,
                  "maxWidth": 240,
                  "width": 480,
                },
              ]
            }
          >
            <FastImageView
              onFastImageError={[Function]}
              onFastImageLoadEnd={[Function]}
              resizeMode="contain"
              source={
                Object {
                  "testUri": "../../../assets/images/img_empty_search_post.png",
                }
              }
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </View>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#181C32",
                "fontFamily": "BeVietnamPro-Light",
                "fontSize": 15,
              },
              Object {},
              Object {
                "color": "#767D93",
                "textAlign": "center",
              },
            ]
          }
        >
          Sorry, we couldn’t find anything related
to your search.
        </Text>
      </View>
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Object {
              "marginBottom": 12,
            }
          }
        />
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`NFSResult component should render list search result 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#F8F9FF",
      "flex": 1,
    }
  }
>
  <View>
    <RCTScrollView
      horizontal={true}
      style={
        Object {
          "backgroundColor": "#FFFFFF",
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderBottomWidth": 1,
              "borderColor": "#F8F9FF",
              "flexDirection": "row",
              "paddingBottom": 12,
              "paddingHorizontal": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#F1F1F9",
                "borderRadius": 4,
                "padding": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
              testID="button_wrapper.content"
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": true,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={false}
                hitSlop={
                  Object {
                    "bottom": 10,
                    "left": 10,
                    "right": 10,
                    "top": 10,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      Object {
                        "marginLeft": 4,
                        "marginRight": 8,
                      },
                      Object {
                        "backgroundColor": undefined,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        undefined,
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    <View
                      testID="button_wrapper.icon"
                    />
                  </View>
                </View>
              </View>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#181C32",
                      "fontFamily": "BeVietnamPro-Medium",
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#7335C0",
                    },
                    Object {
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Filter
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#F1F1F9",
                "borderRadius": 4,
                "marginLeft": 4,
                "padding": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
              testID="button_wrapper.content"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#181C32",
                      "fontFamily": "BeVietnamPro-Medium",
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#7335C0",
                    },
                    Object {
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Created by
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#F1F1F9",
                "borderRadius": 4,
                "marginLeft": 4,
                "padding": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
              testID="button_wrapper.content"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#181C32",
                      "fontFamily": "BeVietnamPro-Medium",
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#7335C0",
                    },
                    Object {
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Date
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <RCTScrollView
    ListEmptyComponent={
      <View
        style={
          Object {
            "alignItems": "center",
            "marginTop": 24,
          }
        }
      >
        <Image
          resizeMode="contain"
          source={
            Object {
              "testUri": "../../../assets/images/img_empty_search_post.png",
            }
          }
          style={
            Object {
              "height": 320,
              "maxHeight": 160,
              "maxWidth": 240,
              "width": 480,
            }
          }
        />
        <TextComponent
          style={
            Object {
              "color": "#767D93",
              "textAlign": "center",
            }
          }
          useI18n={true}
        >
          post:newsfeed:text_empty_search_post
        </TextComponent>
      </View>
    }
    ListFooterComponent={
      <View
        style={
          Object {
            "marginBottom": 12,
          }
        }
      />
    }
    data={
      Array [
        Object {
          "actor": Object {
            "avatar": "https://bein-entity-attribute-sandbox.s3.ap-southeast-1.amazonaws.com/user/avatar/images/original/a0f2b4bb-abf7-423d-9fed-0b706751b323.jpg",
            "fullname": "Nguyễn Thị Ngọc Linh",
            "id": 33,
            "username": "ngoclinh",
          },
          "audience": Object {
            "groups": Array [
              Object {
                "child": Array [
                  139,
                  2,
                  10,
                  152,
                  66,
                  67,
                  103,
                  2,
                  2,
                ],
                "icon": "https://bein-entity-attribute-stg.s3.ap-southeast-1.amazonaws.com/group/avatar/Avatar_Group.png",
                "id": 1,
                "name": "EVOL Community",
              },
            ],
          },
          "commentsCount": 0,
          "content": "Important post",
          "createdAt": "2022-04-20T10:06:45.649Z",
          "createdBy": 33,
          "highlight": "==Important== post",
          "id": 29,
          "isDraft": false,
          "media": Object {
            "files": Array [],
            "images": Array [],
            "videos": Array [],
          },
          "mentions": Array [],
          "ownerReactions": Array [],
          "reactionsCount": Object {},
          "setting": Object {
            "canComment": true,
            "canReact": true,
            "canShare": true,
            "importantExpiredAt": "2022-04-20T11:07:08.129Z",
            "isImportant": true,
          },
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        colors={
          Array [
            "#7335C0",
          ]
        }
        onRefresh={[Function]}
        refreshing={false}
        tintColor="#7335C0"
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
      }
    }
    viewabilityConfigCallbackPairs={Array []}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginTop": 8,
              "opacity": 1,
            }
          }
          testID="post_view"
        >
          <View
            style={
              Object {
                "backgroundColor": "#7335C0",
                "borderBottomLeftRadius": 8,
                "borderBottomRightRadius": 8,
                "left": 0,
                "paddingBottom": 4,
                "paddingHorizontal": 4,
                "paddingTop": 8,
                "position": "absolute",
                "top": 0,
                "zIndex": 1,
              }
            }
            testID="post_view.important_status_lite"
          >
            <View
              accessibilityState={
                Object {
                  "disabled": true,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={false}
              hitSlop={
                Object {
                  "bottom": 10,
                  "left": 10,
                  "right": 10,
                  "top": 10,
                }
              }
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    },
                    undefined,
                    Object {
                      "backgroundColor": undefined,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      undefined,
                      undefined,
                      Object {
                        "backgroundColor": "#FFFFFF",
                        "borderRadius": 4,
                        "padding": 2,
                      },
                    ]
                  }
                >
                  <View>
                    <View
                      onLayout={[Function]}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "position": "relative",
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        style={
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "opacity": 1,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#f9f9f9",
                              "height": 12,
                              "justifyContent": "center",
                              "width": 12,
                            }
                          }
                          testID="Image__placeholder"
                        />
                      </View>
                      <View
                        style={
                          Array [
                            Object {
                              "overflow": "hidden",
                            },
                            Object {
                              "height": 12,
                              "width": 12,
                            },
                          ]
                        }
                      >
                        <FastImageView
                          onFastImageError={[Function]}
                          onFastImageLoadEnd={[Function]}
                          resizeMode="cover"
                          size={12}
                          source={null}
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "#FFFFFF",
                },
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flexDirection": "row",
                  "opacity": 1,
                  "paddingTop": 8,
                }
              }
              testID="post_view_header"
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "marginLeft": 16,
                    "marginRight": 12,
                    "marginTop": 4,
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderRadius": 4,
                      "height": 48,
                      "width": 48,
                    }
                  }
                  testID="avatar"
                >
                  <View
                    style={
                      Object {
                        "borderRadius": 24,
                        "height": 48,
                        "width": 48,
                      }
                    }
                    testID="avatar_container"
                  >
                    <View
                      onLayout={[Function]}
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "position": "relative",
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        style={
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "opacity": 1,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#f9f9f9",
                              "borderRadius": 24,
                              "height": 48,
                              "justifyContent": "center",
                              "width": 48,
                            }
                          }
                          testID="Image__placeholder"
                        />
                      </View>
                      <View
                        style={
                          Array [
                            Object {
                              "overflow": "hidden",
                            },
                            Object {
                              "borderRadius": 24,
                              "height": 48,
                              "width": 48,
                            },
                          ]
                        }
                      >
                        <FastImageView
                          onFastImageError={[Function]}
                          onFastImageLoadEnd={[Function]}
                          resizeMode="cover"
                          source={
                            Object {
                              "uri": "https://bein-entity-attribute-sandbox.s3.ap-southeast-1.amazonaws.com/user/avatar/images/original/a0f2b4bb-abf7-423d-9fed-0b706751b323.jpg",
                            }
                          }
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                          testID="avatar.image"
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignSelf": "flex-start",
                      "opacity": 1,
                    }
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#181C32",
                          "fontFamily": "BeVietnamPro-Medium",
                          "fontSize": 13,
                        },
                        Object {},
                        undefined,
                      ]
                    }
                    testID="post_view_header.actor"
                  >
                    Nguyễn Thị Ngọc Linh
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#181C32",
                          "fontFamily": "BeVietnamPro-Medium",
                          "fontSize": 13,
                        },
                        Object {
                          "color": "#767D93",
                        },
                        Object {
                          "marginRight": 4,
                        },
                      ]
                    }
                  >
                    to
                  </Text>
                  <Text
                    onPress={[Function]}
                    style={
                      Array [
                        Object {
                          "color": "#181C32",
                          "fontFamily": "BeVietnamPro-Medium",
                          "fontSize": 13,
                        },
                        Object {},
                        undefined,
                      ]
                    }
                    testID="post_view_header.audiences"
                  >
                    EVOL Community
                  </Text>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#181C32",
                          "fontFamily": "BeVietnamPro-SemiBold",
                          "fontSize": 13,
                        },
                        Object {
                          "color": "#767D93",
                        },
                        Object {
                          "fontSize": 11,
                        },
                      ]
                    }
                    testID="time_view"
                  >
                    Apr 20 at 05:06 PM
                  </Text>
                </View>
              </View>
              <View
                style={
                  Object {
                    "marginRight": 8,
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": false,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "alignSelf": "auto",
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        testID="post_view_header.menu"
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View>
              <View
                style={
                  Object {
                    "marginHorizontal": 16,
                    "marginVertical": 8,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flexDirection": "row",
                    }
                  }
                  testID="post_view_content.lite_container"
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      accessibilityState={
                        Object {
                          "disabled": true,
                        }
                      }
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      testID="post_view_content"
                    >
                      <View>
                        <View
                          style={Object {}}
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "flex-start",
                                "flexDirection": "row",
                                "flexWrap": "wrap",
                                "justifyContent": "flex-start",
                                "marginBottom": 2,
                                "marginTop": 2,
                                "width": "100%",
                              }
                            }
                          >
                            <Text
                              style={Object {}}
                            >
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "color": "#181C32",
                                      "fontFamily": "BeVietnamPro-Light",
                                      "fontSize": 15,
                                    },
                                    Object {},
                                    Object {
                                      "backgroundColor": "#F6EF79",
                                      "borderRadius": 6,
                                      "overflow": "hidden",
                                    },
                                  ]
                                }
                              >
                                <Text
                                  style={
                                    Array [
                                      Object {
                                        "color": "#181C32",
                                        "fontFamily": "BeVietnamPro-Light",
                                        "fontSize": 15,
                                      },
                                      Object {},
                                    ]
                                  }
                                >
                                  Important
                                </Text>
                              </Text>
                              <Text
                                style={
                                  Array [
                                    Object {
                                      "color": "#181C32",
                                      "fontFamily": "BeVietnamPro-Light",
                                      "fontSize": 15,
                                    },
                                    Object {},
                                  ]
                                }
                              >
                                 post
                              </Text>
                            </Text>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Object {
              "marginBottom": 12,
            }
          }
        />
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`NFSResult component should render loading search result 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#F8F9FF",
      "flex": 1,
    }
  }
>
  <View>
    <RCTScrollView
      horizontal={true}
      style={
        Object {
          "backgroundColor": "#FFFFFF",
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderBottomWidth": 1,
              "borderColor": "#F8F9FF",
              "flexDirection": "row",
              "paddingBottom": 12,
              "paddingHorizontal": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#F1F1F9",
                "borderRadius": 4,
                "padding": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
              testID="button_wrapper.content"
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": true,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={false}
                hitSlop={
                  Object {
                    "bottom": 10,
                    "left": 10,
                    "right": 10,
                    "top": 10,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      Object {
                        "marginLeft": 4,
                        "marginRight": 8,
                      },
                      Object {
                        "backgroundColor": undefined,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        undefined,
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    <View
                      testID="button_wrapper.icon"
                    />
                  </View>
                </View>
              </View>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#181C32",
                      "fontFamily": "BeVietnamPro-Medium",
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#7335C0",
                    },
                    Object {
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Filter
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#F1F1F9",
                "borderRadius": 4,
                "marginLeft": 4,
                "padding": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
              testID="button_wrapper.content"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#181C32",
                      "fontFamily": "BeVietnamPro-Medium",
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#7335C0",
                    },
                    Object {
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Created by
              </Text>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#F1F1F9",
                "borderRadius": 4,
                "marginLeft": 4,
                "padding": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
              testID="button_wrapper.content"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#181C32",
                      "fontFamily": "BeVietnamPro-Medium",
                      "fontSize": 15,
                    },
                    Object {
                      "color": "#7335C0",
                    },
                    Object {
                      "textAlign": "center",
                    },
                  ]
                }
              >
                Date
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
  <RCTScrollView
    ListEmptyComponent={null}
    ListFooterComponent={
      <View
        style={
          Object {
            "marginBottom": 12,
          }
        }
      />
    }
    data={Array []}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        colors={
          Array [
            "#7335C0",
          ]
        }
        onRefresh={[Function]}
        refreshing={true}
        tintColor="#7335C0"
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "flex": 1,
      }
    }
    viewabilityConfigCallbackPairs={Array []}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Object {
              "marginBottom": 12,
            }
          }
        />
      </View>
    </View>
  </RCTScrollView>
</View>
`;
