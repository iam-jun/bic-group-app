// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button component renders correctly 1`] = `
<RCTScrollView
  style={
    Object {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      style={
        Object {
          "paddingHorizontal": 16,
          "paddingVertical": 12,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 6,
            },
            Object {
              "marginHorizontal": 8,
              "marginVertical": 8,
            },
          ]
        }
        testID="button_wrapper"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 6,
                "elevation": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "shadowColor": "rgba(0, 0, 0, 1)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.12,
                "shadowRadius": 1.5,
              },
              undefined,
              Object {
                "backgroundColor": "#FFFFFF",
                "height": 36,
                "paddingHorizontal": 12,
              },
            ]
          }
          testID="button.content"
        >
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={false}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  undefined,
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  testID="button.icon"
                />
              </View>
            </View>
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": "#212745",
                  "fontFamily": "BeVietnamPro-Medium",
                  "fontSize": 15,
                },
                Object {
                  "color": "#212745",
                },
                Array [
                  Object {
                    "textAlign": "center",
                  },
                  Object {
                    "marginLeft": 8,
                  },
                ],
              ]
            }
            testID="button.text"
          />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Button component renders correctly default props 1`] = `
<RCTScrollView
  style={
    Object {
      "backgroundColor": "#FFFFFF",
    }
  }
>
  <View>
    <View
      style={
        Object {
          "paddingHorizontal": 16,
          "paddingVertical": 12,
        }
      }
    >
      <View
        accessible={true}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 6,
            },
            undefined,
          ]
        }
        testID="button_wrapper"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 6,
                "elevation": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "shadowColor": "rgba(0, 0, 0, 1)",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.12,
                "shadowRadius": 1.5,
              },
              undefined,
              Object {
                "backgroundColor": "#FFFFFF",
                "height": 36,
                "paddingHorizontal": 12,
              },
            ]
          }
          testID="button.content"
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;
