// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Avatar component renders correctly 1`] = `
<View
  style={
    Object {
      "borderRadius": 6,
      "height": 48,
      "width": 48,
    }
  }
  testID="avatar"
>
  <View
    style={
      Object {
        "borderRadius": 6,
        "height": 48,
        "width": 48,
      }
    }
    testID="avatar_container"
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "position": "relative",
        }
      }
    >
      <View
        collapsable={false}
        nativeID="animatedComponent"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#f9f9f9",
              "borderRadius": 6,
              "height": 48,
              "justifyContent": "center",
              "width": 48,
            }
          }
          testID="Image__placeholder"
        />
      </View>
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 6,
              "height": 48,
              "width": 48,
            },
          ]
        }
      >
        <FastImageView
          onFastImageError={[Function]}
          onFastImageLoadEnd={[Function]}
          resizeMode="cover"
          source={
            Object {
              "testUri": "../../../assets/images/bein_logo.png",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          testID="avatar.image"
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`Avatar component renders correctly badge 1`] = `
<View
  style={
    Object {
      "borderRadius": 6,
      "height": 48,
      "width": 48,
    }
  }
  testID="avatar"
>
  <View
    style={
      Object {
        "borderRadius": 6,
        "height": 48,
        "width": 48,
      }
    }
    testID="avatar_container"
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "position": "relative",
        }
      }
    >
      <View
        collapsable={false}
        nativeID="animatedComponent"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#f9f9f9",
              "borderRadius": 6,
              "height": 48,
              "justifyContent": "center",
              "width": 48,
            }
          }
          testID="Image__placeholder"
        />
      </View>
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 6,
              "height": 48,
              "width": 48,
            },
          ]
        }
      >
        <FastImageView
          onFastImageError={[Function]}
          onFastImageLoadEnd={[Function]}
          resizeMode="cover"
          source={
            Object {
              "testUri": "../../../assets/images/bein_logo.png",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          testID="avatar.image"
        />
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 12,
          "bottom": undefined,
          "elevation": 2,
          "height": 24,
          "justifyContent": "center",
          "position": "absolute",
          "right": -8,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 1,
          "top": -8,
          "width": 24,
        }
      }
      testID="avatar.badge"
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              undefined,
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 10.8,
                        "justifyContent": "center",
                        "width": 10.8,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 10.8,
                        "width": 10.8,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={10.8}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Avatar component renders correctly badge bottom 1`] = `
<View
  style={
    Object {
      "borderRadius": 6,
      "height": 48,
      "width": 48,
    }
  }
  testID="avatar"
>
  <View
    style={
      Object {
        "borderRadius": 6,
        "height": 48,
        "width": 48,
      }
    }
    testID="avatar_container"
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "position": "relative",
        }
      }
    >
      <View
        collapsable={false}
        nativeID="animatedComponent"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#f9f9f9",
              "borderRadius": 6,
              "height": 48,
              "justifyContent": "center",
              "width": 48,
            }
          }
          testID="Image__placeholder"
        />
      </View>
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 6,
              "height": 48,
              "width": 48,
            },
          ]
        }
      >
        <FastImageView
          onFastImageError={[Function]}
          onFastImageLoadEnd={[Function]}
          resizeMode="cover"
          source={
            Object {
              "testUri": "../../../assets/images/bein_logo.png",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          testID="avatar.image"
        />
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 12,
          "bottom": -4,
          "elevation": 2,
          "height": 24,
          "justifyContent": "center",
          "position": "absolute",
          "right": -8,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 1,
          "top": undefined,
          "width": 24,
        }
      }
      testID="avatar.badge"
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              undefined,
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 10.8,
                        "justifyContent": "center",
                        "width": 10.8,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 10.8,
                        "width": 10.8,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={10.8}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Avatar component renders correctly badge check 1`] = `
<View
  style={
    Object {
      "borderRadius": 6,
      "height": 48,
      "width": 48,
    }
  }
  testID="avatar"
>
  <View
    style={
      Object {
        "borderRadius": 6,
        "height": 48,
        "width": 48,
      }
    }
    testID="avatar_container"
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "position": "relative",
        }
      }
    >
      <View
        collapsable={false}
        nativeID="animatedComponent"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#f9f9f9",
              "borderRadius": 6,
              "height": 48,
              "justifyContent": "center",
              "width": 48,
            }
          }
          testID="Image__placeholder"
        />
      </View>
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 6,
              "height": 48,
              "width": 48,
            },
          ]
        }
      >
        <FastImageView
          onFastImageError={[Function]}
          onFastImageLoadEnd={[Function]}
          resizeMode="cover"
          source={
            Object {
              "testUri": "../../../assets/images/bein_logo.png",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          testID="avatar.image"
        />
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#00A64D",
          "borderColor": "#FFFFFF",
          "borderRadius": 8,
          "borderWidth": 1,
          "bottom": 0,
          "elevation": 2,
          "height": 16,
          "justifyContent": "center",
          "position": "absolute",
          "right": 0,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 1,
          "width": 16,
        }
      }
      testID="avatar.badge_check"
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              undefined,
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                fill="#FFFFFF"
                focusable={false}
                height={12}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={12}
              >
                <RNSVGGroup
                  fill={4294967295}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M18.71,7.21a1,1,0,0,0-1.42,0L9.84,14.67,6.71,11.53A1,1,0,1,0,5.29,13l3.84,3.84a1,1,0,0,0,1.42,0l8.16-8.16A1,1,0,0,0,18.71,7.21Z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Avatar component renders correctly status 1`] = `
<View
  style={
    Object {
      "borderRadius": 6,
      "height": 48,
      "width": 48,
    }
  }
  testID="avatar"
>
  <View
    style={
      Object {
        "borderRadius": 6,
        "height": 48,
        "width": 48,
      }
    }
    testID="avatar_container"
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "position": "relative",
        }
      }
    >
      <View
        collapsable={false}
        nativeID="animatedComponent"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#f9f9f9",
              "borderRadius": 6,
              "height": 48,
              "justifyContent": "center",
              "width": 48,
            }
          }
          testID="Image__placeholder"
        />
      </View>
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 6,
              "height": 48,
              "width": 48,
            },
          ]
        }
      >
        <FastImageView
          onFastImageError={[Function]}
          onFastImageLoadEnd={[Function]}
          resizeMode="cover"
          source={
            Object {
              "testUri": "../../../assets/images/bein_logo.png",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          testID="avatar.image"
        />
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#00A64D",
          "borderColor": "#FFFFFF",
          "borderRadius": 8,
          "borderWidth": 1,
          "bottom": 0,
          "height": 16,
          "position": "absolute",
          "right": 0,
          "width": 16,
        }
      }
      testID="avatar.status"
    />
  </View>
</View>
`;

exports[`Avatar component should call props onPressAction 1`] = `
<View
  style={
    Object {
      "borderRadius": 6,
      "height": 48,
      "width": 48,
    }
  }
  testID="avatar"
>
  <View
    style={
      Object {
        "borderRadius": 6,
        "height": 48,
        "width": 48,
      }
    }
    testID="avatar_container"
  >
    <View
      onLayout={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "position": "relative",
        }
      }
    >
      <View
        collapsable={false}
        nativeID="animatedComponent"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#f9f9f9",
              "borderRadius": 6,
              "height": 48,
              "justifyContent": "center",
              "width": 48,
            }
          }
          testID="Image__placeholder"
        />
      </View>
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 6,
              "height": 48,
              "width": 48,
            },
          ]
        }
      >
        <FastImageView
          onFastImageError={[Function]}
          onFastImageLoadEnd={[Function]}
          resizeMode="cover"
          source={
            Object {
              "testUri": "../../../assets/images/bein_logo.png",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          testID="avatar.image"
        />
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 8,
          "height": 16,
          "justifyContent": "center",
          "position": "absolute",
          "right": -4,
          "top": -4,
          "width": 16,
        }
      }
      testID="avatar.action_icon"
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              undefined,
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="avatar.action_icon.button"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={12}
                bbWidth={12}
                fill="#2F3945"
                focusable={false}
                height={12}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 12,
                      "width": 12,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={12}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M13.41,12l6.3-6.29a1,1,0,1,0-1.42-1.42L12,10.59,5.71,4.29A1,1,0,0,0,4.29,5.71L10.59,12l-6.3,6.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0L12,13.41l6.29,6.3a1,1,0,0,0,1.42,0,1,1,0,0,0,0-1.42Z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
