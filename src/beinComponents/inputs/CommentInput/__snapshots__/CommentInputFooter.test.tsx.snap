// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CommentInputFooter component renders correctly mention bar invisible 1`] = `
<View
  style={
    Object {
      "display": "flex",
      "opacity": 0,
      "transform": Array [
        Object {
          "translateX": 0,
        },
      ],
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "minHeight": 48,
        "paddingHorizontal": 16,
      }
    }
  >
    <View
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="button_wrapper"
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "marginRight": 16,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View />
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="button_wrapper"
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "marginRight": 16,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View />
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="button_wrapper"
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              undefined,
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View>
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 20,
                        "justifyContent": "center",
                        "width": 20,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 20,
                        "width": 20,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={20}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "borderLeftColor": "#E3E6F2",
          "borderLeftWidth": 2,
          "height": 20,
          "marginLeft": 16,
          "marginRight": 10,
        }
      }
    />
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "borderRadius": 6,
          },
          undefined,
        ]
      }
      testID="button_wrapper"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingVertical": 4,
            },
            undefined,
            Object {
              "backgroundColor": "#F4EFFB",
              "height": 36,
              "paddingHorizontal": 12,
            },
          ]
        }
        testID="button.content"
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                undefined,
                Object {
                  "backgroundColor": undefined,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View
                testID="button.icon"
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "left": 0,
        "opacity": undefined,
        "position": "absolute",
        "right": 0,
      }
    }
    testID="comment_input_footer.mention_bar_container"
  />
</View>
`;

exports[`CommentInputFooter component renders correctly mention bar with item 1`] = `
<View
  style={
    Object {
      "display": "flex",
      "opacity": 0,
      "transform": Array [
        Object {
          "translateX": 0,
        },
      ],
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "minHeight": 48,
        "paddingHorizontal": 16,
      }
    }
  >
    <View
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="button_wrapper"
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "marginRight": 16,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View />
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="button_wrapper"
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "marginRight": 16,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View />
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="button_wrapper"
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              undefined,
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View>
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 20,
                        "justifyContent": "center",
                        "width": 20,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 20,
                        "width": 20,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={20}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "borderLeftColor": "#E3E6F2",
          "borderLeftWidth": 2,
          "height": 20,
          "marginLeft": 16,
          "marginRight": 10,
        }
      }
    />
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "borderRadius": 6,
          },
          undefined,
        ]
      }
      testID="button_wrapper"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingVertical": 4,
            },
            undefined,
            Object {
              "backgroundColor": "#F4EFFB",
              "height": 36,
              "paddingHorizontal": 12,
            },
          ]
        }
        testID="button.content"
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                undefined,
                Object {
                  "backgroundColor": undefined,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View
                testID="button.icon"
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "left": 0,
        "opacity": undefined,
        "position": "absolute",
        "right": 0,
      }
    }
    testID="comment_input_footer.mention_bar_container"
  >
    <View
      style={
        Array [
          Object {
            "alignItem": "center",
            "backgroundColor": "#FFFFFF",
            "borderColor": "#A4A9B7",
            "borderTopWidth": 1,
            "paddingVertical": 8,
          },
          Object {
            "backgroundColor": "#FFFFFF",
            "borderTopWidth": 0,
            "justifyContent": "center",
            "minHeight": 48,
          },
        ]
      }
      testID="mention_bar"
    >
      <RCTScrollView
        data={
          Array [
            Object {
              "avatar": "https://bein-entity-attribute-stg.s3.ap-southeast-1.amazonaws.com/user/avatar/Avatar_Profile.png",
              "fullname": "Test account 2",
              "id": 7,
              "username": "testaccount2",
            },
          ]
        }
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={true}
        keyExtractor={[Function]}
        keyboardShouldPersistTaps="handled"
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        showsHorizontalScrollIndicator={false}
        stickyHeaderIndices={Array []}
        testID="mention_bar.list"
        viewabilityConfigCallbackPairs={Array []}
      >
        <View>
          <View
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#F4EFFB",
                  "borderRadius": 100,
                  "flexDirection": "row",
                  "height": 28,
                  "justifyContent": "center",
                  "marginRight": 8,
                  "opacity": 1,
                  "paddingLeft": 4,
                  "paddingRight": 8,
                }
              }
              testID="mention_bar.item"
            >
              <View
                style={
                  Array [
                    Object {
                      "borderRadius": 12,
                      "height": 24,
                      "width": 24,
                    },
                    Object {},
                  ]
                }
                testID="avatar"
              >
                <View
                  style={
                    Array [
                      Object {
                        "borderRadius": 12,
                        "height": 24,
                        "width": 24,
                      },
                      Object {},
                    ]
                  }
                  testID="avatar_container"
                >
                  <View
                    onLayout={[Function]}
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "position": "relative",
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "opacity": 1,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#f9f9f9",
                            "borderColor": "#F2F5F8",
                            "borderRadius": 12,
                            "borderWidth": 2,
                            "height": 24,
                            "justifyContent": "center",
                            "width": 24,
                          }
                        }
                        testID="Image__placeholder"
                      />
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "overflow": "hidden",
                          },
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "borderColor": "#F2F5F8",
                            "borderRadius": 12,
                            "borderWidth": 2,
                            "height": 24,
                            "width": 24,
                          },
                        ]
                      }
                    >
                      <FastImageView
                        onFastImageError={[Function]}
                        onFastImageLoadEnd={[Function]}
                        resizeMode="cover"
                        source={
                          Object {
                            "uri": "https://bein-entity-attribute-stg.s3.ap-southeast-1.amazonaws.com/user/avatar/Avatar_Profile.png",
                          }
                        }
                        style={
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          }
                        }
                        testID="avatar.image"
                      />
                    </View>
                  </View>
                </View>
              </View>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#212745",
                      "fontFamily": "BeVietnamPro-Light",
                      "fontSize": 13,
                    },
                    Object {},
                    Object {
                      "color": "#7335C0",
                      "paddingLeft": 4,
                    },
                  ]
                }
                testID="tag.label"
              >
                Test account 2
              </Text>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;
