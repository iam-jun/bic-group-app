// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MentionBar component renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": undefined,
        "borderColor": undefined,
        "borderTopWidth": 1,
        "minHeight": 44,
      },
      undefined,
    ]
  }
  testID="mention_bar"
>
  <RCTScrollView
    ItemSeparatorComponent={[Function]}
    data={
      Array [
        Object {
          "avatar": "test",
          "name": "test",
          "username": "test",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={true}
    keyExtractor={[Function]}
    keyboardShouldPersistTaps="handled"
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    showsHorizontalScrollIndicator={false}
    stickyHeaderIndices={Array []}
    testID="mention_bar.list"
    viewabilityConfigCallbackPairs={Array []}
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": undefined,
              "borderRadius": 16,
              "flexDirection": "row",
              "marginHorizontal": 8,
              "marginVertical": 8,
              "opacity": 1,
            }
          }
          testID="mention_bar_item"
        >
          <View
            style={
              Object {
                "borderRadius": 4,
                "height": 24,
                "width": 24,
              }
            }
            testID="avatar"
          >
            <View
              style={
                Object {
                  "borderRadius": 12,
                  "height": 24,
                  "width": 24,
                }
              }
              testID="avatar_container"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "borderRadius": 12,
                        "height": 24,
                        "justifyContent": "center",
                        "width": 24,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "borderRadius": 12,
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                    testID="mention_bar_item.avatar"
                  />
                </View>
              </View>
            </View>
          </View>
          <Text
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontFamily": "BeVietnamPro-Light",
                  "fontSize": 13,
                },
                Object {},
                Object {
                  "marginLeft": 4,
                  "marginRight": 8,
                },
              ]
            }
            testID="mention_bar_item.name"
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`MentionBar component renders null 1`] = `null`;
