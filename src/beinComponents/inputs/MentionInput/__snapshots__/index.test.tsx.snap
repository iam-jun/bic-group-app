// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MentionInput component renders correctly 1`] = `
Array [
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "zIndex": 1,
        },
        null,
      ]
    }
    testID="_mention_input"
  >
    <TextInput
      editable={true}
      keyboardType="default"
      onChangeText={[Function]}
      onContentSizeChange={[Function]}
      onKeyPress={[Function]}
      onSelectionChange={[Function]}
      style={
        Array [
          null,
          Object {},
          Object {
            "fontSize": 14,
          },
        ]
      }
      testID="_mention_input.input"
      textInputRef={
        Object {
          "current": undefined,
        }
      }
    />
  </View>,
  <View
    style={
      Array [
        Object {
          "alignSelf": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 6,
          "justifyContent": "center",
          "maxHeight": 80,
          "maxWidth": 355,
          "position": "absolute",
          "top": 20,
          "width": "85%",
          "zIndex": 2,
        },
        undefined,
        Object {
          "elevation": 16,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 12,
            "width": 0,
          },
          "shadowOpacity": 0.12,
          "shadowRadius": 10.32,
        },
        undefined,
        Object {
          "borderWidth": 0,
          "flex": undefined,
          "height": 0,
          "marginBottom": 0,
          "marginTop": 0,
          "paddingBottom": 0,
          "paddingTop": 0,
        },
      ]
    }
    testID="autocomplete"
  >
    <RCTScrollView
      ListEmptyComponent={[Function]}
      data={Array []}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="at_mention"
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          style={
            Object {
              "justifyContent": "center",
              "minHeight": 40,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#181C32",
                  "fontFamily": "BeVietnamPro-SemiBold",
                  "fontSize": 13,
                },
                Object {},
                Object {
                  "color": "#A4A9B7",
                  "margin": 8,
                  "padding": 4,
                },
              ]
            }
            testID="at_mention.empty_content"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>,
]
`;

exports[`MentionInput component should show "MentionInput" with CommmentInput 1`] = `
Array [
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "zIndex": 1,
        },
        null,
      ]
    }
    testID="_mention_input"
  >
    <View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#E3E6F2",
              "borderTopWidth": 1,
              "paddingBottom": 8,
            },
            Array [
              null,
              Object {},
              Object {
                "fontSize": 14,
              },
            ],
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "flex": 1,
                "height": 44,
                "zIndex": 1,
              }
            }
          >
            <PasteInput
              accessible={true}
              autoCapitalize="sentences"
              autoFocus={false}
              editable={true}
              focusable={false}
              keyboardType="default"
              mostRecentEventCount={0}
              multiline={true}
              onBlur={[Function]}
              onChange={[Function]}
              onChangeText={[Function]}
              onClick={[Function]}
              onContentSizeChange={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              onPaste={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onScroll={[Function]}
              onSelectionChange={[Function]}
              onStartShouldSetResponder={[Function]}
              placeholder="placeholder"
              placeholderTextColor="#767D93"
              selectionColor="#767D93"
              style={
                Array [
                  Object {
                    "color": "#181C32",
                    "flex": 1,
                    "fontFamily": "BeVietnamPro-Light",
                    "fontSize": 14,
                    "lineHeight": 22,
                    "paddingBottom": 8,
                    "paddingHorizontal": 16,
                    "paddingTop": 8,
                    "width": "100%",
                  },
                ]
              }
              testID="comment_input"
              value="value"
            />
          </View>
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "display": "none",
                  "opacity": 0,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                  ],
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "display": "none",
                "opacity": 0,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#FFFFFF",
                  "flexDirection": "row",
                  "justifyContent": "flex-end",
                  "minHeight": 48,
                  "paddingHorizontal": 16,
                }
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="comment_input.btn_icon"
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginRight": 16,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View />
                    </View>
                  </View>
                </View>
              </View>
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="comment_input.btn_image"
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginRight": 16,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View />
                    </View>
                  </View>
                </View>
              </View>
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="comment_input.btn_emoji"
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        undefined,
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View>
                        <View
                          style={
                            Array [
                              Object {
                                "overflow": "hidden",
                              },
                              Object {
                                "height": 20,
                                "width": 20,
                              },
                            ]
                          }
                        >
                          <FastImageView
                            onFastImageError={[Function]}
                            resizeMode="cover"
                            size={20}
                            source={null}
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "borderLeftColor": "#E3E6F2",
                    "borderLeftWidth": 2,
                    "height": 20,
                    "marginLeft": 16,
                    "marginRight": 10,
                  }
                }
              />
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "borderRadius": 8,
                    },
                    undefined,
                  ]
                }
                testID="comment_input.send"
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "borderRadius": 8,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "paddingVertical": 4,
                      },
                      undefined,
                      Object {
                        "backgroundColor": "#F4EFFB",
                        "height": 36,
                        "paddingHorizontal": 12,
                      },
                    ]
                  }
                  testID="button.content"
                >
                  <View
                    accessibilityState={
                      Object {
                        "disabled": true,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={false}
                    hitSlop={
                      Object {
                        "bottom": 10,
                        "left": 10,
                        "right": 10,
                        "top": 10,
                      }
                    }
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                          undefined,
                          Object {
                            "backgroundColor": undefined,
                          },
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            undefined,
                            undefined,
                            undefined,
                          ]
                        }
                      >
                        <View
                          testID="button.icon"
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              animatedStyle={
                Object {
                  "value": Object {
                    "left": 0,
                    "opacity": 0,
                    "position": "absolute",
                    "right": 0,
                  },
                }
              }
              collapsable={false}
              style={
                Object {
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                }
              }
              testID="comment_input_footer.mention_bar_container"
            />
          </View>
        </View>
        <View
          animatedStyle={
            Object {
              "value": Object {
                "display": "flex",
                "opacity": 0,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                ],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "display": "flex",
              "opacity": 0,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#FFFFFF",
                "flexDirection": "row",
                "justifyContent": "flex-end",
                "minHeight": 48,
                "paddingHorizontal": 16,
              }
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="comment_input.btn_icon"
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": true,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={false}
                hitSlop={
                  Object {
                    "bottom": 10,
                    "left": 10,
                    "right": 10,
                    "top": 10,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      Object {
                        "marginRight": 16,
                      },
                      Object {
                        "backgroundColor": undefined,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        undefined,
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    <View />
                  </View>
                </View>
              </View>
            </View>
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="comment_input.btn_image"
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": true,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={false}
                hitSlop={
                  Object {
                    "bottom": 10,
                    "left": 10,
                    "right": 10,
                    "top": 10,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      Object {
                        "marginRight": 16,
                      },
                      Object {
                        "backgroundColor": undefined,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        undefined,
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    <View />
                  </View>
                </View>
              </View>
            </View>
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="comment_input.btn_emoji"
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": true,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={false}
                hitSlop={
                  Object {
                    "bottom": 10,
                    "left": 10,
                    "right": 10,
                    "top": 10,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      undefined,
                      Object {
                        "backgroundColor": undefined,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        undefined,
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    <View>
                      <View
                        style={
                          Array [
                            Object {
                              "overflow": "hidden",
                            },
                            Object {
                              "height": 20,
                              "width": 20,
                            },
                          ]
                        }
                      >
                        <FastImageView
                          onFastImageError={[Function]}
                          resizeMode="cover"
                          size={20}
                          source={null}
                          style={
                            Object {
                              "bottom": 0,
                              "left": 0,
                              "position": "absolute",
                              "right": 0,
                              "top": 0,
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "borderLeftColor": "#E3E6F2",
                  "borderLeftWidth": 2,
                  "height": 20,
                  "marginLeft": 16,
                  "marginRight": 10,
                }
              }
            />
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "borderRadius": 8,
                  },
                  undefined,
                ]
              }
              testID="comment_input.send"
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 8,
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "paddingVertical": 4,
                    },
                    undefined,
                    Object {
                      "backgroundColor": "#F4EFFB",
                      "height": 36,
                      "paddingHorizontal": 12,
                    },
                  ]
                }
                testID="button.content"
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        undefined,
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        testID="button.icon"
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
              }
            }
            testID="comment_input_footer.mention_bar_container"
          />
        </View>
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
          }
        }
        testID="sticker_view"
      >
        <View>
          <View
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
              }
            }
          >
            <View
              animatedStyle={
                Object {
                  "value": Object {
                    "height": -0,
                  },
                }
              }
              collapsable={false}
              style={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "borderTopLeftRadius": 20,
                  "borderTopRightRadius": 20,
                  "elevation": 2,
                  "height": -0,
                  "justifyContent": "flex-start",
                  "minHeight": 80,
                  "shadowColor": "rgba(0, 0, 0, 1)",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.12,
                  "shadowRadius": 1.5,
                }
              }
            >
              <View
                animatedStyle={
                  Object {
                    "value": Object {},
                  }
                }
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={1}
                handlerType="PanGestureHandler"
                onGestureHandlerEvent={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "justifyContent": "center",
                    "paddingVertical": 10,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#EAEDF2",
                      "borderRadius": 8,
                      "height": 4,
                      "width": "15%",
                    }
                  }
                />
              </View>
              <RCTSafeAreaView
                emulateUnlessSupported={true}
              >
                <View
                  style={
                    Object {
                      "height": "100%",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "marginHorizontal": 12,
                        "paddingVertical": 12,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "borderColor": "#E3E6F2",
                            "borderRadius": 24,
                            "borderWidth": 1,
                            "justifyContent": "center",
                            "paddingLeft": 8,
                            "paddingRight": 12,
                          },
                          undefined,
                          Object {
                            "height": 32,
                          },
                          false,
                        ]
                      }
                      testID="search_input"
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          accessibilityState={
                            Object {
                              "disabled": true,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={false}
                          hitSlop={
                            Object {
                              "bottom": 10,
                              "left": 10,
                              "right": 10,
                              "top": 10,
                            }
                          }
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                                Object {
                                  "marginRight": 8,
                                },
                                Object {
                                  "backgroundColor": undefined,
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                Array [
                                  undefined,
                                  undefined,
                                  undefined,
                                ]
                              }
                            >
                              <View
                                testID="search_input.icon"
                              />
                            </View>
                          </View>
                        </View>
                        <TextInput
                          autoComplete="off"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="Search Emoji"
                          placeholderTextColor="#BAC0DE"
                          returnKeyType="search"
                          selectionColor="#767D93"
                          style={
                            Object {
                              "color": "#181C32",
                              "flex": 1,
                              "fontFamily": "BeVietnamPro-Light",
                              "fontSize": 13,
                              "height": "100%",
                            }
                          }
                          testID="search_input.input"
                          value=""
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                    testID="sticker_view.emoij"
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flex": 1,
                        }
                      }
                      testID="emoji_picker"
                    >
                      <RCTScrollView
                        data={Array []}
                        getItem={[Function]}
                        getItemCount={[Function]}
                        getItemLayout={[Function]}
                        initialNumToRender={50}
                        keyExtractor={[Function]}
                        keyboardDismissMode="interactive"
                        keyboardShouldPersistTaps="always"
                        nativeID="emojiPicker"
                        onContentSizeChange={[Function]}
                        onEndReachedThreshold={0}
                        onLayout={[Function]}
                        onMomentumScrollBegin={[Function]}
                        onMomentumScrollEnd={[Function]}
                        onScroll={[Function]}
                        onScrollBeginDrag={[Function]}
                        onScrollEndDrag={[Function]}
                        onScrollToIndexFailed={[Function]}
                        renderItem={[Function]}
                        scrollEventThrottle={50}
                        showsVerticalScrollIndicator={false}
                        stickyHeaderIndices={Array []}
                        style={
                          Object {
                            "width": 720,
                          }
                        }
                        testID="emoji_picker.section_list"
                      >
                        <View />
                      </RCTScrollView>
                    </View>
                  </View>
                </View>
              </RCTSafeAreaView>
            </View>
          </View>
        </View>
        <View
          animatedStyle={
            Object {
              "value": Object {
                "height": 0,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "height": 0,
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
          }
        }
        testID="sticker_view"
      >
        <View>
          <View
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
              }
            }
          >
            <View
              animatedStyle={
                Object {
                  "value": Object {
                    "height": -0,
                  },
                }
              }
              collapsable={false}
              style={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "borderTopLeftRadius": 20,
                  "borderTopRightRadius": 20,
                  "elevation": 2,
                  "height": -0,
                  "justifyContent": "flex-start",
                  "minHeight": 80,
                  "shadowColor": "rgba(0, 0, 0, 1)",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.12,
                  "shadowRadius": 1.5,
                }
              }
            >
              <View
                animatedStyle={
                  Object {
                    "value": Object {},
                  }
                }
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={2}
                handlerType="PanGestureHandler"
                onGestureHandlerEvent={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "justifyContent": "center",
                    "paddingVertical": 10,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#EAEDF2",
                      "borderRadius": 8,
                      "height": 4,
                      "width": "15%",
                    }
                  }
                />
              </View>
              <RCTSafeAreaView
                emulateUnlessSupported={true}
              >
                <View
                  style={
                    Object {
                      "height": "100%",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "marginHorizontal": 12,
                        "paddingVertical": 12,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#FFFFFF",
                            "borderColor": "#E3E6F2",
                            "borderRadius": 24,
                            "borderWidth": 1,
                            "justifyContent": "center",
                            "paddingLeft": 8,
                            "paddingRight": 12,
                          },
                          undefined,
                          Object {
                            "height": 32,
                          },
                          false,
                        ]
                      }
                      testID="search_input"
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          accessibilityState={
                            Object {
                              "disabled": true,
                            }
                          }
                          accessible={true}
                          collapsable={false}
                          focusable={false}
                          hitSlop={
                            Object {
                              "bottom": 10,
                              "left": 10,
                              "right": 10,
                              "top": 10,
                            }
                          }
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "opacity": 1,
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                                Object {
                                  "marginRight": 8,
                                },
                                Object {
                                  "backgroundColor": undefined,
                                },
                              ]
                            }
                          >
                            <View
                              style={
                                Array [
                                  undefined,
                                  undefined,
                                  undefined,
                                ]
                              }
                            >
                              <View
                                testID="search_input.icon"
                              />
                            </View>
                          </View>
                        </View>
                        <TextInput
                          autoComplete="off"
                          onBlur={[Function]}
                          onChangeText={[Function]}
                          onFocus={[Function]}
                          onSubmitEditing={[Function]}
                          placeholder="Search Emoji"
                          placeholderTextColor="#BAC0DE"
                          returnKeyType="search"
                          selectionColor="#767D93"
                          style={
                            Object {
                              "color": "#181C32",
                              "flex": 1,
                              "fontFamily": "BeVietnamPro-Light",
                              "fontSize": 13,
                              "height": "100%",
                            }
                          }
                          testID="search_input.input"
                          value=""
                        />
                      </View>
                    </View>
                  </View>
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                    testID="sticker_view.emoij"
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "flex": 1,
                        }
                      }
                      testID="emoji_picker"
                    >
                      <RCTScrollView
                        data={Array []}
                        getItem={[Function]}
                        getItemCount={[Function]}
                        getItemLayout={[Function]}
                        initialNumToRender={50}
                        keyExtractor={[Function]}
                        keyboardDismissMode="interactive"
                        keyboardShouldPersistTaps="always"
                        nativeID="emojiPicker"
                        onContentSizeChange={[Function]}
                        onEndReachedThreshold={0}
                        onLayout={[Function]}
                        onMomentumScrollBegin={[Function]}
                        onMomentumScrollEnd={[Function]}
                        onScroll={[Function]}
                        onScrollBeginDrag={[Function]}
                        onScrollEndDrag={[Function]}
                        onScrollToIndexFailed={[Function]}
                        renderItem={[Function]}
                        scrollEventThrottle={50}
                        showsVerticalScrollIndicator={false}
                        stickyHeaderIndices={Array []}
                        style={
                          Object {
                            "width": 720,
                          }
                        }
                        testID="emoji_picker.section_list"
                      >
                        <View />
                      </RCTScrollView>
                    </View>
                  </View>
                </View>
              </RCTSafeAreaView>
            </View>
          </View>
        </View>
        <View
          animatedStyle={
            Object {
              "value": Object {
                "height": 0,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "height": 0,
            }
          }
        />
      </View>
      <View
        collapsable={false}
        style={
          Object {
            "height": 0,
            "width": "100%",
          }
        }
      />
    </View>
  </View>,
  <View
    style={
      Array [
        Object {
          "alignSelf": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 6,
          "justifyContent": "center",
          "maxHeight": 80,
          "maxWidth": 355,
          "position": "absolute",
          "top": 20,
          "width": "85%",
          "zIndex": 2,
        },
        undefined,
        Object {
          "elevation": 16,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 12,
            "width": 0,
          },
          "shadowOpacity": 0.12,
          "shadowRadius": 10.32,
        },
        undefined,
        Object {
          "borderWidth": 0,
          "flex": undefined,
          "height": 0,
          "marginBottom": 0,
          "marginTop": 0,
          "paddingBottom": 0,
          "paddingTop": 0,
        },
      ]
    }
    testID="autocomplete"
  >
    <RCTScrollView
      ListEmptyComponent={[Function]}
      data={Array []}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="at_mention"
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          style={
            Object {
              "justifyContent": "center",
              "minHeight": 40,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#181C32",
                  "fontFamily": "BeVietnamPro-SemiBold",
                  "fontSize": 13,
                },
                Object {},
                Object {
                  "color": "#A4A9B7",
                  "margin": 8,
                  "padding": 4,
                },
              ]
            }
            testID="at_mention.empty_content"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>,
]
`;

exports[`MentionInput component should show "MentionInput" with PostInput 1`] = `
Array [
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "zIndex": 1,
        },
        null,
      ]
    }
    testID="_mention_input"
  >
    <TextInput
      editable={true}
      keyboardType="default"
      multiline={true}
      onChangeText={[Function]}
      onContentSizeChange={[Function]}
      onKeyPress={[Function]}
      onSelectionChange={[Function]}
      onSubmitEditing={[Function]}
      placeholder="Write your post here..."
      placeholderTextColor="#767D93"
      selectionColor="#767D93"
      style={
        Object {
          "color": "#181C32",
          "flex": 1,
          "fontFamily": "BeVietnamPro-Light",
          "fontSize": 14,
          "margin": 12,
          "padding": 0,
        }
      }
      testID="_mention_input.input"
      textAlignVertical="top"
      textInputRef={
        Object {
          "current": undefined,
        }
      }
      value="value"
    />
  </View>,
  <View
    style={
      Array [
        Object {
          "alignSelf": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 6,
          "justifyContent": "center",
          "maxHeight": 80,
          "maxWidth": 355,
          "position": "absolute",
          "top": 20,
          "width": "85%",
          "zIndex": 2,
        },
        undefined,
        Object {
          "elevation": 16,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 12,
            "width": 0,
          },
          "shadowOpacity": 0.12,
          "shadowRadius": 10.32,
        },
        undefined,
        Object {
          "borderWidth": 0,
          "flex": undefined,
          "height": 0,
          "marginBottom": 0,
          "marginTop": 0,
          "paddingBottom": 0,
          "paddingTop": 0,
        },
      ]
    }
    testID="autocomplete"
  >
    <RCTScrollView
      ListEmptyComponent={[Function]}
      data={Array []}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="at_mention"
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          style={
            Object {
              "justifyContent": "center",
              "minHeight": 40,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#181C32",
                  "fontFamily": "BeVietnamPro-SemiBold",
                  "fontSize": 13,
                },
                Object {},
                Object {
                  "color": "#A4A9B7",
                  "margin": 8,
                  "padding": 4,
                },
              ]
            }
            testID="at_mention.empty_content"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>,
]
`;
