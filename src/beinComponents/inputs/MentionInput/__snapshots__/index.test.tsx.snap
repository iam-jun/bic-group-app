// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MentionInput component renders correctly 1`] = `
Array [
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "zIndex": 1,
        },
        null,
      ]
    }
    testID="_mention_input"
  >
    <TextInput
      editable={true}
      keyboardType="default"
      onChangeText={[Function]}
      onContentSizeChange={[Function]}
      onKeyPress={[Function]}
      onSelectionChange={[Function]}
      style={
        Array [
          null,
          Object {},
        ]
      }
      testID="_mention_input.input"
      textInputRef={
        Object {
          "current": undefined,
        }
      }
    />
  </View>,
  <View
    style={
      Array [
        Object {
          "alignSelf": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 6,
          "justifyContent": "center",
          "maxHeight": 80,
          "maxWidth": 355,
          "position": "absolute",
          "top": 20,
          "width": "85%",
          "zIndex": 2,
        },
        undefined,
        Object {
          "elevation": 16,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 12,
            "width": 0,
          },
          "shadowOpacity": 0.12,
          "shadowRadius": 10.32,
        },
        undefined,
        Object {
          "borderWidth": 0,
          "flex": undefined,
          "height": 0,
          "marginBottom": 0,
          "marginTop": 0,
          "paddingBottom": 0,
          "paddingTop": 0,
        },
      ]
    }
    testID="autocomplete"
  >
    <RCTScrollView
      ListEmptyComponent={[Function]}
      data={Array []}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="at_mention"
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          style={
            Object {
              "justifyContent": "center",
              "minHeight": 40,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#B2BDCD",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 14,
                "margin": 8,
                "padding": 4,
              }
            }
            testID="at_mention.empty_content"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>,
]
`;

exports[`MentionInput component should show "MentionInput" with CommmentInput 1`] = `
Array [
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "zIndex": 1,
        },
        null,
      ]
    }
    testID="_mention_input"
  >
    <View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#EAEDF2",
              "borderTopWidth": 1,
              "paddingBottom": 8,
              "paddingTop": 8,
            },
            Array [
              null,
              Object {},
            ],
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flexDirection": "row",
              "paddingBottom": 8,
            }
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            style={
              Object {
                "flex": 1,
                "height": 44,
                "zIndex": 1,
              }
            }
          >
            <TextInput
              autoFocus={false}
              editable={true}
              keyboardType="default"
              multiline={true}
              onChangeText={[Function]}
              onContentSizeChange={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              onSelectionChange={[Function]}
              placeholder="placeholder"
              placeholderTextColor="#627286"
              selectionColor="#627286"
              style={
                Object {
                  "color": "#2F3945",
                  "fontFamily": "OpenSans-Regular",
                  "fontSize": 16,
                  "lineHeight": 22,
                  "paddingBottom": 8,
                  "paddingHorizontal": 16,
                  "paddingTop": 8,
                  "width": "100%",
                }
              }
              testID="comment_input"
              value="value"
            />
          </View>
        </View>
        <View
          style={
            Object {
              "borderColor": "#EAEDF2",
              "borderTopWidth": 1,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "flexDirection": "row",
                "minHeight": 48,
                "paddingLeft": 16,
                "paddingRight": 8,
                "paddingTop": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="comment_input.btn_file"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    }
                  }
                  testID="button_wrapper.content"
                >
                  <View
                    accessibilityState={
                      Object {
                        "disabled": true,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={false}
                    hitSlop={
                      Object {
                        "bottom": 10,
                        "left": 10,
                        "right": 10,
                        "top": 10,
                      }
                    }
                    nativeID="animatedComponent"
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                          Object {
                            "marginRight": 16,
                          },
                          Object {
                            "backgroundColor": undefined,
                          },
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            undefined,
                            undefined,
                            undefined,
                          ]
                        }
                      >
                        <View
                          className="icon-wrapper"
                        >
                          <RNSVGSvgView
                            align="xMidYMid"
                            bbHeight={20}
                            bbWidth={20}
                            fill="#627286"
                            focusable={false}
                            height={20}
                            meetOrSlice={0}
                            minX={0}
                            minY={0}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                Object {},
                                Object {
                                  "flex": 0,
                                  "height": 20,
                                  "width": 20,
                                },
                              ]
                            }
                            vbHeight={24}
                            vbWidth={24}
                            width={20}
                          >
                            <RNSVGGroup
                              fill={4284641926}
                              propList={
                                Array [
                                  "fill",
                                ]
                              }
                            >
                              <RNSVGPath
                                d="M18.08,12.42,11.9,18.61a4.25,4.25,0,0,1-6-6l8-8a2.57,2.57,0,0,1,3.54,0,2.52,2.52,0,0,1,0,3.54l-6.9,6.89A.75.75,0,1,1,9.42,14l5.13-5.12a1,1,0,0,0-1.42-1.42L8,12.6a2.74,2.74,0,0,0,0,3.89,2.82,2.82,0,0,0,3.89,0l6.89-6.9a4.5,4.5,0,0,0-6.36-6.36l-8,8A6.25,6.25,0,0,0,13.31,20l6.19-6.18a1,1,0,1,0-1.42-1.42Z"
                              />
                            </RNSVGGroup>
                          </RNSVGSvgView>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="comment_input.btn_image"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    }
                  }
                  testID="button_wrapper.content"
                >
                  <View
                    accessibilityState={
                      Object {
                        "disabled": true,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={false}
                    hitSlop={
                      Object {
                        "bottom": 10,
                        "left": 10,
                        "right": 10,
                        "top": 10,
                      }
                    }
                    nativeID="animatedComponent"
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                          Object {
                            "marginRight": 16,
                          },
                          Object {
                            "backgroundColor": undefined,
                          },
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            undefined,
                            undefined,
                            undefined,
                          ]
                        }
                      >
                        <View
                          className="icon-wrapper"
                        >
                          <RNSVGSvgView
                            align="xMidYMid"
                            bbHeight={18}
                            bbWidth={18}
                            fill="#627286"
                            focusable={false}
                            height={18}
                            meetOrSlice={0}
                            minX={0}
                            minY={0}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                Object {},
                                Object {
                                  "flex": 0,
                                  "height": 18,
                                  "width": 18,
                                },
                              ]
                            }
                            vbHeight={24}
                            vbWidth={24}
                            width={18}
                          >
                            <RNSVGGroup
                              fill={4284641926}
                              propList={
                                Array [
                                  "fill",
                                ]
                              }
                            >
                              <RNSVGPath
                                d="M19,2H5A3,3,0,0,0,2,5V19a3,3,0,0,0,3,3H19a2.81,2.81,0,0,0,.49-.05l.3-.07.07,0h0l.05,0,.37-.14.13-.07c.1-.06.21-.11.31-.18a3.79,3.79,0,0,0,.38-.32l.07-.09a2.69,2.69,0,0,0,.27-.32l.09-.13a2.31,2.31,0,0,0,.18-.35,1,1,0,0,0,.07-.15c.05-.12.08-.25.12-.38l0-.15A2.6,2.6,0,0,0,22,19V5A3,3,0,0,0,19,2ZM5,20a1,1,0,0,1-1-1V14.69l3.29-3.3h0a1,1,0,0,1,1.42,0L17.31,20Zm15-1a1,1,0,0,1-.07.36,1,1,0,0,1-.08.14.94.94,0,0,1-.09.12l-5.35-5.35.88-.88a1,1,0,0,1,1.42,0h0L20,16.69Zm0-5.14L18.12,12a3.08,3.08,0,0,0-4.24,0l-.88.88L10.12,10a3.08,3.08,0,0,0-4.24,0L4,11.86V5A1,1,0,0,1,5,4H19a1,1,0,0,1,1,1Z"
                              />
                            </RNSVGGroup>
                          </RNSVGSvgView>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="comment_input.btn_camera"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    }
                  }
                  testID="button_wrapper.content"
                >
                  <View
                    accessibilityState={
                      Object {
                        "disabled": true,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={false}
                    hitSlop={
                      Object {
                        "bottom": 10,
                        "left": 10,
                        "right": 10,
                        "top": 10,
                      }
                    }
                    nativeID="animatedComponent"
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                          Object {
                            "marginRight": 16,
                          },
                          Object {
                            "backgroundColor": undefined,
                          },
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            undefined,
                            undefined,
                            undefined,
                          ]
                        }
                      >
                        <View
                          className="icon-wrapper"
                        >
                          <RNSVGSvgView
                            align="xMidYMid"
                            bbHeight={20}
                            bbWidth={20}
                            fill="#627286"
                            focusable={false}
                            height={20}
                            meetOrSlice={0}
                            minX={0}
                            minY={0}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                Object {},
                                Object {
                                  "flex": 0,
                                  "height": 20,
                                  "width": 20,
                                },
                              ]
                            }
                            vbHeight={24}
                            vbWidth={24}
                            width={20}
                          >
                            <RNSVGGroup
                              fill={4284641926}
                              propList={
                                Array [
                                  "fill",
                                ]
                              }
                            >
                              <RNSVGPath
                                d="M19,6.5H17.72l-.32-1a3,3,0,0,0-2.84-2H9.44A3,3,0,0,0,6.6,5.55l-.32,1H5a3,3,0,0,0-3,3v8a3,3,0,0,0,3,3H19a3,3,0,0,0,3-3v-8A3,3,0,0,0,19,6.5Zm1,11a1,1,0,0,1-1,1H5a1,1,0,0,1-1-1v-8a1,1,0,0,1,1-1H7a1,1,0,0,0,1-.68l.54-1.64a1,1,0,0,1,.95-.68h5.12a1,1,0,0,1,.95.68l.54,1.64A1,1,0,0,0,17,8.5h2a1,1,0,0,1,1,1Zm-8-9a4,4,0,1,0,4,4A4,4,0,0,0,12,8.5Zm0,6a2,2,0,1,1,2-2A2,2,0,0,1,12,14.5Z"
                              />
                            </RNSVGGroup>
                          </RNSVGSvgView>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="comment_input.btn_emoji"
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    }
                  }
                  testID="button_wrapper.content"
                >
                  <View
                    accessibilityState={
                      Object {
                        "disabled": true,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={false}
                    hitSlop={
                      Object {
                        "bottom": 10,
                        "left": 10,
                        "right": 10,
                        "top": 10,
                      }
                    }
                    nativeID="animatedComponent"
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                          },
                          Object {
                            "marginRight": 16,
                          },
                          Object {
                            "backgroundColor": undefined,
                          },
                        ]
                      }
                    >
                      <View
                        style={
                          Array [
                            undefined,
                            undefined,
                            undefined,
                          ]
                        }
                      >
                        <View
                          className="icon-wrapper"
                        >
                          <RNSVGSvgView
                            align="xMidYMid"
                            bbHeight={20}
                            bbWidth={20}
                            fill="#627286"
                            focusable={false}
                            height={20}
                            meetOrSlice={0}
                            minX={0}
                            minY={0}
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "transparent",
                                  "borderWidth": 0,
                                },
                                Object {},
                                Object {
                                  "flex": 0,
                                  "height": 20,
                                  "width": 20,
                                },
                              ]
                            }
                            vbHeight={24}
                            vbWidth={24}
                            width={20}
                          >
                            <RNSVGGroup
                              fill={4284641926}
                              propList={
                                Array [
                                  "fill",
                                ]
                              }
                            >
                              <RNSVGPath
                                d="M14.36,14.23a3.76,3.76,0,0,1-4.72,0,1,1,0,0,0-1.28,1.54,5.68,5.68,0,0,0,7.28,0,1,1,0,1,0-1.28-1.54ZM9,11a1,1,0,1,0-1-1A1,1,0,0,0,9,11Zm6-2a1,1,0,1,0,1,1A1,1,0,0,0,15,9ZM12,2A10,10,0,1,0,22,12,10,10,0,0,0,12,2Zm0,18a8,8,0,1,1,8-8A8,8,0,0,1,12,20Z"
                              />
                            </RNSVGGroup>
                          </RNSVGSvgView>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#A17AF2",
                  "borderRadius": 6,
                  "padding": 8,
                  "paddingLeft": 16,
                }
              }
              testID="comment_input.send"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  }
                }
                testID="button_wrapper.content"
              >
                <Text
                  style={
                    Object {
                      "color": "#FFFFFF",
                      "fontFamily": "OpenSans-SemiBold",
                      "fontSize": 16,
                      "textAlign": "center",
                    }
                  }
                >
                  Send
                </Text>
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  nativeID="animatedComponent"
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginHorizontal": 8,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        className="icon-wrapper"
                        testID="button_wrapper.icon"
                      >
                        <View
                          onLayout={[Function]}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "position": "relative",
                            }
                          }
                        >
                          <View
                            collapsable={false}
                            nativeID="animatedComponent"
                            style={
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "opacity": 1,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "backgroundColor": "#f9f9f9",
                                  "height": 20,
                                  "justifyContent": "center",
                                  "width": 20,
                                }
                              }
                              testID="Image__placeholder"
                            />
                          </View>
                          <View
                            style={
                              Array [
                                Object {
                                  "overflow": "hidden",
                                },
                                Object {
                                  "height": 20,
                                  "width": 20,
                                },
                              ]
                            }
                          >
                            <FastImageView
                              onFastImageError={[Function]}
                              onFastImageLoadEnd={[Function]}
                              resizeMode="cover"
                              size={20}
                              source={
                                Object {
                                  "testUri": "../../../assets/icons/icon_send_comment.svg",
                                }
                              }
                              style={
                                Object {
                                  "bottom": 0,
                                  "left": 0,
                                  "position": "absolute",
                                  "right": 0,
                                  "top": 0,
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
              }
            }
            testID="comment_input_footer.mention_bar_container"
          />
        </View>
      </View>
      <View
        collapsable={false}
        nativeID="animatedComponent"
        style={
          Object {
            "height": 0,
            "overflow": "hidden",
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#EAEDF2",
              "borderTopWidth": 1,
              "height": 336,
              "opacity": 1,
              "overflow": "hidden",
              "paddingTop": 12,
              "width": 750,
            }
          }
        >
          <View
            category={
              Object {
                "name": "Smileys & Emotion",
                "symbol": "😀",
              }
            }
            onEmojiLongPress={[Function]}
            onEmojiSelected={[Function]}
            onLayout={[Function]}
            style={
              Object {
                "flex": 1,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 1,
                    "borderColor": "#EAEDF2",
                    "flex": 1,
                    "height": 0,
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "fontSize": -8.399999999999999,
                      "paddingBottom": 8,
                      "textAlign": "center",
                    }
                  }
                >
                  🕘
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "#5D2C9A",
                    "flex": 1,
                    "height": 0,
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "fontSize": -8.399999999999999,
                      "paddingBottom": 8,
                      "textAlign": "center",
                    }
                  }
                >
                  😀
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 1,
                    "borderColor": "#EAEDF2",
                    "flex": 1,
                    "height": 0,
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "fontSize": -8.399999999999999,
                      "paddingBottom": 8,
                      "textAlign": "center",
                    }
                  }
                >
                  🧑
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 1,
                    "borderColor": "#EAEDF2",
                    "flex": 1,
                    "height": 0,
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "fontSize": -8.399999999999999,
                      "paddingBottom": 8,
                      "textAlign": "center",
                    }
                  }
                >
                  🦄
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 1,
                    "borderColor": "#EAEDF2",
                    "flex": 1,
                    "height": 0,
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "fontSize": -8.399999999999999,
                      "paddingBottom": 8,
                      "textAlign": "center",
                    }
                  }
                >
                  🍔
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 1,
                    "borderColor": "#EAEDF2",
                    "flex": 1,
                    "height": 0,
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "fontSize": -8.399999999999999,
                      "paddingBottom": 8,
                      "textAlign": "center",
                    }
                  }
                >
                  ⚾️
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 1,
                    "borderColor": "#EAEDF2",
                    "flex": 1,
                    "height": 0,
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "fontSize": -8.399999999999999,
                      "paddingBottom": 8,
                      "textAlign": "center",
                    }
                  }
                >
                  ✈️
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 1,
                    "borderColor": "#EAEDF2",
                    "flex": 1,
                    "height": 0,
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "fontSize": -8.399999999999999,
                      "paddingBottom": 8,
                      "textAlign": "center",
                    }
                  }
                >
                  💡
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 1,
                    "borderColor": "#EAEDF2",
                    "flex": 1,
                    "height": 0,
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "fontSize": -8.399999999999999,
                      "paddingBottom": 8,
                      "textAlign": "center",
                    }
                  }
                >
                  🔣
                </Text>
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 1,
                    "borderColor": "#EAEDF2",
                    "flex": 1,
                    "height": 0,
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "fontSize": -8.399999999999999,
                      "paddingBottom": 8,
                      "textAlign": "center",
                    }
                  }
                >
                  🏳️‍🌈
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "rgba(255,255,255,0.75)",
                    "paddingBottom": 4,
                    "paddingHorizontal": 12,
                    "paddingTop": 12,
                    "width": "100%",
                    "zIndex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#EAEDF2",
                      "borderRadius": 20,
                      "height": 40,
                      "justifyContent": "center",
                      "paddingHorizontal": 16,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      }
                    }
                  >
                    <View
                      accessibilityState={
                        Object {
                          "disabled": true,
                        }
                      }
                      accessible={true}
                      focusable={false}
                      hitSlop={
                        Object {
                          "bottom": 10,
                          "left": 10,
                          "right": 10,
                          "top": 10,
                        }
                      }
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                            },
                            Object {
                              "marginRight": 8,
                            },
                            Object {
                              "backgroundColor": undefined,
                            },
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              undefined,
                              undefined,
                              undefined,
                            ]
                          }
                        >
                          <View
                            className="icon-wrapper"
                          >
                            <RNSVGSvgView
                              align="xMidYMid"
                              bbHeight={20}
                              bbWidth={20}
                              fill="#627286"
                              focusable={false}
                              height={20}
                              meetOrSlice={0}
                              minX={0}
                              minY={0}
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "borderWidth": 0,
                                  },
                                  Object {},
                                  Object {
                                    "flex": 0,
                                    "height": 20,
                                    "width": 20,
                                  },
                                ]
                              }
                              vbHeight={24}
                              vbWidth={24}
                              width={20}
                            >
                              <RNSVGGroup
                                fill={4284641926}
                                propList={
                                  Array [
                                    "fill",
                                  ]
                                }
                              >
                                <RNSVGPath
                                  d="M21.71,20.29,18,16.61A9,9,0,1,0,16.61,18l3.68,3.68a1,1,0,0,0,1.42,0A1,1,0,0,0,21.71,20.29ZM11,18a7,7,0,1,1,7-7A7,7,0,0,1,11,18Z"
                                />
                              </RNSVGGroup>
                            </RNSVGSvgView>
                          </View>
                        </View>
                      </View>
                    </View>
                    <TextInput
                      autoComplete="off"
                      onChangeText={[Function]}
                      onFocus={[Function]}
                      onSubmitEditing={[Function]}
                      placeholder="Search Emoji"
                      placeholderTextColor="#627286"
                      returnKeyType="search"
                      selectionColor="#627286"
                      style={
                        Object {
                          "color": "#2F3945",
                          "flex": 1,
                          "fontFamily": "OpenSans-Regular",
                          "fontSize": 16,
                          "height": "100%",
                        }
                      }
                      value=""
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "borderColor": "#EAEDF2",
                "borderTopWidth": 1,
                "flexDirection": "row",
                "height": 52,
              }
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "#EAEDF2",
                  "borderRadius": 6,
                  "marginHorizontal": 16,
                  "opacity": 1,
                  "padding": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  }
                }
                testID="button_wrapper.content"
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  nativeID="animatedComponent"
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        undefined,
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        className="icon-wrapper"
                      >
                        <RNSVGSvgView
                          align="xMidYMid"
                          bbHeight={18}
                          bbWidth={18}
                          fill="#2F3945"
                          focusable={false}
                          height={18}
                          meetOrSlice={0}
                          minX={0}
                          minY={0}
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              Object {},
                              Object {
                                "flex": 0,
                                "height": 18,
                                "width": 18,
                              },
                            ]
                          }
                          vbHeight={24}
                          vbWidth={24}
                          width={18}
                        >
                          <RNSVGGroup
                            fill={4281284933}
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                          >
                            <RNSVGPath
                              d="M6.71,10.29A1,1,0,0,0,5,11a1,1,0,1,0,1.92-.38A1,1,0,0,0,6.71,10.29ZM9.29,7.71A1,1,0,0,0,10,8a1,1,0,0,0,.71-.29,1.15,1.15,0,0,0,.21-.33A1,1,0,0,0,11,7a1.05,1.05,0,0,0-.29-.71l-.15-.12-.18-.09A.6.6,0,0,0,10.19,6a1,1,0,0,0-.9.27,1,1,0,0,0-.21.33.94.94,0,0,0,0,.76A1.15,1.15,0,0,0,9.29,7.71ZM6.56,6.17a.76.76,0,0,0-.18-.09L6.2,6a1,1,0,0,0-.91.27,1,1,0,0,0-.21.33.94.94,0,0,0,0,.76,1.15,1.15,0,0,0,.21.33,1.15,1.15,0,0,0,.33.21A.84.84,0,0,0,6,8a1,1,0,0,0,.71-.29,1.15,1.15,0,0,0,.21-.33A1,1,0,0,0,7,7a1.05,1.05,0,0,0-.29-.71Zm6.15,12.12a1,1,0,0,0-1.42,0l-2,2a1,1,0,0,0,1.42,1.42L12,20.41l1.29,1.3a1,1,0,0,0,1.42,0,1,1,0,0,0,0-1.42Zm6-8a1,1,0,0,0-1.42,0,1,1,0,0,0-.21.33,1,1,0,0,0,1.3,1.3,1.15,1.15,0,0,0,.33-.21A1,1,0,0,0,19,11a.84.84,0,0,0-.08-.38A1,1,0,0,0,18.71,10.29ZM14,10H10a1,1,0,0,0,0,2h4a1,1,0,0,0,0-2Zm6-8H4A3,3,0,0,0,1,5v8a3,3,0,0,0,3,3H20a3,3,0,0,0,3-3V5A3,3,0,0,0,20,2Zm1,11a1,1,0,0,1-1,1H4a1,1,0,0,1-1-1V5A1,1,0,0,1,4,4H20a1,1,0,0,1,1,1ZM17.62,6.08a.93.93,0,0,0-.33.21A1.05,1.05,0,0,0,17,7a1,1,0,0,0,.08.38,1.15,1.15,0,0,0,.21.33A1,1,0,0,0,18,8a1,1,0,0,0,.71-.29,1.15,1.15,0,0,0,.21-.33A1,1,0,0,0,19,7a1.05,1.05,0,0,0-.29-.71A1,1,0,0,0,17.62,6.08Zm-3.06.09-.18-.09L14.2,6a1,1,0,0,0-.58.06.93.93,0,0,0-.33.21,1,1,0,0,0-.21.33.94.94,0,0,0,0,.76,1.15,1.15,0,0,0,.21.33A1,1,0,0,0,14,8a1,1,0,0,0,.71-.29,1.15,1.15,0,0,0,.21-.33A1,1,0,0,0,15,7a1.05,1.05,0,0,0-.29-.71Z"
                            />
                          </RNSVGGroup>
                        </RNSVGSvgView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "#EAEDF2",
                  "borderRadius": 6,
                  "flex": 1,
                  "height": 36,
                  "marginHorizontal": 24,
                  "opacity": 1,
                  "padding": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  }
                }
                testID="button_wrapper.content"
              />
            </View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "#EAEDF2",
                  "borderRadius": 6,
                  "marginHorizontal": 16,
                  "opacity": 1,
                  "padding": 8,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  }
                }
                testID="button_wrapper.content"
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  nativeID="animatedComponent"
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        undefined,
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        className="icon-wrapper"
                      >
                        <RNSVGSvgView
                          align="xMidYMid"
                          bbHeight={18}
                          bbWidth={18}
                          fill="#2F3945"
                          focusable={false}
                          height={18}
                          meetOrSlice={0}
                          minX={0}
                          minY={0}
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              Object {},
                              Object {
                                "flex": 0,
                                "height": 18,
                                "width": 18,
                              },
                            ]
                          }
                          vbHeight={24}
                          vbWidth={24}
                          width={18}
                        >
                          <RNSVGGroup
                            fill={4281284933}
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                          >
                            <RNSVGPath
                              d="M19,5H9.83a3,3,0,0,0-2.12.88L2.29,11.29a1,1,0,0,0,0,1.42l5.42,5.41A3,3,0,0,0,9.83,19H19a3,3,0,0,0,3-3V8A3,3,0,0,0,19,5Zm1,11a1,1,0,0,1-1,1H9.83a1.05,1.05,0,0,1-.71-.29L4.41,12,9.12,7.29A1.05,1.05,0,0,1,9.83,7H19a1,1,0,0,1,1,1ZM16.71,9.29a1,1,0,0,0-1.42,0L14,10.59l-1.29-1.3a1,1,0,0,0-1.42,1.42L12.59,12l-1.3,1.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0L14,13.41l1.29,1.3a1,1,0,0,0,1.42,0,1,1,0,0,0,0-1.42L15.41,12l1.3-1.29A1,1,0,0,0,16.71,9.29Z"
                            />
                          </RNSVGGroup>
                        </RNSVGSvgView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        collapsable={false}
        nativeID="animatedComponent"
        style={
          Object {
            "height": 0,
            "width": "100%",
          }
        }
      />
    </View>
  </View>,
  <View
    style={
      Array [
        Object {
          "alignSelf": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 6,
          "justifyContent": "center",
          "maxHeight": 80,
          "maxWidth": 355,
          "position": "absolute",
          "top": 20,
          "width": "85%",
          "zIndex": 2,
        },
        undefined,
        Object {
          "elevation": 16,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 12,
            "width": 0,
          },
          "shadowOpacity": 0.12,
          "shadowRadius": 10.32,
        },
        undefined,
        Object {
          "borderWidth": 0,
          "flex": undefined,
          "height": 0,
          "marginBottom": 0,
          "marginTop": 0,
          "paddingBottom": 0,
          "paddingTop": 0,
        },
      ]
    }
    testID="autocomplete"
  >
    <RCTScrollView
      ListEmptyComponent={[Function]}
      data={Array []}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="at_mention"
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          style={
            Object {
              "justifyContent": "center",
              "minHeight": 40,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#B2BDCD",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 14,
                "margin": 8,
                "padding": 4,
              }
            }
            testID="at_mention.empty_content"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>,
]
`;

exports[`MentionInput component should show "MentionInput" with PostInput 1`] = `
Array [
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "zIndex": 1,
        },
        null,
      ]
    }
    testID="_mention_input"
  >
    <TextInput
      editable={true}
      keyboardType="default"
      multiline={true}
      onChangeText={[Function]}
      onContentSizeChange={[Function]}
      onKeyPress={[Function]}
      onSelectionChange={[Function]}
      onSubmitEditing={[Function]}
      placeholder="Write your post here..."
      placeholderTextColor="#627286"
      selectionColor="#627286"
      style={
        Object {
          "color": "#2F3945",
          "flex": 1,
          "fontFamily": "OpenSans-Regular",
          "fontSize": 16,
          "margin": 12,
          "padding": 0,
        }
      }
      testID="_mention_input.input"
      textAlignVertical="top"
      textInputRef={
        Object {
          "current": undefined,
        }
      }
      value="value"
    />
  </View>,
  <View
    style={
      Array [
        Object {
          "alignSelf": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 6,
          "justifyContent": "center",
          "maxHeight": 80,
          "maxWidth": 355,
          "position": "absolute",
          "top": 20,
          "width": "85%",
          "zIndex": 2,
        },
        undefined,
        Object {
          "elevation": 16,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 12,
            "width": 0,
          },
          "shadowOpacity": 0.12,
          "shadowRadius": 10.32,
        },
        undefined,
        Object {
          "borderWidth": 0,
          "flex": undefined,
          "height": 0,
          "marginBottom": 0,
          "marginTop": 0,
          "paddingBottom": 0,
          "paddingTop": 0,
        },
      ]
    }
    testID="autocomplete"
  >
    <RCTScrollView
      ListEmptyComponent={[Function]}
      data={Array []}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="at_mention"
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          style={
            Object {
              "justifyContent": "center",
              "minHeight": 40,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#B2BDCD",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 14,
                "margin": 8,
                "padding": 4,
              }
            }
            testID="at_mention.empty_content"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>,
]
`;
