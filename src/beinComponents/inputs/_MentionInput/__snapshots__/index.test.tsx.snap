// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`_MentionInput component renders correctly 1`] = `
Array [
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "zIndex": 1,
        },
        null,
      ]
    }
    testID="_mention_input"
  >
    <TextInput
      editable={true}
      keyboardType="default"
      onChangeText={[Function]}
      onContentSizeChange={[Function]}
      onKeyPress={[Function]}
      onSelectionChange={[Function]}
      style={
        Array [
          null,
          Object {},
        ]
      }
      testID="_mention_input.input"
      textInputRef={
        Object {
          "current": undefined,
        }
      }
    />
  </View>,
  <View
    style={
      Array [
        Object {
          "alignSelf": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 6,
          "justifyContent": "center",
          "maxHeight": 80,
          "maxWidth": 355,
          "position": "absolute",
          "top": 20,
          "width": "85%",
          "zIndex": 2,
        },
        undefined,
        Object {
          "elevation": 16,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 12,
            "width": 0,
          },
          "shadowOpacity": 0.12,
          "shadowRadius": 10.32,
        },
        undefined,
        Object {
          "borderWidth": 0,
          "flex": undefined,
          "height": 0,
          "marginBottom": 0,
          "marginTop": 0,
          "paddingBottom": 0,
          "paddingTop": 0,
        },
      ]
    }
    testID="autocomplete"
  >
    <RCTScrollView
      ListEmptyComponent={[Function]}
      data={Array []}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="at_mention"
      viewabilityConfigCallbackPairs={Array []}
    >
      <View>
        <View
          style={
            Object {
              "justifyContent": "center",
              "minHeight": 40,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#B2BDCD",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 14,
                "margin": 8,
                "padding": 4,
              }
            }
            testID="at_mention.empty_content"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>,
]
`;
