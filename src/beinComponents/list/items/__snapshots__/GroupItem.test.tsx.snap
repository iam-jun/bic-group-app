// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Group Item component renders correctly 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID="group_item.container"
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
    testID="group_item.test"
  >
    <View
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 10,
          "left": 10,
          "right": 10,
          "top": 10,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(255,255,255,0)",
          "flexDirection": "row",
          "height": "100%",
          "marginHorizontal": 8,
          "opacity": 1,
          "width": 1,
        }
      }
      testID="group_item.button_wrapper"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
        testID="button_wrapper.content"
      >
        <View
          style={
            Object {
              "alignSelf": "center",
              "backgroundColor": "#FFFFFF",
              "marginLeft": -6,
              "paddingVertical": 4,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={false}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  undefined,
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  testID="group_item.button_wrapper.icon"
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "paddingHorizontal": 8,
            "paddingVertical": 8,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 6,
              "height": 40,
              "width": 40,
            },
            undefined,
          ]
        }
        testID="avatar"
      >
        <View
          style={
            Array [
              Object {
                "borderRadius": 6,
                "height": 40,
                "width": 40,
              },
              Object {
                "backgroundColor": "#A4A9B7",
              },
            ]
          }
          testID="avatar_container"
        >
          <View
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Array [
                  Array [
                    Object {
                      "borderRadius": 6,
                      "height": 40,
                      "width": 40,
                    },
                    Object {
                      "borderColor": "#F2F5F8",
                      "borderWidth": 2,
                    },
                    Object {
                      "backgroundColor": "#FFFFFF",
                    },
                  ],
                  false,
                ],
              ]
            }
          >
            <FastImageView
              onFastImageError={[Function]}
              resizeMode="cover"
              source={Object {}}
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
              testID="avatar.image"
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingHorizontal": 12,
          }
        }
      >
        <Text
          numberOfLines={2}
          style={
            Array [
              Object {
                "color": "#212745",
                "fontFamily": "BeVietnamPro-Medium",
                "fontSize": 15,
              },
              Object {
                "color": "#282E53",
              },
              Object {
                "justifyContent": "center",
                "width": "100%",
              },
            ]
          }
        >
          EVOL Community
        </Text>
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "baseline",
              "backgroundColor": "#EBF4FF",
              "borderRadius": 100,
              "flexDirection": "row",
              "height": 24,
              "justifyContent": "center",
              "marginRight": 8,
              "opacity": 1,
              "paddingLeft": 4,
              "paddingRight": 8,
            }
          }
          testID="tag.item"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#212745",
                  "fontFamily": "BeVietnamPro-Light",
                  "fontSize": 11,
                },
                Object {},
                Array [
                  Object {
                    "color": "#007AFF",
                    "paddingLeft": 4,
                  },
                  undefined,
                ],
              ]
            }
            testID="tag.label"
          >
            Group
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Group Item component should render UI Level when uiLevel > 0 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID="group_item.container"
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
    testID="group_item.test"
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#E3E6F2",
            "height": "100%",
            "marginHorizontal": 8,
            "width": 1,
          },
        ]
      }
      testID="group_item.ui_level"
    />
    <View
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 10,
          "left": 10,
          "right": 10,
          "top": 10,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(255,255,255,0)",
          "flexDirection": "row",
          "height": "100%",
          "marginHorizontal": 8,
          "opacity": 1,
          "width": 1,
        }
      }
      testID="group_item.button_wrapper"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
        testID="button_wrapper.content"
      >
        <View
          style={
            Object {
              "alignSelf": "center",
              "backgroundColor": "#FFFFFF",
              "marginLeft": -6,
              "paddingVertical": 4,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={false}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  undefined,
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  testID="group_item.button_wrapper.icon"
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "paddingHorizontal": 8,
            "paddingVertical": 8,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 6,
              "height": 40,
              "width": 40,
            },
            undefined,
          ]
        }
        testID="avatar"
      >
        <View
          style={
            Array [
              Object {
                "borderRadius": 6,
                "height": 40,
                "width": 40,
              },
              Object {
                "backgroundColor": "#A4A9B7",
              },
            ]
          }
          testID="avatar_container"
        >
          <View
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Array [
                  Array [
                    Object {
                      "borderRadius": 6,
                      "height": 40,
                      "width": 40,
                    },
                    Object {
                      "borderColor": "#F2F5F8",
                      "borderWidth": 2,
                    },
                    Object {
                      "backgroundColor": "#FFFFFF",
                    },
                  ],
                  false,
                ],
              ]
            }
          >
            <FastImageView
              onFastImageError={[Function]}
              resizeMode="cover"
              source={Object {}}
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
              testID="avatar.image"
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingHorizontal": 12,
          }
        }
      >
        <Text
          numberOfLines={2}
          style={
            Array [
              Object {
                "color": "#212745",
                "fontFamily": "BeVietnamPro-Medium",
                "fontSize": 15,
              },
              Object {
                "color": "#282E53",
              },
              Object {
                "justifyContent": "center",
                "width": "100%",
              },
            ]
          }
        >
          EVOL Community
        </Text>
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "baseline",
              "backgroundColor": "#EBF4FF",
              "borderRadius": 100,
              "flexDirection": "row",
              "height": 24,
              "justifyContent": "center",
              "marginRight": 8,
              "opacity": 1,
              "paddingLeft": 4,
              "paddingRight": 8,
            }
          }
          testID="tag.item"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#212745",
                  "fontFamily": "BeVietnamPro-Light",
                  "fontSize": 11,
                },
                Object {},
                Array [
                  Object {
                    "color": "#007AFF",
                    "paddingLeft": 4,
                  },
                  undefined,
                ],
              ]
            }
            testID="tag.label"
          >
            Group
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Group Item component should render default prop 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID="group_item.container"
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
    testID="group_item"
  >
    <View
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 10,
          "left": 10,
          "right": 10,
          "top": 10,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(255,255,255,0)",
          "flexDirection": "row",
          "height": "100%",
          "marginHorizontal": 8,
          "opacity": 1,
          "width": 1,
        }
      }
      testID="group_item.button_wrapper"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
        testID="button_wrapper.content"
      />
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "paddingHorizontal": 8,
            "paddingVertical": 8,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 6,
              "height": 40,
              "width": 40,
            },
            undefined,
          ]
        }
        testID="avatar"
      >
        <View
          style={
            Array [
              Object {
                "borderRadius": 6,
                "height": 40,
                "width": 40,
              },
              Object {
                "backgroundColor": "#A4A9B7",
              },
            ]
          }
          testID="avatar_container"
        >
          <View
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Array [
                  Array [
                    Object {
                      "borderRadius": 6,
                      "height": 40,
                      "width": 40,
                    },
                    Object {
                      "borderColor": "#F2F5F8",
                      "borderWidth": 2,
                    },
                    Object {
                      "backgroundColor": "#FFFFFF",
                    },
                  ],
                  false,
                ],
              ]
            }
          >
            <FastImageView
              onFastImageError={[Function]}
              resizeMode="cover"
              source={Object {}}
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
              testID="avatar.image"
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingHorizontal": 12,
          }
        }
      >
        <Text
          numberOfLines={2}
          style={
            Array [
              Object {
                "color": "#212745",
                "fontFamily": "BeVietnamPro-Medium",
                "fontSize": 15,
              },
              Object {
                "color": "#282E53",
              },
              Object {
                "justifyContent": "center",
                "width": "100%",
              },
            ]
          }
        >
          EVOL Community
        </Text>
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "baseline",
              "backgroundColor": "#EBF4FF",
              "borderRadius": 100,
              "flexDirection": "row",
              "height": 24,
              "justifyContent": "center",
              "marginRight": 8,
              "opacity": 1,
              "paddingLeft": 4,
              "paddingRight": 8,
            }
          }
          testID="tag.item"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#212745",
                  "fontFamily": "BeVietnamPro-Light",
                  "fontSize": 11,
                },
                Object {},
                Array [
                  Object {
                    "color": "#007AFF",
                    "paddingLeft": 4,
                  },
                  undefined,
                ],
              ]
            }
            testID="tag.label"
          >
            Group
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Group Item component should render toggle button when childrenUiIds.length > 0 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID="group_item.container"
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
    testID="group_item.test"
  >
    <View
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 10,
          "left": 10,
          "right": 10,
          "top": 10,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(255,255,255,0)",
          "flexDirection": "row",
          "height": "100%",
          "marginHorizontal": 8,
          "opacity": 1,
          "width": 1,
        }
      }
      testID="group_item.button_wrapper"
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
        testID="button_wrapper.content"
      >
        <View
          style={
            Object {
              "alignSelf": "center",
              "backgroundColor": "#FFFFFF",
              "marginLeft": -6,
              "paddingVertical": 4,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={false}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  undefined,
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  testID="group_item.button_wrapper.icon"
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "paddingHorizontal": 8,
            "paddingVertical": 8,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 6,
              "height": 40,
              "width": 40,
            },
            undefined,
          ]
        }
        testID="avatar"
      >
        <View
          style={
            Array [
              Object {
                "borderRadius": 6,
                "height": 40,
                "width": 40,
              },
              Object {
                "backgroundColor": "#A4A9B7",
              },
            ]
          }
          testID="avatar_container"
        >
          <View
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Array [
                  Array [
                    Object {
                      "borderRadius": 6,
                      "height": 40,
                      "width": 40,
                    },
                    Object {
                      "borderColor": "#F2F5F8",
                      "borderWidth": 2,
                    },
                    Object {
                      "backgroundColor": "#FFFFFF",
                    },
                  ],
                  false,
                ],
              ]
            }
          >
            <FastImageView
              onFastImageError={[Function]}
              resizeMode="cover"
              source={Object {}}
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
              testID="avatar.image"
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingHorizontal": 12,
          }
        }
      >
        <Text
          numberOfLines={2}
          style={
            Array [
              Object {
                "color": "#212745",
                "fontFamily": "BeVietnamPro-Medium",
                "fontSize": 15,
              },
              Object {
                "color": "#282E53",
              },
              Object {
                "justifyContent": "center",
                "width": "100%",
              },
            ]
          }
        >
          EVOL Community
        </Text>
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "baseline",
              "backgroundColor": "#EBF4FF",
              "borderRadius": 100,
              "flexDirection": "row",
              "height": 24,
              "justifyContent": "center",
              "marginRight": 8,
              "opacity": 1,
              "paddingLeft": 4,
              "paddingRight": 8,
            }
          }
          testID="tag.item"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#212745",
                  "fontFamily": "BeVietnamPro-Light",
                  "fontSize": 11,
                },
                Object {},
                Array [
                  Object {
                    "color": "#007AFF",
                    "paddingLeft": 4,
                  },
                  undefined,
                ],
              ]
            }
            testID="tag.label"
          >
            Group
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
