// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReactionView component renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "flexDirection": "row",
        "flexWrap": "wrap",
        "paddingBottom": 8,
        "paddingTop": 8,
      },
      Object {},
    ]
  }
  testID="reaction_view"
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#E3E6F2",
        "borderColor": "#E3E6F2",
        "borderRadius": 6,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 28,
        "justifyContent": "center",
        "margin": 2,
        "opacity": 1,
        "paddingHorizontal": 6,
      }
    }
    testID="reaction.button.grinning"
  >
    <Text
      style={
        Array [
          Object {
            "color": "#181C32",
            "fontFamily": "BeVietnamPro-Medium",
            "fontSize": 13,
          },
          Object {
            "color": "#181C32",
          },
          Object {
            "marginBottom": 2,
          },
        ]
      }
      testID="reaction.children"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#181C32",
              "fontFamily": "BeVietnamPro-Medium",
              "fontSize": 13,
            },
            Object {},
            Object {
              "fontSize": 13,
            },
          ]
        }
        testID="reaction.grinning"
      >
        ðŸ˜€
      </Text>
       1
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#E3E6F2",
        "borderColor": "#E3E6F2",
        "borderRadius": 6,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 28,
        "justifyContent": "center",
        "margin": 2,
        "opacity": 1,
        "paddingHorizontal": 6,
      }
    }
    testID="reaction.button.grinning_face_with_star_eyes"
  >
    <Text
      style={
        Array [
          Object {
            "color": "#181C32",
            "fontFamily": "BeVietnamPro-Medium",
            "fontSize": 13,
          },
          Object {
            "color": "#181C32",
          },
          Object {
            "marginBottom": 2,
          },
        ]
      }
      testID="reaction.children"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#181C32",
              "fontFamily": "BeVietnamPro-Medium",
              "fontSize": 13,
            },
            Object {},
            Object {
              "fontSize": 13,
            },
          ]
        }
        testID="reaction.grinning_face_with_star_eyes"
      >
        ðŸ¤©
      </Text>
       1
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#E3E6F2",
        "borderColor": "#E3E6F2",
        "borderRadius": 6,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 28,
        "justifyContent": "center",
        "margin": 2,
        "opacity": 1,
        "paddingHorizontal": 6,
      }
    }
    testID="reaction.button.kissing_smiling_eyes"
  >
    <Text
      style={
        Array [
          Object {
            "color": "#181C32",
            "fontFamily": "BeVietnamPro-Medium",
            "fontSize": 13,
          },
          Object {
            "color": "#181C32",
          },
          Object {
            "marginBottom": 2,
          },
        ]
      }
      testID="reaction.children"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#181C32",
              "fontFamily": "BeVietnamPro-Medium",
              "fontSize": 13,
            },
            Object {},
            Object {
              "fontSize": 13,
            },
          ]
        }
        testID="reaction.kissing_smiling_eyes"
      >
        ðŸ˜™
      </Text>
       1
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#E9DFF6",
        "borderColor": "#7335C0",
        "borderRadius": 6,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 28,
        "justifyContent": "center",
        "margin": 2,
        "opacity": 1,
        "paddingHorizontal": 6,
      }
    }
    testID="reaction.button.sweat_smile"
  >
    <Text
      style={
        Array [
          Object {
            "color": "#181C32",
            "fontFamily": "BeVietnamPro-Medium",
            "fontSize": 13,
          },
          Object {
            "color": "#602CA0",
          },
          Object {
            "marginBottom": 2,
          },
        ]
      }
      testID="reaction.children"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#181C32",
              "fontFamily": "BeVietnamPro-Medium",
              "fontSize": 13,
            },
            Object {},
            Object {
              "fontSize": 13,
            },
          ]
        }
        testID="reaction.sweat_smile"
      >
        ðŸ˜…
      </Text>
       2
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderColor": "#D1D4DB",
        "borderRadius": 4,
        "borderWidth": 1,
        "justifyContent": "center",
        "marginHorizontal": 6,
        "marginVertical": 2,
        "opacity": 1,
        "paddingHorizontal": 4,
        "paddingVertical": 4,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
      testID="button_wrapper.content"
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              undefined,
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="reaction_view.react"
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`ReactionView component renders correctly with props Reactions Order  1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "flexDirection": "row",
        "flexWrap": "wrap",
        "paddingBottom": 8,
        "paddingTop": 8,
      },
      undefined,
    ]
  }
  testID="reaction_view"
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#E3E6F2",
        "borderColor": "#E3E6F2",
        "borderRadius": 6,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 28,
        "justifyContent": "center",
        "margin": 2,
        "opacity": 1,
        "paddingHorizontal": 6,
      }
    }
    testID="reaction.button.grinning"
  >
    <Text
      style={
        Array [
          Object {
            "color": "#181C32",
            "fontFamily": "BeVietnamPro-Medium",
            "fontSize": 13,
          },
          Object {
            "color": "#181C32",
          },
          Object {
            "marginBottom": 2,
          },
        ]
      }
      testID="reaction.children"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#181C32",
              "fontFamily": "BeVietnamPro-Medium",
              "fontSize": 13,
            },
            Object {},
            Object {
              "fontSize": 13,
            },
          ]
        }
        testID="reaction.grinning"
      >
        ðŸ˜€
      </Text>
       1
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#E3E6F2",
        "borderColor": "#E3E6F2",
        "borderRadius": 6,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 28,
        "justifyContent": "center",
        "margin": 2,
        "opacity": 1,
        "paddingHorizontal": 6,
      }
    }
    testID="reaction.button.grinning_face_with_star_eyes"
  >
    <Text
      style={
        Array [
          Object {
            "color": "#181C32",
            "fontFamily": "BeVietnamPro-Medium",
            "fontSize": 13,
          },
          Object {
            "color": "#181C32",
          },
          Object {
            "marginBottom": 2,
          },
        ]
      }
      testID="reaction.children"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#181C32",
              "fontFamily": "BeVietnamPro-Medium",
              "fontSize": 13,
            },
            Object {},
            Object {
              "fontSize": 13,
            },
          ]
        }
        testID="reaction.grinning_face_with_star_eyes"
      >
        ðŸ¤©
      </Text>
       1
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#E3E6F2",
        "borderColor": "#E3E6F2",
        "borderRadius": 6,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 28,
        "justifyContent": "center",
        "margin": 2,
        "opacity": 1,
        "paddingHorizontal": 6,
      }
    }
    testID="reaction.button.kissing_smiling_eyes"
  >
    <Text
      style={
        Array [
          Object {
            "color": "#181C32",
            "fontFamily": "BeVietnamPro-Medium",
            "fontSize": 13,
          },
          Object {
            "color": "#181C32",
          },
          Object {
            "marginBottom": 2,
          },
        ]
      }
      testID="reaction.children"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#181C32",
              "fontFamily": "BeVietnamPro-Medium",
              "fontSize": 13,
            },
            Object {},
            Object {
              "fontSize": 13,
            },
          ]
        }
        testID="reaction.kissing_smiling_eyes"
      >
        ðŸ˜™
      </Text>
       1
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#E9DFF6",
        "borderColor": "#7335C0",
        "borderRadius": 6,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 28,
        "justifyContent": "center",
        "margin": 2,
        "opacity": 1,
        "paddingHorizontal": 6,
      }
    }
    testID="reaction.button.sweat_smile"
  >
    <Text
      style={
        Array [
          Object {
            "color": "#181C32",
            "fontFamily": "BeVietnamPro-Medium",
            "fontSize": 13,
          },
          Object {
            "color": "#602CA0",
          },
          Object {
            "marginBottom": 2,
          },
        ]
      }
      testID="reaction.children"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#181C32",
              "fontFamily": "BeVietnamPro-Medium",
              "fontSize": 13,
            },
            Object {},
            Object {
              "fontSize": 13,
            },
          ]
        }
        testID="reaction.sweat_smile"
      >
        ðŸ˜…
      </Text>
       2
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderColor": "#D1D4DB",
        "borderRadius": 4,
        "borderWidth": 1,
        "justifyContent": "center",
        "marginHorizontal": 6,
        "marginVertical": 2,
        "opacity": 1,
        "paddingHorizontal": 4,
        "paddingVertical": 4,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
      testID="button_wrapper.content"
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              undefined,
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="reaction_view.react"
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`ReactionView component renders correctly with props Reactions Order empty  1`] = `
<View
  style={
    Object {
      "alignItems": "flex-start",
      "flex": 1,
      "paddingTop": 8,
    }
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderColor": "#D1D4DB",
        "borderRadius": 4,
        "borderWidth": 1,
        "justifyContent": "center",
        "marginVertical": 2,
        "opacity": 1,
        "paddingHorizontal": 4,
        "paddingVertical": 4,
      }
    }
    testID="reaction_view.react"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
      testID="button_wrapper.content"
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              undefined,
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View />
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`ReactionView component renders correctly with props showSelectReactionWhenEmpty = false  1`] = `
<View
  style={
    Object {
      "alignItems": "flex-start",
      "flex": 1,
      "paddingTop": 8,
    }
  }
/>
`;

exports[`ReactionView component renders correctly with props showSelectReactionWhenEmpty 1`] = `
<View
  style={
    Object {
      "alignItems": "flex-start",
      "flex": 1,
      "paddingTop": 8,
    }
  }
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderColor": "#D1D4DB",
        "borderRadius": 4,
        "borderWidth": 1,
        "justifyContent": "center",
        "marginVertical": 2,
        "opacity": 1,
        "paddingHorizontal": 4,
        "paddingVertical": 4,
      }
    }
    testID="reaction_view.react"
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
      testID="button_wrapper.content"
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              undefined,
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View />
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`ReactionView component renders correctly with props style 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "flexDirection": "row",
        "flexWrap": "wrap",
        "paddingBottom": 8,
        "paddingTop": 8,
      },
      Object {
        "backgroundColor": "#FF9800",
      },
    ]
  }
  testID="reaction_view"
>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#E3E6F2",
        "borderColor": "#E3E6F2",
        "borderRadius": 6,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 28,
        "justifyContent": "center",
        "margin": 2,
        "opacity": 1,
        "paddingHorizontal": 6,
      }
    }
    testID="reaction.button.grinning"
  >
    <Text
      style={
        Array [
          Object {
            "color": "#181C32",
            "fontFamily": "BeVietnamPro-Medium",
            "fontSize": 13,
          },
          Object {
            "color": "#181C32",
          },
          Object {
            "marginBottom": 2,
          },
        ]
      }
      testID="reaction.children"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#181C32",
              "fontFamily": "BeVietnamPro-Medium",
              "fontSize": 13,
            },
            Object {},
            Object {
              "fontSize": 13,
            },
          ]
        }
        testID="reaction.grinning"
      >
        ðŸ˜€
      </Text>
       1
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#E3E6F2",
        "borderColor": "#E3E6F2",
        "borderRadius": 6,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 28,
        "justifyContent": "center",
        "margin": 2,
        "opacity": 1,
        "paddingHorizontal": 6,
      }
    }
    testID="reaction.button.grinning_face_with_star_eyes"
  >
    <Text
      style={
        Array [
          Object {
            "color": "#181C32",
            "fontFamily": "BeVietnamPro-Medium",
            "fontSize": 13,
          },
          Object {
            "color": "#181C32",
          },
          Object {
            "marginBottom": 2,
          },
        ]
      }
      testID="reaction.children"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#181C32",
              "fontFamily": "BeVietnamPro-Medium",
              "fontSize": 13,
            },
            Object {},
            Object {
              "fontSize": 13,
            },
          ]
        }
        testID="reaction.grinning_face_with_star_eyes"
      >
        ðŸ¤©
      </Text>
       1
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#E3E6F2",
        "borderColor": "#E3E6F2",
        "borderRadius": 6,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 28,
        "justifyContent": "center",
        "margin": 2,
        "opacity": 1,
        "paddingHorizontal": 6,
      }
    }
    testID="reaction.button.kissing_smiling_eyes"
  >
    <Text
      style={
        Array [
          Object {
            "color": "#181C32",
            "fontFamily": "BeVietnamPro-Medium",
            "fontSize": 13,
          },
          Object {
            "color": "#181C32",
          },
          Object {
            "marginBottom": 2,
          },
        ]
      }
      testID="reaction.children"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#181C32",
              "fontFamily": "BeVietnamPro-Medium",
              "fontSize": 13,
            },
            Object {},
            Object {
              "fontSize": 13,
            },
          ]
        }
        testID="reaction.kissing_smiling_eyes"
      >
        ðŸ˜™
      </Text>
       1
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#E9DFF6",
        "borderColor": "#7335C0",
        "borderRadius": 6,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 28,
        "justifyContent": "center",
        "margin": 2,
        "opacity": 1,
        "paddingHorizontal": 6,
      }
    }
    testID="reaction.button.sweat_smile"
  >
    <Text
      style={
        Array [
          Object {
            "color": "#181C32",
            "fontFamily": "BeVietnamPro-Medium",
            "fontSize": 13,
          },
          Object {
            "color": "#602CA0",
          },
          Object {
            "marginBottom": 2,
          },
        ]
      }
      testID="reaction.children"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#181C32",
              "fontFamily": "BeVietnamPro-Medium",
              "fontSize": 13,
            },
            Object {},
            Object {
              "fontSize": 13,
            },
          ]
        }
        testID="reaction.sweat_smile"
      >
        ðŸ˜…
      </Text>
       2
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "borderColor": "#D1D4DB",
        "borderRadius": 4,
        "borderWidth": 1,
        "justifyContent": "center",
        "marginHorizontal": 6,
        "marginVertical": 2,
        "opacity": 1,
        "paddingHorizontal": 4,
        "paddingVertical": 4,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
      testID="button_wrapper.content"
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              undefined,
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="reaction_view.react"
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
