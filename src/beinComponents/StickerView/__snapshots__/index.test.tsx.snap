// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StickerView component renders correctly 1`] = `
<View
  collapsable={false}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  style={
    Array [
      Object {
        "height": 1274,
      },
      false,
    ]
  }
  testID="sticker_view"
>
  <View
    style={[Function]}
    testID="sticker_view.animated_view"
  >
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "borderTopColor": "#EAEDF2",
          "borderTopWidth": 1,
          "height": "100%",
        }
      }
    >
      <View
        collapsable={false}
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        style={
          Object {
            "marginHorizontal": 12,
            "paddingVertical": 12,
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "center",
              "backgroundColor": "#EAEDF2",
              "borderRadius": 4,
              "height": 4,
              "marginBottom": 12,
              "width": 48,
            }
          }
        />
        <View
          style={
            Object {
              "backgroundColor": "#EAEDF2",
              "borderRadius": 20,
              "height": 40,
              "justifyContent": "center",
              "paddingHorizontal": 16,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": true,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={false}
              hitSlop={
                Object {
                  "bottom": 10,
                  "left": 10,
                  "right": 10,
                  "top": 10,
                }
              }
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    },
                    Object {
                      "marginRight": 8,
                    },
                    Object {
                      "backgroundColor": undefined,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      undefined,
                      undefined,
                      undefined,
                    ]
                  }
                >
                  <View
                    className="icon-wrapper"
                  >
                    <RNSVGSvgView
                      align="xMidYMid"
                      bbHeight={20}
                      bbWidth={20}
                      fill="#627286"
                      focusable={false}
                      height={20}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {},
                          Object {
                            "flex": 0,
                            "height": 20,
                            "width": 20,
                          },
                        ]
                      }
                      vbHeight={24}
                      vbWidth={24}
                      width={20}
                    >
                      <RNSVGGroup
                        fill={4284641926}
                        propList={
                          Array [
                            "fill",
                          ]
                        }
                      >
                        <RNSVGPath
                          d="M21.71,20.29,18,16.61A9,9,0,1,0,16.61,18l3.68,3.68a1,1,0,0,0,1.42,0A1,1,0,0,0,21.71,20.29ZM11,18a7,7,0,1,1,7-7A7,7,0,0,1,11,18Z"
                        />
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
              </View>
            </View>
            <TextInput
              autoComplete="off"
              onChangeText={[Function]}
              onFocus={[Function]}
              onSubmitEditing={[Function]}
              placeholder="Search GIPHY"
              placeholderTextColor="#627286"
              returnKeyType="search"
              selectionColor="#627286"
              style={
                Object {
                  "color": "#2F3945",
                  "flex": 1,
                  "fontFamily": "OpenSans-Regular",
                  "fontSize": 16,
                  "height": "100%",
                }
              }
              testID="sticker_view.search_input"
              value=""
            />
          </View>
        </View>
      </View>
      <GiphyReactNativeGridView
        cellPadding={4}
        content={
          Object {
            "mediaType": undefined,
            "requestType": "trending",
            "searchQuery": "",
          }
        }
        onMediaSelect={[Function]}
        style={
          Object {
            "height": "100%",
          }
        }
        testID="sticker_view.grid_view"
      />
    </View>
  </View>
</View>
`;

exports[`StickerView component renders null 1`] = `null`;
