// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header component renders correctly 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with children 1`] = `
<View
  testID="header"
>
  <View
    testID="header.children"
  />
</View>
`;

exports[`Header component renders correctly with props auto focus search 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.searchIcon"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 24,
                        "justifyContent": "center",
                        "width": 24,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={24}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props auto focus search 2`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.searchIcon"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 24,
                        "justifyContent": "center",
                        "width": 24,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={24}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "bottom": 0,
            "flexDirection": "row",
            "height": 60,
            "left": 0,
            "paddingLeft": 8,
            "paddingRight": 12,
            "position": "absolute",
            "right": 0,
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "opacity": 0,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "height": 48,
                    "justifyContent": "center",
                    "padding": 12,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  className="icon-wrapper"
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={24}
                    bbWidth={24}
                    fill="#2F3945"
                    focusable={false}
                    height={24}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {},
                        Object {
                          "flex": 0,
                          "height": 24,
                          "width": 24,
                        },
                      ]
                    }
                    vbHeight={24}
                    vbWidth={24}
                    width={24}
                  >
                    <RNSVGGroup
                      fill={4281284933}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    >
                      <RNSVGPath
                        d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 1,
            }
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "width": "0%",
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "backgroundColor": "#EAEDF2",
                "borderRadius": 24,
                "height": 40,
                "overflow": "hidden",
                "width": "0%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": undefined,
                  "borderRadius": 20,
                  "flex": 1,
                  "height": 40,
                  "justifyContent": "center",
                  "paddingHorizontal": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  nativeID="animatedComponent"
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginRight": 8,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        className="icon-wrapper"
                      >
                        <RNSVGSvgView
                          align="xMidYMid"
                          bbHeight={20}
                          bbWidth={20}
                          fill="#627286"
                          focusable={false}
                          height={20}
                          meetOrSlice={0}
                          minX={0}
                          minY={0}
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              Object {},
                              Object {
                                "flex": 0,
                                "height": 20,
                                "width": 20,
                              },
                            ]
                          }
                          vbHeight={24}
                          vbWidth={24}
                          width={20}
                        >
                          <RNSVGGroup
                            fill={4284641926}
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                          >
                            <RNSVGPath
                              d="M21.71,20.29,18,16.61A9,9,0,1,0,16.61,18l3.68,3.68a1,1,0,0,0,1.42,0A1,1,0,0,0,21.71,20.29ZM11,18a7,7,0,1,1,7-7A7,7,0,0,1,11,18Z"
                            />
                          </RNSVGGroup>
                        </RNSVGSvgView>
                      </View>
                    </View>
                  </View>
                </View>
                <TextInput
                  autoComplete="off"
                  autoFocus={true}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  onSubmitEditing={[Function]}
                  placeholder="Search for groups or people..."
                  placeholderTextColor="#627286"
                  returnKeyType="search"
                  selectionColor="#627286"
                  style={
                    Object {
                      "color": "#2F3945",
                      "flex": 1,
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 16,
                      "height": "100%",
                    }
                  }
                  testID="header.search.input"
                  value=""
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props avatar 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.avatar"
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#F8F5FF",
              "borderRadius": 6,
              "height": 40,
              "justifyContent": "center",
              "padding": 1,
              "width": 40,
            }
          }
          testID="avatar_group"
        >
          <View
            style={
              Object {
                "borderRadius": 6,
                "height": 40,
                "width": 40,
              }
            }
            testID="avatar"
          >
            <View
              style={
                Object {
                  "borderRadius": 6,
                  "height": 40,
                  "width": 40,
                }
              }
              testID="avatar_container"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "borderRadius": 6,
                        "height": 40,
                        "justifyContent": "center",
                        "width": 40,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "borderRadius": 6,
                        "height": 40,
                        "width": 40,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    source={
                      Object {
                        "testUri": "../../../assets/images/bein_logo.png",
                      }
                    }
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                    testID="avatar.image"
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props avatar props 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.avatar"
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#F8F5FF",
              "borderColor": "#FF9800",
              "borderRadius": 6,
              "borderWidth": 1,
              "height": 24,
              "justifyContent": "center",
              "padding": 1,
              "width": 24,
            }
          }
          testID="avatar_group"
        >
          <View
            style={
              Object {
                "borderRadius": 6,
                "height": 40,
                "width": 40,
              }
            }
            testID="avatar"
          >
            <View
              style={
                Object {
                  "borderRadius": 6,
                  "height": 40,
                  "width": 40,
                }
              }
              testID="avatar_container"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "borderRadius": 6,
                        "height": 40,
                        "justifyContent": "center",
                        "width": 40,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "borderRadius": 6,
                        "height": 40,
                        "width": 40,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    source={
                      Object {
                        "testUri": "../../../assets/images/bein_logo.png",
                      }
                    }
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                    testID="avatar.image"
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props button props 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#F2F2F2",
            "borderRadius": 6,
            "padding": 8,
          }
        }
        testID="header.button"
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
          testID="button_wrapper.content"
        >
          <Text
            style={
              Object {
                "color": "#7843DD",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 16,
                "textAlign": "center",
              }
            }
            testID="header.button.text"
          >
            Text Button
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props button text 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "borderColor": "#7843DD",
            "borderRadius": 6,
            "borderWidth": 1,
            "height": 40,
            "marginRight": 4,
            "padding": 8,
          }
        }
        testID="header.button"
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
          testID="button_wrapper.content"
        >
          <Text
            style={
              Object {
                "color": "#7843DD",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 16,
                "textAlign": "center",
              }
            }
            testID="header.button.text"
          >
            Text Button
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props disable inset top 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": undefined,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props header ref 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    testID="header"
  >
    <View
      animatedStyle={
        Object {
          "value": Object {
            "height": 60,
          },
        }
      }
      collapsable={false}
      style={
        Object {
          "alignItems": "flex-end",
          "backgroundColor": "#FFFFFF",
          "borderBottomWidth": 0.5,
          "borderColor": "#EAEDF2",
          "elevation": 2,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingTop": 0,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 1,
        }
      }
      testID="header.content"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "flex": 1,
            "flexDirection": "row",
            "height": 60,
            "overflow": "hidden",
            "paddingLeft": 8,
            "paddingRight": 8,
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 20,
              "left": 20,
              "right": 20,
              "top": 20,
            }
          }
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="header.back.button"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Object {
                  "alignItems": "center",
                  "height": 48,
                  "justifyContent": "center",
                  "padding": 12,
                  "width": 48,
                },
                Object {
                  "backgroundColor": undefined,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View
                className="icon-wrapper"
                testID="header.back"
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={24}
                  bbWidth={24}
                  fill="#2F3945"
                  focusable={false}
                  height={24}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {},
                      Object {
                        "flex": 0,
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={24}
                >
                  <RNSVGGroup
                    fill={4281284933}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "flex": 1,
              "height": "100%",
              "justifyContent": "center",
              "marginLeft": 16,
              "paddingTop": 1.5,
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "height": 0,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      nativeID="animatedComponent"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#FF9800",
          "height": 40,
          "opacity": 1,
        }
      }
      testID="header.ref"
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props hide back 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props hide back on laptop 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props icon 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.icon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.icon"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M19,14h2a1,1,0,0,0,0-2H19V11a5.15,5.15,0,0,0-.21-1.36A5,5,0,0,0,22,5a1,1,0,0,0-2,0,3,3,0,0,1-2.14,2.87A5,5,0,0,0,16,6.4,2.58,2.58,0,0,0,16,6,4,4,0,0,0,8,6a2.58,2.58,0,0,0,0,.4,5,5,0,0,0-1.9,1.47A3,3,0,0,1,4,5,1,1,0,0,0,2,5,5,5,0,0,0,5.21,9.64,5.15,5.15,0,0,0,5,11v1H3a1,1,0,0,0,0,2H5v1a7,7,0,0,0,.14,1.38A5,5,0,0,0,2,21a1,1,0,0,0,2,0,3,3,0,0,1,1.81-2.74,7,7,0,0,0,12.38,0A3,3,0,0,1,20,21a1,1,0,0,0,2,0,5,5,0,0,0-3.14-4.62A7,7,0,0,0,19,15Zm-8,5.9A5,5,0,0,1,7,15V11a3,3,0,0,1,3-3h1ZM10,6a2,2,0,0,1,4,0Zm7,9a5,5,0,0,1-4,4.9V8h1a3,3,0,0,1,3,3Z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props left icon 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.leftIcon"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M19,14h2a1,1,0,0,0,0-2H19V11a5.15,5.15,0,0,0-.21-1.36A5,5,0,0,0,22,5a1,1,0,0,0-2,0,3,3,0,0,1-2.14,2.87A5,5,0,0,0,16,6.4,2.58,2.58,0,0,0,16,6,4,4,0,0,0,8,6a2.58,2.58,0,0,0,0,.4,5,5,0,0,0-1.9,1.47A3,3,0,0,1,4,5,1,1,0,0,0,2,5,5,5,0,0,0,5.21,9.64,5.15,5.15,0,0,0,5,11v1H3a1,1,0,0,0,0,2H5v1a7,7,0,0,0,.14,1.38A5,5,0,0,0,2,21a1,1,0,0,0,2,0,3,3,0,0,1,1.81-2.74,7,7,0,0,0,12.38,0A3,3,0,0,1,20,21a1,1,0,0,0,2,0,5,5,0,0,0-3.14-4.62A7,7,0,0,0,19,15Zm-8,5.9A5,5,0,0,1,7,15V11a3,3,0,0,1,3-3h1ZM10,6a2,2,0,0,1,4,0Zm7,9a5,5,0,0,1-4,4.9V8h1a3,3,0,0,1,3,3Z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props left icon props 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.leftIcon"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#421187"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4282519943}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M19,14h2a1,1,0,0,0,0-2H19V11a5.15,5.15,0,0,0-.21-1.36A5,5,0,0,0,22,5a1,1,0,0,0-2,0,3,3,0,0,1-2.14,2.87A5,5,0,0,0,16,6.4,2.58,2.58,0,0,0,16,6,4,4,0,0,0,8,6a2.58,2.58,0,0,0,0,.4,5,5,0,0,0-1.9,1.47A3,3,0,0,1,4,5,1,1,0,0,0,2,5,5,5,0,0,0,5.21,9.64,5.15,5.15,0,0,0,5,11v1H3a1,1,0,0,0,0,2H5v1a7,7,0,0,0,.14,1.38A5,5,0,0,0,2,21a1,1,0,0,0,2,0,3,3,0,0,1,1.81-2.74,7,7,0,0,0,12.38,0A3,3,0,0,1,20,21a1,1,0,0,0,2,0,5,5,0,0,0-3.14-4.62A7,7,0,0,0,19,15Zm-8,5.9A5,5,0,0,1,7,15V11a3,3,0,0,1,3-3h1ZM10,6a2,2,0,0,1,4,0Zm7,9a5,5,0,0,1-4,4.9V8h1a3,3,0,0,1,3,3Z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props menu icon 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.menuIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.menuIcon"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M3,8H21a1,1,0,0,0,0-2H3A1,1,0,0,0,3,8Zm18,8H3a1,1,0,0,0,0,2H21a1,1,0,0,0,0-2Zm0-5H3a1,1,0,0,0,0,2H21a1,1,0,0,0,0-2Z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on focus search 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.searchIcon"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 24,
                        "justifyContent": "center",
                        "width": 24,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={24}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on focus search 2`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.searchIcon"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 24,
                        "justifyContent": "center",
                        "width": 24,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={24}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "bottom": 0,
            "flexDirection": "row",
            "height": 60,
            "left": 0,
            "paddingLeft": 8,
            "paddingRight": 12,
            "position": "absolute",
            "right": 0,
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "opacity": 0,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "height": 48,
                    "justifyContent": "center",
                    "padding": 12,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  className="icon-wrapper"
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={24}
                    bbWidth={24}
                    fill="#2F3945"
                    focusable={false}
                    height={24}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {},
                        Object {
                          "flex": 0,
                          "height": 24,
                          "width": 24,
                        },
                      ]
                    }
                    vbHeight={24}
                    vbWidth={24}
                    width={24}
                  >
                    <RNSVGGroup
                      fill={4281284933}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    >
                      <RNSVGPath
                        d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 1,
            }
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "width": "0%",
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "backgroundColor": "#EAEDF2",
                "borderRadius": 24,
                "height": 40,
                "overflow": "hidden",
                "width": "0%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": undefined,
                  "borderRadius": 20,
                  "flex": 1,
                  "height": 40,
                  "justifyContent": "center",
                  "paddingHorizontal": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  nativeID="animatedComponent"
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginRight": 8,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        className="icon-wrapper"
                      >
                        <RNSVGSvgView
                          align="xMidYMid"
                          bbHeight={20}
                          bbWidth={20}
                          fill="#627286"
                          focusable={false}
                          height={20}
                          meetOrSlice={0}
                          minX={0}
                          minY={0}
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              Object {},
                              Object {
                                "flex": 0,
                                "height": 20,
                                "width": 20,
                              },
                            ]
                          }
                          vbHeight={24}
                          vbWidth={24}
                          width={20}
                        >
                          <RNSVGGroup
                            fill={4284641926}
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                          >
                            <RNSVGPath
                              d="M21.71,20.29,18,16.61A9,9,0,1,0,16.61,18l3.68,3.68a1,1,0,0,0,1.42,0A1,1,0,0,0,21.71,20.29ZM11,18a7,7,0,1,1,7-7A7,7,0,0,1,11,18Z"
                            />
                          </RNSVGGroup>
                        </RNSVGSvgView>
                      </View>
                    </View>
                  </View>
                </View>
                <TextInput
                  autoComplete="off"
                  autoFocus={false}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  onSubmitEditing={[Function]}
                  placeholder="Search for groups or people..."
                  placeholderTextColor="#627286"
                  returnKeyType="search"
                  selectionColor="#627286"
                  style={
                    Object {
                      "color": "#2F3945",
                      "flex": 1,
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 16,
                      "height": "100%",
                    }
                  }
                  testID="header.search.input"
                  value=""
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on press button 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "borderColor": "#7843DD",
            "borderRadius": 6,
            "borderWidth": 1,
            "height": 40,
            "marginRight": 4,
            "padding": 8,
          }
        }
        testID="header.button"
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
          testID="button_wrapper.content"
        >
          <Text
            style={
              Object {
                "color": "#7843DD",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 16,
                "textAlign": "center",
              }
            }
            testID="header.button.text"
          >
            Text Button
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on press chat 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View>
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="header.iconChat.button"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Object {
                  "alignItems": "center",
                  "borderRadius": 20,
                  "height": 40,
                  "justifyContent": "center",
                  "marginRight": 4,
                  "padding": 8,
                  "width": 40,
                },
                Object {
                  "backgroundColor": "#F9FAFB",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View
                className="icon-wrapper"
                testID="header.iconChat"
              >
                <View
                  onLayout={[Function]}
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "position": "relative",
                    }
                  }
                >
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "opacity": 1,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#f9f9f9",
                          "height": 24,
                          "justifyContent": "center",
                          "width": 24,
                        }
                      }
                      testID="Image__placeholder"
                    />
                  </View>
                  <View
                    style={
                      Array [
                        Object {
                          "overflow": "hidden",
                        },
                        Object {
                          "height": 24,
                          "width": 24,
                        },
                      ]
                    }
                  >
                    <FastImageView
                      onFastImageError={[Function]}
                      onFastImageLoadEnd={[Function]}
                      resizeMode="cover"
                      size={24}
                      source={null}
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on press header 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.avatar"
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#F8F5FF",
              "borderRadius": 6,
              "height": 40,
              "justifyContent": "center",
              "padding": 1,
              "width": 40,
            }
          }
          testID="avatar_group"
        >
          <View
            style={
              Object {
                "borderRadius": 6,
                "height": 40,
                "width": 40,
              }
            }
            testID="avatar"
          >
            <View
              style={
                Object {
                  "borderRadius": 6,
                  "height": 40,
                  "width": 40,
                }
              }
              testID="avatar_container"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "borderRadius": 6,
                        "height": 40,
                        "justifyContent": "center",
                        "width": 40,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "borderRadius": 6,
                        "height": 40,
                        "width": 40,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    source={
                      Object {
                        "testUri": "../../../assets/images/bein_logo.png",
                      }
                    }
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                    testID="avatar.image"
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on press icon 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.icon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.icon"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M19,14h2a1,1,0,0,0,0-2H19V11a5.15,5.15,0,0,0-.21-1.36A5,5,0,0,0,22,5a1,1,0,0,0-2,0,3,3,0,0,1-2.14,2.87A5,5,0,0,0,16,6.4,2.58,2.58,0,0,0,16,6,4,4,0,0,0,8,6a2.58,2.58,0,0,0,0,.4,5,5,0,0,0-1.9,1.47A3,3,0,0,1,4,5,1,1,0,0,0,2,5,5,5,0,0,0,5.21,9.64,5.15,5.15,0,0,0,5,11v1H3a1,1,0,0,0,0,2H5v1a7,7,0,0,0,.14,1.38A5,5,0,0,0,2,21a1,1,0,0,0,2,0,3,3,0,0,1,1.81-2.74,7,7,0,0,0,12.38,0A3,3,0,0,1,20,21a1,1,0,0,0,2,0,5,5,0,0,0-3.14-4.62A7,7,0,0,0,19,15Zm-8,5.9A5,5,0,0,1,7,15V11a3,3,0,0,1,3-3h1ZM10,6a2,2,0,0,1,4,0Zm7,9a5,5,0,0,1-4,4.9V8h1a3,3,0,0,1,3,3Z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on press menu 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.menuIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.menuIcon"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M3,8H21a1,1,0,0,0,0-2H3A1,1,0,0,0,3,8Zm18,8H3a1,1,0,0,0,0,2H21a1,1,0,0,0,0-2Zm0-5H3a1,1,0,0,0,0,2H21a1,1,0,0,0,0-2Z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on right press 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.rightIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.rightIcon"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 24,
                        "justifyContent": "center",
                        "width": 24,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={24}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on show search 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.searchIcon"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 24,
                        "justifyContent": "center",
                        "width": 24,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={24}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on show search 2`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.searchIcon"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 24,
                        "justifyContent": "center",
                        "width": 24,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={24}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "bottom": 0,
            "flexDirection": "row",
            "height": 60,
            "left": 0,
            "paddingLeft": 8,
            "paddingRight": 12,
            "position": "absolute",
            "right": 0,
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "opacity": 0,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "height": 48,
                    "justifyContent": "center",
                    "padding": 12,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  className="icon-wrapper"
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={24}
                    bbWidth={24}
                    fill="#2F3945"
                    focusable={false}
                    height={24}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {},
                        Object {
                          "flex": 0,
                          "height": 24,
                          "width": 24,
                        },
                      ]
                    }
                    vbHeight={24}
                    vbWidth={24}
                    width={24}
                  >
                    <RNSVGGroup
                      fill={4281284933}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    >
                      <RNSVGPath
                        d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 1,
            }
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "width": "0%",
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "backgroundColor": "#EAEDF2",
                "borderRadius": 24,
                "height": 40,
                "overflow": "hidden",
                "width": "0%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": undefined,
                  "borderRadius": 20,
                  "flex": 1,
                  "height": 40,
                  "justifyContent": "center",
                  "paddingHorizontal": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  nativeID="animatedComponent"
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginRight": 8,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        className="icon-wrapper"
                      >
                        <RNSVGSvgView
                          align="xMidYMid"
                          bbHeight={20}
                          bbWidth={20}
                          fill="#627286"
                          focusable={false}
                          height={20}
                          meetOrSlice={0}
                          minX={0}
                          minY={0}
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              Object {},
                              Object {
                                "flex": 0,
                                "height": 20,
                                "width": 20,
                              },
                            ]
                          }
                          vbHeight={24}
                          vbWidth={24}
                          width={20}
                        >
                          <RNSVGGroup
                            fill={4284641926}
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                          >
                            <RNSVGPath
                              d="M21.71,20.29,18,16.61A9,9,0,1,0,16.61,18l3.68,3.68a1,1,0,0,0,1.42,0A1,1,0,0,0,21.71,20.29ZM11,18a7,7,0,1,1,7-7A7,7,0,0,1,11,18Z"
                            />
                          </RNSVGGroup>
                        </RNSVGSvgView>
                      </View>
                    </View>
                  </View>
                </View>
                <TextInput
                  autoComplete="off"
                  autoFocus={false}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  onSubmitEditing={[Function]}
                  placeholder="Search for groups or people..."
                  placeholderTextColor="#627286"
                  returnKeyType="search"
                  selectionColor="#627286"
                  style={
                    Object {
                      "color": "#2F3945",
                      "flex": 1,
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 16,
                      "height": "100%",
                    }
                  }
                  testID="header.search.input"
                  value=""
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on submit search 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.searchIcon"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 24,
                        "justifyContent": "center",
                        "width": 24,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={24}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on submit search 2`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.searchIcon"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 24,
                        "justifyContent": "center",
                        "width": 24,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={24}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "bottom": 0,
            "flexDirection": "row",
            "height": 60,
            "left": 0,
            "paddingLeft": 8,
            "paddingRight": 12,
            "position": "absolute",
            "right": 0,
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "opacity": 0,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "height": 48,
                    "justifyContent": "center",
                    "padding": 12,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  className="icon-wrapper"
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={24}
                    bbWidth={24}
                    fill="#2F3945"
                    focusable={false}
                    height={24}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {},
                        Object {
                          "flex": 0,
                          "height": 24,
                          "width": 24,
                        },
                      ]
                    }
                    vbHeight={24}
                    vbWidth={24}
                    width={24}
                  >
                    <RNSVGGroup
                      fill={4281284933}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    >
                      <RNSVGPath
                        d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 1,
            }
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "width": "0%",
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "backgroundColor": "#EAEDF2",
                "borderRadius": 24,
                "height": 40,
                "overflow": "hidden",
                "width": "0%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": undefined,
                  "borderRadius": 20,
                  "flex": 1,
                  "height": 40,
                  "justifyContent": "center",
                  "paddingHorizontal": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  nativeID="animatedComponent"
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginRight": 8,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        className="icon-wrapper"
                      >
                        <RNSVGSvgView
                          align="xMidYMid"
                          bbHeight={20}
                          bbWidth={20}
                          fill="#627286"
                          focusable={false}
                          height={20}
                          meetOrSlice={0}
                          minX={0}
                          minY={0}
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              Object {},
                              Object {
                                "flex": 0,
                                "height": 20,
                                "width": 20,
                              },
                            ]
                          }
                          vbHeight={24}
                          vbWidth={24}
                          width={20}
                        >
                          <RNSVGGroup
                            fill={4284641926}
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                          >
                            <RNSVGPath
                              d="M21.71,20.29,18,16.61A9,9,0,1,0,16.61,18l3.68,3.68a1,1,0,0,0,1.42,0A1,1,0,0,0,21.71,20.29ZM11,18a7,7,0,1,1,7-7A7,7,0,0,1,11,18Z"
                            />
                          </RNSVGGroup>
                        </RNSVGSvgView>
                      </View>
                    </View>
                  </View>
                </View>
                <TextInput
                  autoComplete="off"
                  autoFocus={false}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  onSubmitEditing={[Function]}
                  placeholder="Search for groups or people..."
                  placeholderTextColor="#627286"
                  returnKeyType="search"
                  selectionColor="#627286"
                  style={
                    Object {
                      "color": "#2F3945",
                      "flex": 1,
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 16,
                      "height": "100%",
                    }
                  }
                  testID="header.search.input"
                  value=""
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on text search 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.searchIcon"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 24,
                        "justifyContent": "center",
                        "width": 24,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={24}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on text search 2`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.searchIcon"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 24,
                        "justifyContent": "center",
                        "width": 24,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={24}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "bottom": 0,
            "flexDirection": "row",
            "height": 60,
            "left": 0,
            "paddingLeft": 8,
            "paddingRight": 12,
            "position": "absolute",
            "right": 0,
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "opacity": 0,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "height": 48,
                    "justifyContent": "center",
                    "padding": 12,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  className="icon-wrapper"
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={24}
                    bbWidth={24}
                    fill="#2F3945"
                    focusable={false}
                    height={24}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {},
                        Object {
                          "flex": 0,
                          "height": 24,
                          "width": 24,
                        },
                      ]
                    }
                    vbHeight={24}
                    vbWidth={24}
                    width={24}
                  >
                    <RNSVGGroup
                      fill={4281284933}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    >
                      <RNSVGPath
                        d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 1,
            }
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "width": "0%",
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "backgroundColor": "#EAEDF2",
                "borderRadius": 24,
                "height": 40,
                "overflow": "hidden",
                "width": "0%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": undefined,
                  "borderRadius": 20,
                  "flex": 1,
                  "height": 40,
                  "justifyContent": "center",
                  "paddingHorizontal": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  nativeID="animatedComponent"
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginRight": 8,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        className="icon-wrapper"
                      >
                        <RNSVGSvgView
                          align="xMidYMid"
                          bbHeight={20}
                          bbWidth={20}
                          fill="#627286"
                          focusable={false}
                          height={20}
                          meetOrSlice={0}
                          minX={0}
                          minY={0}
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              Object {},
                              Object {
                                "flex": 0,
                                "height": 20,
                                "width": 20,
                              },
                            ]
                          }
                          vbHeight={24}
                          vbWidth={24}
                          width={20}
                        >
                          <RNSVGGroup
                            fill={4284641926}
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                          >
                            <RNSVGPath
                              d="M21.71,20.29,18,16.61A9,9,0,1,0,16.61,18l3.68,3.68a1,1,0,0,0,1.42,0A1,1,0,0,0,21.71,20.29ZM11,18a7,7,0,1,1,7-7A7,7,0,0,1,11,18Z"
                            />
                          </RNSVGGroup>
                        </RNSVGSvgView>
                      </View>
                    </View>
                  </View>
                </View>
                <TextInput
                  autoComplete="off"
                  autoFocus={false}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  onSubmitEditing={[Function]}
                  placeholder="Search for groups or people..."
                  placeholderTextColor="#627286"
                  returnKeyType="search"
                  selectionColor="#627286"
                  style={
                    Object {
                      "color": "#2F3945",
                      "flex": 1,
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 16,
                      "height": "100%",
                    }
                  }
                  testID="header.search.input"
                  value=""
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props remove border and shadow 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props right icon 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.rightIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.rightIcon"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M19,14h2a1,1,0,0,0,0-2H19V11a5.15,5.15,0,0,0-.21-1.36A5,5,0,0,0,22,5a1,1,0,0,0-2,0,3,3,0,0,1-2.14,2.87A5,5,0,0,0,16,6.4,2.58,2.58,0,0,0,16,6,4,4,0,0,0,8,6a2.58,2.58,0,0,0,0,.4,5,5,0,0,0-1.9,1.47A3,3,0,0,1,4,5,1,1,0,0,0,2,5,5,5,0,0,0,5.21,9.64,5.15,5.15,0,0,0,5,11v1H3a1,1,0,0,0,0,2H5v1a7,7,0,0,0,.14,1.38A5,5,0,0,0,2,21a1,1,0,0,0,2,0,3,3,0,0,1,1.81-2.74,7,7,0,0,0,12.38,0A3,3,0,0,1,20,21a1,1,0,0,0,2,0,5,5,0,0,0-3.14-4.62A7,7,0,0,0,19,15Zm-8,5.9A5,5,0,0,1,7,15V11a3,3,0,0,1,3-3h1ZM10,6a2,2,0,0,1,4,0Zm7,9a5,5,0,0,1-4,4.9V8h1a3,3,0,0,1,3,3Z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props right icon props 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.rightIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.rightIcon"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#421187"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4282519943}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M19,14h2a1,1,0,0,0,0-2H19V11a5.15,5.15,0,0,0-.21-1.36A5,5,0,0,0,22,5a1,1,0,0,0-2,0,3,3,0,0,1-2.14,2.87A5,5,0,0,0,16,6.4,2.58,2.58,0,0,0,16,6,4,4,0,0,0,8,6a2.58,2.58,0,0,0,0,.4,5,5,0,0,0-1.9,1.47A3,3,0,0,1,4,5,1,1,0,0,0,2,5,5,5,0,0,0,5.21,9.64,5.15,5.15,0,0,0,5,11v1H3a1,1,0,0,0,0,2H5v1a7,7,0,0,0,.14,1.38A5,5,0,0,0,2,21a1,1,0,0,0,2,0,3,3,0,0,1,1.81-2.74,7,7,0,0,0,12.38,0A3,3,0,0,1,20,21a1,1,0,0,0,2,0,5,5,0,0,0-3.14-4.62A7,7,0,0,0,19,15Zm-8,5.9A5,5,0,0,1,7,15V11a3,3,0,0,1,3-3h1ZM10,6a2,2,0,0,1,4,0Zm7,9a5,5,0,0,1-4,4.9V8h1a3,3,0,0,1,3,3Z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props search icon test ID 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.searchIcon"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 24,
                        "justifyContent": "center",
                        "width": 24,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={24}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props search input test ID 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.searchIcon"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 24,
                        "justifyContent": "center",
                        "width": 24,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={24}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props search input test ID 2`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.searchIcon"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 24,
                        "justifyContent": "center",
                        "width": 24,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={24}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "bottom": 0,
            "flexDirection": "row",
            "height": 60,
            "left": 0,
            "paddingLeft": 8,
            "paddingRight": 12,
            "position": "absolute",
            "right": 0,
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "opacity": 0,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "height": 48,
                    "justifyContent": "center",
                    "padding": 12,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  className="icon-wrapper"
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={24}
                    bbWidth={24}
                    fill="#2F3945"
                    focusable={false}
                    height={24}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {},
                        Object {
                          "flex": 0,
                          "height": 24,
                          "width": 24,
                        },
                      ]
                    }
                    vbHeight={24}
                    vbWidth={24}
                    width={24}
                  >
                    <RNSVGGroup
                      fill={4281284933}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    >
                      <RNSVGPath
                        d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 1,
            }
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "width": "0%",
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "backgroundColor": "#EAEDF2",
                "borderRadius": 24,
                "height": 40,
                "overflow": "hidden",
                "width": "0%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": undefined,
                  "borderRadius": 20,
                  "flex": 1,
                  "height": 40,
                  "justifyContent": "center",
                  "paddingHorizontal": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  nativeID="animatedComponent"
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginRight": 8,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        className="icon-wrapper"
                      >
                        <RNSVGSvgView
                          align="xMidYMid"
                          bbHeight={20}
                          bbWidth={20}
                          fill="#627286"
                          focusable={false}
                          height={20}
                          meetOrSlice={0}
                          minX={0}
                          minY={0}
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              Object {},
                              Object {
                                "flex": 0,
                                "height": 20,
                                "width": 20,
                              },
                            ]
                          }
                          vbHeight={24}
                          vbWidth={24}
                          width={20}
                        >
                          <RNSVGGroup
                            fill={4284641926}
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                          >
                            <RNSVGPath
                              d="M21.71,20.29,18,16.61A9,9,0,1,0,16.61,18l3.68,3.68a1,1,0,0,0,1.42,0A1,1,0,0,0,21.71,20.29ZM11,18a7,7,0,1,1,7-7A7,7,0,0,1,11,18Z"
                            />
                          </RNSVGGroup>
                        </RNSVGSvgView>
                      </View>
                    </View>
                  </View>
                </View>
                <TextInput
                  autoComplete="off"
                  autoFocus={false}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  onSubmitEditing={[Function]}
                  placeholder="Search for groups or people..."
                  placeholderTextColor="#627286"
                  returnKeyType="search"
                  selectionColor="#627286"
                  style={
                    Object {
                      "color": "#2F3945",
                      "flex": 1,
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 16,
                      "height": "100%",
                    }
                  }
                  testID="header.search.input"
                  value=""
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props search placeholder 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.searchIcon"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 24,
                        "justifyContent": "center",
                        "width": 24,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={24}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props search placeholder 2`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F9FAFB",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.searchIcon"
            >
              <View
                onLayout={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "position": "relative",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#f9f9f9",
                        "height": 24,
                        "justifyContent": "center",
                        "width": 24,
                      }
                    }
                    testID="Image__placeholder"
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Object {
                        "height": 24,
                        "width": 24,
                      },
                    ]
                  }
                >
                  <FastImageView
                    onFastImageError={[Function]}
                    onFastImageLoadEnd={[Function]}
                    resizeMode="cover"
                    size={24}
                    source={null}
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "bottom": 0,
            "flexDirection": "row",
            "height": 60,
            "left": 0,
            "paddingLeft": 8,
            "paddingRight": 12,
            "position": "absolute",
            "right": 0,
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "opacity": 0,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            nativeID="animatedComponent"
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "height": 48,
                    "justifyContent": "center",
                    "padding": 12,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  className="icon-wrapper"
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={24}
                    bbWidth={24}
                    fill="#2F3945"
                    focusable={false}
                    height={24}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {},
                        Object {
                          "flex": 0,
                          "height": 24,
                          "width": 24,
                        },
                      ]
                    }
                    vbHeight={24}
                    vbWidth={24}
                    width={24}
                  >
                    <RNSVGGroup
                      fill={4281284933}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    >
                      <RNSVGPath
                        d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 1,
            }
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "width": "0%",
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "backgroundColor": "#EAEDF2",
                "borderRadius": 24,
                "height": 40,
                "overflow": "hidden",
                "width": "0%",
              }
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": undefined,
                  "borderRadius": 20,
                  "flex": 1,
                  "height": 40,
                  "justifyContent": "center",
                  "paddingHorizontal": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  nativeID="animatedComponent"
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginRight": 8,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        className="icon-wrapper"
                      >
                        <RNSVGSvgView
                          align="xMidYMid"
                          bbHeight={20}
                          bbWidth={20}
                          fill="#627286"
                          focusable={false}
                          height={20}
                          meetOrSlice={0}
                          minX={0}
                          minY={0}
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              Object {},
                              Object {
                                "flex": 0,
                                "height": 20,
                                "width": 20,
                              },
                            ]
                          }
                          vbHeight={24}
                          vbWidth={24}
                          width={20}
                        >
                          <RNSVGGroup
                            fill={4284641926}
                            propList={
                              Array [
                                "fill",
                              ]
                            }
                          >
                            <RNSVGPath
                              d="M21.71,20.29,18,16.61A9,9,0,1,0,16.61,18l3.68,3.68a1,1,0,0,0,1.42,0A1,1,0,0,0,21.71,20.29ZM11,18a7,7,0,1,1,7-7A7,7,0,0,1,11,18Z"
                            />
                          </RNSVGGroup>
                        </RNSVGSvgView>
                      </View>
                    </View>
                  </View>
                </View>
                <TextInput
                  autoComplete="off"
                  autoFocus={false}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  onSubmitEditing={[Function]}
                  placeholder="Search Placeholder"
                  placeholderTextColor="#627286"
                  returnKeyType="search"
                  selectionColor="#627286"
                  style={
                    Object {
                      "color": "#2F3945",
                      "flex": 1,
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 16,
                      "height": "100%",
                    }
                  }
                  testID="header.search.input"
                  value=""
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props style 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#F2F2F2",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props sub title 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#2F3945",
                "fontFamily": "OpenSans-Regular",
                "fontSize": 12,
                "height": 16,
                "lineHeight": 16,
              }
            }
            testID="header.subTitle"
          >
            Sub Title
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props sub title props 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#421187",
                "fontFamily": "OpenSans-Regular",
                "fontSize": 12,
                "height": 16,
                "lineHeight": 16,
              }
            }
            testID="header.subTitle"
          >
            Sub Title
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props title 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Object {
                "color": "#2F3945",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 16,
                "height": 24,
                "lineHeight": 24,
              }
            }
            testID="header.text"
          >
            Title
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props title props 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          nativeID="animatedComponent"
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Object {
                "color": "#421187",
                "fontFamily": "OpenSans-SemiBold",
                "fontSize": 16,
                "height": 24,
                "lineHeight": 24,
              }
            }
            testID="header.text"
          >
            Title
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;
