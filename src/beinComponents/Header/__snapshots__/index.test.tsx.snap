// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header component renders correctly 1`] = `
<View
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "height": 60,
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "borderBottomWidth": 0.5,
        "borderColor": "#EAEDF2",
        "elevation": 2,
        "flexDirection": "row",
        "height": 60,
        "overflow": "hidden",
        "paddingTop": 0,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.1,
        "shadowRadius": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        nativeID="animatedComponent"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              className="icon-wrapper"
              testID="header.back"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                fill="#2F3945"
                focusable={false}
                height={24}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {},
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width={24}
              >
                <RNSVGGroup
                  fill={4281284933}
                  propList={
                    Array [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M8.5,12.8l5.7,5.6c0.4,0.4,1,0.4,1.4,0c0,0,0,0,0,0c0.4-0.4,0.4-1,0-1.4l-4.9-5l4.9-5c0.4-0.4,0.4-1,0-1.4c-0.2-0.2-0.4-0.3-0.7-0.3c-0.3,0-0.5,0.1-0.7,0.3l-5.7,5.6C8.1,11.7,8.1,12.3,8.5,12.8C8.5,12.7,8.5,12.7,8.5,12.8z"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "height": "100%",
            "justifyContent": "center",
            "marginLeft": 16,
            "paddingTop": 1.5,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly children 1`] = `
<View
  testID="header"
>
  <View
    testID="header.children"
  />
</View>
`;
