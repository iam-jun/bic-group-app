// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header component renders correctly 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with children 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    testID="header.children"
  />
</View>
`;

exports[`Header component renders correctly with props auto focus search 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 4,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.searchIcon"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props auto focus search 2`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 4,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.searchIcon"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "flexDirection": "row",
            "height": 60,
            "left": 0,
            "paddingLeft": 8,
            "paddingRight": 12,
            "position": "absolute",
            "right": 0,
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "opacity": 0,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "height": 48,
                    "justifyContent": "center",
                    "padding": 12,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 1,
            }
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "width": "0%",
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "height": 32,
                "overflow": "hidden",
                "width": "0%",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#E3E6F2",
                    "borderRadius": 24,
                    "borderWidth": 1,
                    "justifyContent": "center",
                    "paddingLeft": 8,
                    "paddingRight": 12,
                  },
                  Object {
                    "backgroundColor": undefined,
                    "flex": 1,
                  },
                  Object {
                    "height": 32,
                  },
                  false,
                ]
              }
              testID="search_input"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginRight": 8,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        testID="search_input.icon"
                      />
                    </View>
                  </View>
                </View>
                <TextInput
                  autoComplete="off"
                  autoFocus={true}
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  onSubmitEditing={[Function]}
                  placeholder="Search for groups or people..."
                  placeholderTextColor="#BAC0DE"
                  returnKeyType="search"
                  selectionColor="#767D93"
                  style={
                    Object {
                      "color": "#181C32",
                      "flex": 1,
                      "fontFamily": "BeVietnamPro-Light",
                      "fontSize": 13,
                      "height": "100%",
                    }
                  }
                  testID="search_input.input"
                  value=""
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props button props 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 8,
            },
            Object {
              "backgroundColor": "#F2F2F2",
            },
          ]
        }
        testID="header.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 8,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingVertical": 4,
              },
              undefined,
              Object {
                "backgroundColor": "#7335C0",
                "height": 36,
                "paddingHorizontal": 12,
              },
            ]
          }
          testID="button.content"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#212745",
                  "fontFamily": "BeVietnamPro-Medium",
                  "fontSize": 15,
                },
                Object {
                  "color": "#FFFFFF",
                },
                Array [
                  Object {
                    "textAlign": "center",
                  },
                  undefined,
                ],
              ]
            }
            testID="button.text"
          >
            Text Button
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props button text 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 8,
            },
            Object {
              "marginRight": 4,
            },
          ]
        }
        testID="header.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 8,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingVertical": 4,
              },
              undefined,
              Object {
                "backgroundColor": "#7335C0",
                "height": 36,
                "paddingHorizontal": 12,
              },
            ]
          }
          testID="button.content"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#212745",
                  "fontFamily": "BeVietnamPro-Medium",
                  "fontSize": 15,
                },
                Object {
                  "color": "#FFFFFF",
                },
                Array [
                  Object {
                    "textAlign": "center",
                  },
                  undefined,
                ],
              ]
            }
            testID="button.text"
          >
            Text Button
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props disable inset top 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": undefined,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props header ref 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "zIndex": 2,
      }
    }
    testID="header"
  >
    <View
      animatedStyle={
        Object {
          "value": Object {},
        }
      }
      collapsable={false}
      style={
        Object {
          "alignItems": "flex-end",
          "backgroundColor": "#FFFFFF",
          "elevation": 2,
          "flexDirection": "row",
          "minHeight": 44,
          "paddingTop": 0,
          "paddingVertical": 4,
          "shadowColor": "rgba(0, 0, 0, 1)",
          "shadowOffset": Object {
            "height": 2,
            "width": 0,
          },
          "shadowOpacity": 0.12,
          "shadowRadius": 1.5,
        }
      }
      testID="header.content"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "flex": 1,
            "flexDirection": "row",
            "overflow": "hidden",
            "paddingLeft": 8,
            "paddingRight": 8,
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 20,
              "left": 20,
              "right": 20,
              "top": 20,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="header.back.button"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Object {
                  "alignItems": "center",
                  "height": 44,
                  "justifyContent": "center",
                  "padding": 12,
                  "width": 44,
                },
                Object {
                  "backgroundColor": undefined,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View
                testID="header.back"
              />
            </View>
          </View>
        </View>
        <View
          animatedStyle={
            Object {
              "value": Object {},
            }
          }
          collapsable={false}
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
              "paddingVertical": 8,
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "height": 0,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#FF9800",
          "height": 40,
          "opacity": 1,
        }
      }
      testID="header.ref"
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props hide back 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props icon 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.icon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 4,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.icon"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props left icon 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 4,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.leftIcon"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props menu icon 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    style={
      Array [
        Object {
          "height": undefined,
        },
        Object {
          "alignItems": "flex-end",
          "backgroundColor": "#FFFFFF",
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingTop": 0,
        },
        Object {
          "borderBottomWidth": 0.5,
          "borderColor": "#E3E6F2",
          "elevation": 2,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 1,
        },
        undefined,
      ]
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "flex": 1,
              "height": "100%",
              "justifyContent": "center",
              "marginLeft": 4,
            },
            Object {},
          ]
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.menuIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.menuIcon"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on focus search 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 4,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.searchIcon"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on focus search 2`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 4,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.searchIcon"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "flexDirection": "row",
            "height": 60,
            "left": 0,
            "paddingLeft": 8,
            "paddingRight": 12,
            "position": "absolute",
            "right": 0,
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "opacity": 0,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "height": 48,
                    "justifyContent": "center",
                    "padding": 12,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 1,
            }
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "width": "0%",
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "height": 32,
                "overflow": "hidden",
                "width": "0%",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#E3E6F2",
                    "borderRadius": 24,
                    "borderWidth": 1,
                    "justifyContent": "center",
                    "paddingLeft": 8,
                    "paddingRight": 12,
                  },
                  Object {
                    "backgroundColor": undefined,
                    "flex": 1,
                  },
                  Object {
                    "height": 32,
                  },
                  false,
                ]
              }
              testID="search_input"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginRight": 8,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        testID="search_input.icon"
                      />
                    </View>
                  </View>
                </View>
                <TextInput
                  autoComplete="off"
                  autoFocus={false}
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  onSubmitEditing={[Function]}
                  placeholder="Search for groups or people..."
                  placeholderTextColor="#BAC0DE"
                  returnKeyType="search"
                  selectionColor="#767D93"
                  style={
                    Object {
                      "color": "#181C32",
                      "flex": 1,
                      "fontFamily": "BeVietnamPro-Light",
                      "fontSize": 13,
                      "height": "100%",
                    }
                  }
                  testID="search_input.input"
                  value=""
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on press button 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "borderRadius": 8,
            },
            Object {
              "marginRight": 4,
            },
          ]
        }
        testID="header.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 8,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingVertical": 4,
              },
              undefined,
              Object {
                "backgroundColor": "#7335C0",
                "height": 36,
                "paddingHorizontal": 12,
              },
            ]
          }
          testID="button.content"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#212745",
                  "fontFamily": "BeVietnamPro-Medium",
                  "fontSize": 15,
                },
                Object {
                  "color": "#FFFFFF",
                },
                Array [
                  Object {
                    "textAlign": "center",
                  },
                  undefined,
                ],
              ]
            }
            testID="button.text"
          >
            Text Button
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on press chat 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.icon_chat"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "center",
              },
              undefined,
            ]
          }
          testID="button_wrapper.content"
        >
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={false}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "borderRadius": 20,
                    "justifyContent": "center",
                    "marginRight": 4,
                    "padding": 8,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  testID="icon_chat.icon"
                >
                  <View
                    style={
                      Array [
                        Object {
                          "overflow": "hidden",
                        },
                        Object {
                          "height": 28,
                          "width": 28,
                        },
                      ]
                    }
                  >
                    <FastImageView
                      onFastImageError={[Function]}
                      resizeMode="cover"
                      size={28}
                      source={null}
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on press header 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on press icon 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.icon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 4,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.icon"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on press menu 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    style={
      Array [
        Object {
          "height": undefined,
        },
        Object {
          "alignItems": "flex-end",
          "backgroundColor": "#FFFFFF",
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingTop": 0,
        },
        Object {
          "borderBottomWidth": 0.5,
          "borderColor": "#E3E6F2",
          "elevation": 2,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 1,
        },
        undefined,
      ]
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "flex": 1,
              "height": "100%",
              "justifyContent": "center",
              "marginLeft": 4,
            },
            Object {},
          ]
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.menuIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.menuIcon"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on right press 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    style={
      Array [
        Object {
          "height": undefined,
        },
        Object {
          "alignItems": "flex-end",
          "backgroundColor": "#FFFFFF",
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingTop": 0,
        },
        Object {
          "borderBottomWidth": 0.5,
          "borderColor": "#E3E6F2",
          "elevation": 2,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 1,
        },
        undefined,
      ]
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "flex": 1,
              "height": "100%",
              "justifyContent": "center",
              "marginLeft": 4,
            },
            Object {},
          ]
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.rightIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F8F9FF",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.rightIcon"
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "justifyContent": "center",
                    },
                    Object {
                      "height": 31.200000000000003,
                      "width": 31.200000000000003,
                    },
                  ]
                }
              >
                <Text
                  style={
                    Object {
                      "fontSize": 23.400000000000002,
                      "textAlignVertical": "bottom",
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on show search 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 4,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.searchIcon"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on show search 2`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 4,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.searchIcon"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "flexDirection": "row",
            "height": 60,
            "left": 0,
            "paddingLeft": 8,
            "paddingRight": 12,
            "position": "absolute",
            "right": 0,
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "opacity": 0,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "height": 48,
                    "justifyContent": "center",
                    "padding": 12,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 1,
            }
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "width": "0%",
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "height": 32,
                "overflow": "hidden",
                "width": "0%",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#E3E6F2",
                    "borderRadius": 24,
                    "borderWidth": 1,
                    "justifyContent": "center",
                    "paddingLeft": 8,
                    "paddingRight": 12,
                  },
                  Object {
                    "backgroundColor": undefined,
                    "flex": 1,
                  },
                  Object {
                    "height": 32,
                  },
                  false,
                ]
              }
              testID="search_input"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginRight": 8,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        testID="search_input.icon"
                      />
                    </View>
                  </View>
                </View>
                <TextInput
                  autoComplete="off"
                  autoFocus={false}
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  onSubmitEditing={[Function]}
                  placeholder="Search for groups or people..."
                  placeholderTextColor="#BAC0DE"
                  returnKeyType="search"
                  selectionColor="#767D93"
                  style={
                    Object {
                      "color": "#181C32",
                      "flex": 1,
                      "fontFamily": "BeVietnamPro-Light",
                      "fontSize": 13,
                      "height": "100%",
                    }
                  }
                  testID="search_input.input"
                  value=""
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on submit search 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 4,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.searchIcon"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on submit search 2`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 4,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.searchIcon"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "flexDirection": "row",
            "height": 60,
            "left": 0,
            "paddingLeft": 8,
            "paddingRight": 12,
            "position": "absolute",
            "right": 0,
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "opacity": 0,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "height": 48,
                    "justifyContent": "center",
                    "padding": 12,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 1,
            }
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "width": "0%",
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "height": 32,
                "overflow": "hidden",
                "width": "0%",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#E3E6F2",
                    "borderRadius": 24,
                    "borderWidth": 1,
                    "justifyContent": "center",
                    "paddingLeft": 8,
                    "paddingRight": 12,
                  },
                  Object {
                    "backgroundColor": undefined,
                    "flex": 1,
                  },
                  Object {
                    "height": 32,
                  },
                  false,
                ]
              }
              testID="search_input"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginRight": 8,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        testID="search_input.icon"
                      />
                    </View>
                  </View>
                </View>
                <TextInput
                  autoComplete="off"
                  autoFocus={false}
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  onSubmitEditing={[Function]}
                  placeholder="Search for groups or people..."
                  placeholderTextColor="#BAC0DE"
                  returnKeyType="search"
                  selectionColor="#767D93"
                  style={
                    Object {
                      "color": "#181C32",
                      "flex": 1,
                      "fontFamily": "BeVietnamPro-Light",
                      "fontSize": 13,
                      "height": "100%",
                    }
                  }
                  testID="search_input.input"
                  value=""
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on text search 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 4,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.searchIcon"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props on text search 2`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 4,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.searchIcon"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "flexDirection": "row",
            "height": 60,
            "left": 0,
            "paddingLeft": 8,
            "paddingRight": 12,
            "position": "absolute",
            "right": 0,
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "opacity": 0,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "height": 48,
                    "justifyContent": "center",
                    "padding": 12,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 1,
            }
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "width": "0%",
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "height": 32,
                "overflow": "hidden",
                "width": "0%",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#E3E6F2",
                    "borderRadius": 24,
                    "borderWidth": 1,
                    "justifyContent": "center",
                    "paddingLeft": 8,
                    "paddingRight": 12,
                  },
                  Object {
                    "backgroundColor": undefined,
                    "flex": 1,
                  },
                  Object {
                    "height": 32,
                  },
                  false,
                ]
              }
              testID="search_input"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginRight": 8,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        testID="search_input.icon"
                      />
                    </View>
                  </View>
                </View>
                <TextInput
                  autoComplete="off"
                  autoFocus={false}
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  onSubmitEditing={[Function]}
                  placeholder="Search for groups or people..."
                  placeholderTextColor="#BAC0DE"
                  returnKeyType="search"
                  selectionColor="#767D93"
                  style={
                    Object {
                      "color": "#181C32",
                      "flex": 1,
                      "fontFamily": "BeVietnamPro-Light",
                      "fontSize": 13,
                      "height": "100%",
                    }
                  }
                  testID="search_input.input"
                  value=""
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props remove border and shadow 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props right icon 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    style={
      Array [
        Object {
          "height": undefined,
        },
        Object {
          "alignItems": "flex-end",
          "backgroundColor": "#FFFFFF",
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingTop": 0,
        },
        Object {
          "borderBottomWidth": 0.5,
          "borderColor": "#E3E6F2",
          "elevation": 2,
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
          "shadowOpacity": 0.1,
          "shadowRadius": 1,
        },
        undefined,
      ]
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "height": 60,
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 48,
                "justifyContent": "center",
                "padding": 12,
                "width": 48,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "flex": 1,
              "height": "100%",
              "justifyContent": "center",
              "marginLeft": 4,
            },
            Object {},
          ]
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.rightIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "borderRadius": 20,
                "height": 40,
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 8,
                "width": 40,
              },
              Object {
                "backgroundColor": "#F8F9FF",
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.rightIcon"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props search icon test ID 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 4,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.searchIcon"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props search input test ID 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 4,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.searchIcon"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props search input test ID 2`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 4,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.searchIcon"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "flexDirection": "row",
            "height": 60,
            "left": 0,
            "paddingLeft": 8,
            "paddingRight": 12,
            "position": "absolute",
            "right": 0,
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "opacity": 0,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "height": 48,
                    "justifyContent": "center",
                    "padding": 12,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 1,
            }
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "width": "0%",
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "height": 32,
                "overflow": "hidden",
                "width": "0%",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#E3E6F2",
                    "borderRadius": 24,
                    "borderWidth": 1,
                    "justifyContent": "center",
                    "paddingLeft": 8,
                    "paddingRight": 12,
                  },
                  Object {
                    "backgroundColor": undefined,
                    "flex": 1,
                  },
                  Object {
                    "height": 32,
                  },
                  false,
                ]
              }
              testID="search_input"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginRight": 8,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        testID="search_input.icon"
                      />
                    </View>
                  </View>
                </View>
                <TextInput
                  autoComplete="off"
                  autoFocus={false}
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  onSubmitEditing={[Function]}
                  placeholder="Search for groups or people..."
                  placeholderTextColor="#BAC0DE"
                  returnKeyType="search"
                  selectionColor="#767D93"
                  style={
                    Object {
                      "color": "#181C32",
                      "flex": 1,
                      "fontFamily": "BeVietnamPro-Light",
                      "fontSize": 13,
                      "height": "100%",
                    }
                  }
                  testID="search_input.input"
                  value=""
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props search placeholder 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 4,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.searchIcon"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props search placeholder 2`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      />
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 10,
            "left": 10,
            "right": 10,
            "top": 10,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.searchIcon.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "marginRight": 4,
                "padding": 4,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.searchIcon"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "flexDirection": "row",
            "height": 60,
            "left": 0,
            "paddingLeft": 8,
            "paddingRight": 12,
            "position": "absolute",
            "right": 0,
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 0,
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "opacity": 0,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "height": 48,
                    "justifyContent": "center",
                    "padding": 12,
                    "width": 48,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 1,
            }
          }
        >
          <View
            animatedStyle={
              Object {
                "value": Object {
                  "width": "0%",
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "height": 32,
                "overflow": "hidden",
                "width": "0%",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#FFFFFF",
                    "borderColor": "#E3E6F2",
                    "borderRadius": 24,
                    "borderWidth": 1,
                    "justifyContent": "center",
                    "paddingLeft": 8,
                    "paddingRight": 12,
                  },
                  Object {
                    "backgroundColor": undefined,
                    "flex": 1,
                  },
                  Object {
                    "height": 32,
                  },
                  false,
                ]
              }
              testID="search_input"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 10,
                      "left": 10,
                      "right": 10,
                      "top": 10,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        Object {
                          "marginRight": 8,
                        },
                        Object {
                          "backgroundColor": undefined,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          undefined,
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      <View
                        testID="search_input.icon"
                      />
                    </View>
                  </View>
                </View>
                <TextInput
                  autoComplete="off"
                  autoFocus={false}
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  onSubmitEditing={[Function]}
                  placeholder="Search Placeholder"
                  placeholderTextColor="#BAC0DE"
                  returnKeyType="search"
                  selectionColor="#767D93"
                  style={
                    Object {
                      "color": "#181C32",
                      "flex": 1,
                      "fontFamily": "BeVietnamPro-Light",
                      "fontSize": 13,
                      "height": "100%",
                    }
                  }
                  testID="search_input.input"
                  value=""
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props sub title 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#212745",
                  "fontFamily": "BeVietnamPro-Light",
                  "fontSize": 13,
                },
                Object {},
                Object {
                  "marginRight": 8,
                },
              ]
            }
            testID="header.subTitle"
          >
            Sub Title
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props sub title props 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#212745",
                  "fontFamily": "BeVietnamPro-Light",
                  "fontSize": 13,
                },
                Object {
                  "color": "#421187",
                },
                Object {
                  "marginRight": 8,
                },
              ]
            }
            testID="header.subTitle"
          >
            Sub Title
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props title 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#181C32",
                  "fontFamily": "BeVietnamPro-SemiBold",
                  "fontSize": 15,
                },
                Object {},
                Object {
                  "marginRight": 8,
                },
              ]
            }
            testID="header.text"
          >
            Title
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;

exports[`Header component renders correctly with props title props 1`] = `
<View
  style={
    Object {
      "zIndex": 2,
    }
  }
  testID="header"
>
  <View
    animatedStyle={
      Object {
        "value": Object {},
      }
    }
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#FFFFFF",
        "elevation": 2,
        "flexDirection": "row",
        "minHeight": 44,
        "paddingTop": 0,
        "paddingVertical": 4,
        "shadowColor": "rgba(0, 0, 0, 1)",
        "shadowOffset": Object {
          "height": 2,
          "width": 0,
        },
        "shadowOpacity": 0.12,
        "shadowRadius": 1.5,
      }
    }
    testID="header.content"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingLeft": 8,
          "paddingRight": 8,
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": false,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        hitSlop={
          Object {
            "bottom": 20,
            "left": 20,
            "right": 20,
            "top": 20,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID="header.back.button"
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
              Object {
                "alignItems": "center",
                "height": 44,
                "justifyContent": "center",
                "padding": 12,
                "width": 44,
              },
              Object {
                "backgroundColor": undefined,
              },
            ]
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <View
              testID="header.back"
            />
          </View>
        </View>
      </View>
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#181C32",
                  "fontFamily": "BeVietnamPro-SemiBold",
                  "fontSize": 15,
                },
                Object {
                  "color": "#421187",
                },
                Object {
                  "marginRight": 8,
                },
              ]
            }
            testID="header.text"
          >
            Title
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "height": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
    />
  </View>
</View>
`;
