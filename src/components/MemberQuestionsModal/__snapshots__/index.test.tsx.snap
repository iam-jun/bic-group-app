// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MemberQuestionsModal component renders correctly when show questions 1`] = `
<View
  animatedStyle={
    Object {
      "value": Object {},
    }
  }
  collapsable={false}
  entering={[Function]}
  exiting={[Function]}
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "height": "100%",
      "position": "absolute",
      "width": "100%",
      "zIndex": 100,
    }
  }
  testID="member_questions.view"
>
  <View
    style={
      Object {
        "backgroundColor": "#FFFFFF",
        "height": "100%",
        "position": "absolute",
        "width": "100%",
        "zIndex": 100,
      }
    }
  >
    <View
      style={
        Object {
          "zIndex": 2,
        }
      }
      testID="header"
    >
      <View
        animatedStyle={
          Object {
            "value": Object {},
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "flex-end",
            "backgroundColor": "#FFFFFF",
            "elevation": 2,
            "flexDirection": "row",
            "minHeight": 44,
            "paddingTop": 0,
            "paddingVertical": 4,
            "shadowColor": "rgba(0, 0, 0, 1)",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.12,
            "shadowRadius": 1.5,
          }
        }
        testID="header.content"
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#FFFFFF",
              "flex": 1,
              "flexDirection": "row",
              "overflow": "hidden",
              "paddingLeft": 8,
              "paddingRight": 8,
            }
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 20,
                "left": 20,
                "right": 20,
                "top": 20,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="header.back.button"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  Object {
                    "alignItems": "center",
                    "height": 44,
                    "justifyContent": "center",
                    "padding": 12,
                    "width": 44,
                  },
                  Object {
                    "backgroundColor": undefined,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    undefined,
                    undefined,
                    undefined,
                  ]
                }
              >
                <View
                  testID="header.back"
                />
              </View>
            </View>
          </View>
          <View
            animatedStyle={
              Object {
                "value": Object {},
              }
            }
            collapsable={false}
            style={
              Object {
                "flex": 1,
                "justifyContent": "center",
                "paddingVertical": 8,
              }
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": true,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={false}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <Text
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#181C32",
                      "fontFamily": "BeVietnamPro-SemiBold",
                      "fontSize": 15,
                    },
                    Object {},
                    Object {
                      "marginRight": 8,
                    },
                  ]
                }
                testID="header.text"
              >
                Membership questions
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "height": 0,
              "position": "absolute",
              "top": 0,
              "width": "100%",
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "alignSelf": "stretch",
            "backgroundColor": "#E3E6F2",
            "height": 8,
            "marginHorizontal": 0,
            "width": undefined,
          },
          Object {},
        ]
      }
      testID="divider"
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <ActivityIndicator
        color="#A4A9B7"
        testID="loading_indicator"
      />
    </View>
  </View>
</View>
`;
