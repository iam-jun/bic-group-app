// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContentNoPermission component given requireGroups is empty should render correctly 1`] = `
<View
  onLayout={[MockFunction]}
  style={
    Object {
      "flex": 1,
    }
  }
  testID="content_no_permission"
>
  <View
    style={
      Object {
        "zIndex": 2,
      }
    }
    testID="header"
  >
    <View
      animatedStyle={
        Object {
          "value": Object {},
        }
      }
      collapsable={false}
      style={
        Object {
          "alignItems": "flex-end",
          "backgroundColor": "#FFFFFF",
          "flexDirection": "row",
          "minHeight": 44,
          "paddingTop": 0,
          "paddingVertical": 4,
        }
      }
      testID="header.content"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "flex": 1,
            "flexDirection": "row",
            "overflow": "hidden",
            "paddingLeft": 8,
            "paddingRight": 8,
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 20,
              "left": 20,
              "right": 20,
              "top": 20,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="header.back.button"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Object {
                  "alignItems": "center",
                  "height": 44,
                  "justifyContent": "center",
                  "padding": 12,
                  "width": 44,
                },
                Object {
                  "backgroundColor": undefined,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View
                testID="header.back"
              />
            </View>
          </View>
        </View>
        <View
          animatedStyle={
            Object {
              "value": Object {},
            }
          }
          collapsable={false}
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
              "paddingVertical": 8,
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "height": 0,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "flex": 1,
        "paddingHorizontal": 64,
        "paddingTop": 140,
      }
    }
  >
    <SvgMock
      height={86}
      width={100}
    />
    <Text
      style={
        Array [
          Object {
            "color": "#181C32",
            "fontFamily": "BeVietnamPro-SemiBold",
            "fontSize": 20,
          },
          Object {},
          Object {
            "textAlign": "center",
          },
        ]
      }
    >
      Restricted permission!
    </Text>
    <Text
      style={
        Array [
          Object {
            "color": "#212745",
            "fontFamily": "BeVietnamPro-Light",
            "fontSize": 13,
          },
          Object {},
          Object {
            "marginTop": 6,
            "textAlign": "center",
          },
        ]
      }
    >
      Join at least one group to keep reading
    </Text>
    <Text
      style={
        Array [
          Object {
            "color": "#181C32",
            "fontFamily": "BeVietnamPro-SemiBold",
            "fontSize": 13,
          },
          Object {},
          Object {
            "marginTop": 4,
            "textAlign": "center",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`ContentNoPermission component given requireGroups is not empty should render correctly 1`] = `
<View
  onLayout={[MockFunction]}
  style={
    Object {
      "flex": 1,
    }
  }
  testID="content_no_permission"
>
  <View
    style={
      Object {
        "zIndex": 2,
      }
    }
    testID="header"
  >
    <View
      animatedStyle={
        Object {
          "value": Object {},
        }
      }
      collapsable={false}
      style={
        Object {
          "alignItems": "flex-end",
          "backgroundColor": "#FFFFFF",
          "flexDirection": "row",
          "minHeight": 44,
          "paddingTop": 0,
          "paddingVertical": 4,
        }
      }
      testID="header.content"
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "flex": 1,
            "flexDirection": "row",
            "overflow": "hidden",
            "paddingLeft": 8,
            "paddingRight": 8,
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 20,
              "left": 20,
              "right": 20,
              "top": 20,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="header.back.button"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
                Object {
                  "alignItems": "center",
                  "height": 44,
                  "justifyContent": "center",
                  "padding": 12,
                  "width": 44,
                },
                Object {
                  "backgroundColor": undefined,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              <View
                testID="header.back"
              />
            </View>
          </View>
        </View>
        <View
          animatedStyle={
            Object {
              "value": Object {},
            }
          }
          collapsable={false}
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
              "paddingVertical": 8,
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "height": 0,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "flex": 1,
        "paddingHorizontal": 64,
        "paddingTop": 140,
      }
    }
  >
    <SvgMock
      height={86}
      width={100}
    />
    <Text
      style={
        Array [
          Object {
            "color": "#181C32",
            "fontFamily": "BeVietnamPro-SemiBold",
            "fontSize": 20,
          },
          Object {},
          Object {
            "textAlign": "center",
          },
        ]
      }
    >
      Restricted permission!
    </Text>
    <Text
      style={
        Array [
          Object {
            "color": "#212745",
            "fontFamily": "BeVietnamPro-Light",
            "fontSize": 13,
          },
          Object {},
          Object {
            "marginTop": 6,
            "textAlign": "center",
          },
        ]
      }
    >
      Join at least one group to keep reading
      : 
    </Text>
    <Text
      style={
        Array [
          Object {
            "color": "#181C32",
            "fontFamily": "BeVietnamPro-SemiBold",
            "fontSize": 13,
          },
          Object {},
          Object {
            "marginTop": 4,
            "textAlign": "center",
          },
        ]
      }
    >
      <Text
        onPress={[Function]}
        style={
          Array [
            Object {
              "color": "#181C32",
              "fontFamily": "BeVietnamPro-SemiBold",
              "fontSize": 13,
            },
            Object {},
            undefined,
          ]
        }
        testID="content_no_permission.text_group_813a618c-33d6-4c01-8b40-1b98f5d77805"
      >
        Noti Phase 3 - Request Join
        , 
      </Text>
      <Text
        onPress={[Function]}
        style={
          Array [
            Object {
              "color": "#181C32",
              "fontFamily": "BeVietnamPro-SemiBold",
              "fontSize": 13,
            },
            Object {},
            undefined,
          ]
        }
        testID="content_no_permission.text_group_813a618c-33d6-4c01-8b40-1b98f5d77885"
      >
        Noti Phase 4 - Request Join
        .
      </Text>
    </Text>
  </View>
</View>
`;
