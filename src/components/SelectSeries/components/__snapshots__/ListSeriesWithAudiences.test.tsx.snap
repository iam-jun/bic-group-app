// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListSeriesWithAudiences component render correctly 1`] = `
<RCTScrollView
  ListEmptyComponent={[Function]}
  ListFooterComponent={
    <View
      style={
        Object {
          "marginBottom": 12,
        }
      }
    />
  }
  data={
    Array [
      Object {
        "audience": Object {
          "groups": Array [
            Object {
              "community_id": "e4b06eda-94d6-42d0-8829-d5380bc8f95b",
              "icon": "https://bic-stg-entity-attribute-s3-bucket.s3.ap-southeast-1.amazonaws.com/group/avatar/images/original/c015b7d3-7bf1-4b0e-9ca4-b73d3a7ff82e.jpg",
              "id": "e1cb33cf-ef6e-4d13-97d9-23ee95b7bf99",
              "is_community": true,
              "name": "Community.của.Linh",
              "privacy": "PUBLIC",
              "root_group_id": "e1cb33cf-ef6e-4d13-97d9-23ee95b7bf99",
            },
            Object {
              "community_id": "e4b8bf37-a218-4f73-bdfd-60b6b329852b",
              "icon": "https://bic-stg-entity-attribute-s3-bucket.s3.ap-southeast-1.amazonaws.com/static/group/default-avatar.png",
              "id": "8b103e63-0714-40bb-9f33-01a8a26fea77",
              "is_community": true,
              "name": "The Rock Crew",
              "privacy": "PUBLIC",
              "root_group_id": "8b103e63-0714-40bb-9f33-01a8a26fea77",
            },
          ],
        },
        "id": "b55cf275-d728-44a3-ba5e-cd17ab30cf6d",
        "title": "Test comment + react",
      },
      Object {
        "audience": Object {
          "groups": Array [
            Object {
              "community_id": "e4b06eda-94d6-42d0-8829-d5380bc8f95b",
              "icon": "https://bic-stg-entity-attribute-s3-bucket.s3.ap-southeast-1.amazonaws.com/group/avatar/images/original/c015b7d3-7bf1-4b0e-9ca4-b73d3a7ff82e.jpg",
              "id": "e1cb33cf-ef6e-4d13-97d9-23ee95b7bf99",
              "is_community": true,
              "name": "Community.của.Linh",
              "privacy": "PUBLIC",
              "root_group_id": "e1cb33cf-ef6e-4d13-97d9-23ee95b7bf99",
            },
            Object {
              "community_id": "e4b8bf37-a218-4f73-bdfd-60b6b329852b",
              "icon": "https://bic-stg-entity-attribute-s3-bucket.s3.ap-southeast-1.amazonaws.com/static/group/default-avatar.png",
              "id": "8b103e63-0714-40bb-9f33-01a8a26fea77",
              "is_community": true,
              "name": "The Rock",
              "privacy": "PUBLIC",
              "root_group_id": "8b103e63-0714-40bb-9f33-01a8a26fea77",
            },
            Object {
              "community_id": "e4b06eda-94d6-42d0-8829-d5380bc8f95b222",
              "icon": "https://bic-stg-entity-attribute-s3-bucket.s3.ap-southeast-1.amazonaws.com/group/avatar/images/original/c015b7d3-7bf1-4b0e-9ca4-b73d3a7ff82e.jpg",
              "id": "e1cb33cf-ef6e-4d13-97d9-23ee95b7bf99",
              "is_community": true,
              "name": "Community.của.Linh",
              "privacy": "PUBLIC",
              "root_group_id": "e1cb33cf-ef6e-4d13-97d9-23ee95b7bf99",
            },
            Object {
              "community_id": "e4b8bf37-a218-4f73-bdfd-44444",
              "icon": "https://bic-stg-entity-attribute-s3-bucket.s3.ap-southeast-1.amazonaws.com/static/group/default-avatar.png",
              "id": "8b103e63-0714-40bb-9f33-01a8a26fea77",
              "is_community": true,
              "name": "The Rock Creweeeuhwfhwehghekghkehgrhekjrhgkerhkghekrglejlrghkeljrglherklgjlrglejlgjrlgjlrjkglrj",
              "privacy": "PUBLIC",
              "root_group_id": "8b103e63-0714-40bb-9f33-01a8a26fea77",
            },
          ],
        },
        "id": "b55cf275-d728-44a3-ba5e-333333333",
        "title": "Test series so longgggggggggggggggg kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onEndReached={[MockFunction]}
  onEndReachedThreshold={0.1}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  viewabilityConfigCallbackPairs={Array []}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "paddingHorizontal": 16,
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingBottom": 6,
              "paddingTop": 12,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#212745",
                  "fontFamily": "BeVietnamPro-Light",
                  "fontSize": 14,
                },
                Object {
                  "color": "#282E53",
                },
                Object {
                  "flex": 1,
                },
              ]
            }
          >
            Test comment + react
          </Text>
          <View
            style={
              Object {
                "height": undefined,
                "paddingHorizontal": undefined,
                "paddingVertical": undefined,
                "width": 8,
              }
            }
          />
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="series_item.check_box"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "bottom": 2,
                      "left": 2,
                      "position": "absolute",
                      "right": 2,
                      "top": 2,
                    },
                    undefined,
                  ]
                }
              />
              <View
                accessibilityState={
                  Object {
                    "disabled": true,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={false}
                hitSlop={
                  Object {
                    "bottom": 10,
                    "left": 10,
                    "right": 10,
                    "top": 10,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      undefined,
                      Object {
                        "backgroundColor": undefined,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        undefined,
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    <View />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "flex-start",
              "flexDirection": "row",
              "flexWrap": "wrap",
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#EBF4FF",
                "borderRadius": 100,
                "flexDirection": "row",
                "height": 32,
                "justifyContent": "center",
                "marginRight": 8,
                "marginTop": 6,
                "opacity": 1,
                "paddingLeft": 4,
                "paddingRight": 8,
              }
            }
            testID="tag.item"
          >
            <Text
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#212745",
                    "fontFamily": "BeVietnamPro-Light",
                    "fontSize": 14,
                  },
                  Object {},
                  Array [
                    Object {
                      "color": "#007AFF",
                      "paddingLeft": 4,
                    },
                    undefined,
                  ],
                ]
              }
              testID="tag.label"
            >
              Community.của.Linh
            </Text>
          </View>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#EBF4FF",
                "borderRadius": 100,
                "flexDirection": "row",
                "height": 32,
                "justifyContent": "center",
                "marginRight": 8,
                "marginTop": 6,
                "opacity": 1,
                "paddingLeft": 4,
                "paddingRight": 8,
              }
            }
            testID="tag.item"
          >
            <Text
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#212745",
                    "fontFamily": "BeVietnamPro-Light",
                    "fontSize": 14,
                  },
                  Object {},
                  Array [
                    Object {
                      "color": "#007AFF",
                      "paddingLeft": 4,
                    },
                    undefined,
                  ],
                ]
              }
              testID="tag.label"
            >
              The Rock Crew
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "paddingHorizontal": 16,
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingBottom": 6,
              "paddingTop": 12,
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#212745",
                  "fontFamily": "BeVietnamPro-Light",
                  "fontSize": 14,
                },
                Object {
                  "color": "#282E53",
                },
                Object {
                  "flex": 1,
                },
              ]
            }
          >
            Test series so longgggggggggggggggg kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk
          </Text>
          <View
            style={
              Object {
                "height": undefined,
                "paddingHorizontal": undefined,
                "paddingVertical": undefined,
                "width": 8,
              }
            }
          />
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
            testID="series_item.check_box"
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "bottom": 2,
                      "left": 2,
                      "position": "absolute",
                      "right": 2,
                      "top": 2,
                    },
                    undefined,
                  ]
                }
              />
              <View
                accessibilityState={
                  Object {
                    "disabled": true,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={false}
                hitSlop={
                  Object {
                    "bottom": 10,
                    "left": 10,
                    "right": 10,
                    "top": 10,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      undefined,
                      Object {
                        "backgroundColor": undefined,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        undefined,
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    <View />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "flex-start",
              "flexDirection": "row",
              "flexWrap": "wrap",
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#EBF4FF",
                "borderRadius": 100,
                "flexDirection": "row",
                "height": 32,
                "justifyContent": "center",
                "marginRight": 8,
                "marginTop": 6,
                "opacity": 1,
                "paddingLeft": 4,
                "paddingRight": 8,
              }
            }
            testID="tag.item"
          >
            <Text
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#212745",
                    "fontFamily": "BeVietnamPro-Light",
                    "fontSize": 14,
                  },
                  Object {},
                  Array [
                    Object {
                      "color": "#007AFF",
                      "paddingLeft": 4,
                    },
                    undefined,
                  ],
                ]
              }
              testID="tag.label"
            >
              Community.của.Linh
            </Text>
          </View>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#EBF4FF",
                "borderRadius": 100,
                "flexDirection": "row",
                "height": 32,
                "justifyContent": "center",
                "marginRight": 8,
                "marginTop": 6,
                "opacity": 1,
                "paddingLeft": 4,
                "paddingRight": 8,
              }
            }
            testID="tag.item"
          >
            <Text
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#212745",
                    "fontFamily": "BeVietnamPro-Light",
                    "fontSize": 14,
                  },
                  Object {},
                  Array [
                    Object {
                      "color": "#007AFF",
                      "paddingLeft": 4,
                    },
                    undefined,
                  ],
                ]
              }
              testID="tag.label"
            >
              The Rock
            </Text>
          </View>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#EBF4FF",
                "borderRadius": 100,
                "flexDirection": "row",
                "height": 32,
                "justifyContent": "center",
                "marginRight": 8,
                "marginTop": 6,
                "opacity": 1,
                "paddingLeft": 4,
                "paddingRight": 8,
              }
            }
            testID="tag.item"
          >
            <Text
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#212745",
                    "fontFamily": "BeVietnamPro-Light",
                    "fontSize": 14,
                  },
                  Object {},
                  Array [
                    Object {
                      "color": "#007AFF",
                      "paddingLeft": 4,
                    },
                    undefined,
                  ],
                ]
              }
              testID="tag.label"
            >
              Community.của.Linh
            </Text>
          </View>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#EBF4FF",
                "borderRadius": 100,
                "flexDirection": "row",
                "height": 32,
                "justifyContent": "center",
                "marginRight": 8,
                "marginTop": 6,
                "opacity": 1,
                "paddingLeft": 4,
                "paddingRight": 8,
              }
            }
            testID="tag.item"
          >
            <Text
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#212745",
                    "fontFamily": "BeVietnamPro-Light",
                    "fontSize": 14,
                  },
                  Object {},
                  Array [
                    Object {
                      "color": "#007AFF",
                      "paddingLeft": 4,
                    },
                    undefined,
                  ],
                ]
              }
              testID="tag.label"
            >
              The Rock Creweeeuhwfhwehghekghkehgrhekjrhgkerhkghekrglejlrghkeljrglherklgjlrglejlgjrlgjlrjkglrj
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "marginBottom": 12,
          }
        }
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`ListSeriesWithAudiences component render correctly when data is empty 1`] = `
<RCTScrollView
  ListEmptyComponent={[Function]}
  ListFooterComponent={
    <View
      style={
        Object {
          "marginBottom": 12,
        }
      }
    />
  }
  data={Array []}
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onEndReached={[MockFunction]}
  onEndReachedThreshold={0.1}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  viewabilityConfigCallbackPairs={Array []}
>
  <View>
    <View
      style={
        Object {
          "alignItems": "center",
          "margin": 16,
        }
      }
      testID="no_search_results"
    >
      <View
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "aspectRatio": 1,
              "width": 150,
            },
          ]
        }
      >
        <FastImageView
          onFastImageError={[Function]}
          resizeMode="contain"
          source={
            Object {
              "testUri": "../../../assets/images/img_empty_search_post.png",
            }
          }
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
      </View>
      <Text
        style={
          Array [
            Object {
              "color": "#212745",
              "fontFamily": "BeVietnamPro-Light",
              "fontSize": 13,
            },
            Object {
              "color": "#353E6E",
            },
            Object {
              "textAlign": "center",
            },
          ]
        }
        testID="no_search_results.no_results_text"
      >
        Sorry, we couldn’t find anything related to your search.
      </Text>
    </View>
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "marginBottom": 12,
          }
        }
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`ListSeriesWithAudiences component render correctly when loading = true 1`] = `
<RCTScrollView
  ListEmptyComponent={[Function]}
  ListFooterComponent={
    <View
      style={
        Object {
          "marginBottom": 12,
        }
      }
    />
  }
  data={Array []}
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onEndReached={[MockFunction]}
  onEndReachedThreshold={0.1}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  viewabilityConfigCallbackPairs={Array []}
>
  <View>
    <ActivityIndicator
      color="#A4A9B7"
      style={
        Object {
          "marginTop": 24,
        }
      }
      testID="loading_indicator"
    />
    <View
      onLayout={[Function]}
    >
      <View
        style={
          Object {
            "marginBottom": 12,
          }
        }
      />
    </View>
  </View>
</RCTScrollView>
`;
